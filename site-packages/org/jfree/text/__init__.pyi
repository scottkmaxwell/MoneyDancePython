import java.awt
import java.awt.geom
import java.io
import org.jfree.ui


class TextMeasurer:
    def __init__(self) -> None: ...
    
    def getStringWidth(self, s: str, i: int, i2: int) -> float: ...
    
    
class G2TextMeasurer(TextMeasurer):
    def __init__(self, j: java.awt.Graphics2D) -> None: ...
    
    def getStringWidth(self, s: str, i: int, i2: int) -> float: ...
    
    
class TextBlock(java.io.Serializable):
    def __init__(self) -> None: ...
    
    def addLine(self, textLine: 'TextLine') -> None: ...
    
    def calculateBounds(self, j: java.awt.Graphics2D, f: float, f2: float, textBlockAnchor: 'TextBlockAnchor', f3: float, f4: float, f5: float) -> java.awt.Shape: ...
    
    def calculateDimensions(self, j: java.awt.Graphics2D) -> org.jfree.ui.Size2D: ...
    
    def draw(self, j: java.awt.Graphics2D, f: float, f2: float, textBlockAnchor: 'TextBlockAnchor') -> None: ...
    
    def equals(self, o: object) -> bool: ...
    
    def getLastLine(self) -> 'TextLine': ...
    
    def getLineAlignment(self) -> org.jfree.ui.HorizontalAlignment: ...
    
    def getLines(self) -> list: ...
    
    def hashCode(self) -> int: ...
    
    def setLineAlignment(self, o: org.jfree.ui.HorizontalAlignment) -> None: ...
    
    
class TextBlockAnchor(java.io.Serializable):
    BOTTOM_CENTER = 'TextBlockAnchor.BOTTOM_CENTER'
    BOTTOM_LEFT = 'TextBlockAnchor.BOTTOM_LEFT'
    BOTTOM_RIGHT = 'TextBlockAnchor.BOTTOM_RIGHT'
    CENTER = 'TextBlockAnchor.CENTER'
    CENTER_LEFT = 'TextBlockAnchor.CENTER_LEFT'
    CENTER_RIGHT = 'TextBlockAnchor.CENTER_RIGHT'
    TOP_CENTER = 'TextBlockAnchor.TOP_CENTER'
    TOP_LEFT = 'TextBlockAnchor.TOP_LEFT'
    TOP_RIGHT = 'TextBlockAnchor.TOP_RIGHT'
    
    def __init__(self) -> None: ...
    
    def equals(self, o: object) -> bool: ...
    
    def hashCode(self) -> int: ...
    
    def toString(self) -> str: ...
    
    
class TextBox(java.io.Serializable):
    def __init__(self) -> None: ...
    
    def draw(self, j: java.awt.Graphics2D, f: float, f2: float, o: org.jfree.ui.RectangleAnchor) -> None: ...
    
    def equals(self, o: object) -> bool: ...
    
    def getBackgroundPaint(self) -> java.awt.Paint: ...
    
    def getHeight(self, j: java.awt.Graphics2D) -> float: ...
    
    def getInteriorGap(self) -> org.jfree.ui.RectangleInsets: ...
    
    def getOutlinePaint(self) -> java.awt.Paint: ...
    
    def getOutlineStroke(self) -> java.awt.Stroke: ...
    
    def getShadowPaint(self) -> java.awt.Paint: ...
    
    def getShadowXOffset(self) -> float: ...
    
    def getShadowYOffset(self) -> float: ...
    
    def getTextBlock(self) -> TextBlock: ...
    
    def hashCode(self) -> int: ...
    
    def setBackgroundPaint(self, j: java.awt.Paint) -> None: ...
    
    def setInteriorGap(self, o: org.jfree.ui.RectangleInsets) -> None: ...
    
    def setOutlinePaint(self, j: java.awt.Paint) -> None: ...
    
    def setOutlineStroke(self, j: java.awt.Stroke) -> None: ...
    
    def setShadowPaint(self, j: java.awt.Paint) -> None: ...
    
    def setShadowXOffset(self, f: float) -> None: ...
    
    def setShadowYOffset(self, f: float) -> None: ...
    
    def setTextBlock(self, textBlock: TextBlock) -> None: ...
    
    
class TextFragment(java.io.Serializable):
    DEFAULT_FONT = 'java.awt.Font[family=Serif,name=Serif,style=plain,size=12]'
    DEFAULT_PAINT = 'java.awt.Color[r=0,g=0,b=0]'
    
    def __init__(self, s: str) -> None: ...
    
    def calculateBaselineOffset(self, j: java.awt.Graphics2D, o: org.jfree.ui.TextAnchor) -> float: ...
    
    def calculateDimensions(self, j: java.awt.Graphics2D) -> org.jfree.ui.Size2D: ...
    
    def draw(self, j: java.awt.Graphics2D, f: float, f2: float, o: org.jfree.ui.TextAnchor, f3: float, f4: float, f5: float) -> None: ...
    
    def equals(self, o: object) -> bool: ...
    
    def getBaselineOffset(self) -> float: ...
    
    def getFont(self) -> java.awt.Font: ...
    
    def getPaint(self) -> java.awt.Paint: ...
    
    def getText(self) -> str: ...
    
    def hashCode(self) -> int: ...
    
    
class TextLine(java.io.Serializable):
    def __init__(self) -> None: ...
    
    def addFragment(self, textFragment: TextFragment) -> None: ...
    
    def calculateDimensions(self, j: java.awt.Graphics2D) -> org.jfree.ui.Size2D: ...
    
    def draw(self, j: java.awt.Graphics2D, f: float, f2: float, o: org.jfree.ui.TextAnchor, f3: float, f4: float, f5: float) -> None: ...
    
    def equals(self, o: object) -> bool: ...
    
    def getFirstTextFragment(self) -> TextFragment: ...
    
    def getLastTextFragment(self) -> TextFragment: ...
    
    def hashCode(self) -> int: ...
    
    def removeFragment(self, textFragment: TextFragment) -> None: ...
    
    
class TextUtilities:
    def __init__(self) -> None: ...
    
    @staticmethod
    def calculateRotatedStringBounds(s: str, j: java.awt.Graphics2D, f: float, f2: float, f3: float, f4: float, f5: float) -> java.awt.Shape: ...
    
    @staticmethod
    def createTextBlock(s: str, j: java.awt.Font, j2: java.awt.Paint) -> TextBlock: ...
    
    @staticmethod
    def drawAlignedString(s: str, j: java.awt.Graphics2D, f: float, f2: float, o: org.jfree.ui.TextAnchor) -> java.awt.geom.Rectangle2D: ...
    
    @staticmethod
    def drawRotatedString(s: str, j: java.awt.Graphics2D, f: float, f2: float, f3: float) -> None: ...
    
    @staticmethod
    def getTextBounds(s: str, j: java.awt.Graphics2D, j2: java.awt.FontMetrics) -> java.awt.geom.Rectangle2D: ...
    
    @staticmethod
    def getUseFontMetricsGetStringBounds() -> bool: ...
    
    @staticmethod
    def isUseDrawRotatedStringWorkaround() -> bool: ...
    
    @staticmethod
    def setUseDrawRotatedStringWorkaround(b: bool) -> None: ...
    
    @staticmethod
    def setUseFontMetricsGetStringBounds(b: bool) -> None: ...
    
    
