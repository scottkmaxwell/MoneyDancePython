import java.awt
import java.awt.geom
import java.io
import java.lang
import org.jfree.chart.entity
import org.jfree.data
import org.jfree.text
import org.jfree.ui
import org.jfree.util


class AbstractBlock(java.lang.Cloneable, java.io.Serializable):
    def __init__(self) -> None: ...
    
    def arrange(self, j: java.awt.Graphics2D) -> org.jfree.ui.Size2D: ...
    
    def clone(self) -> object: ...
    
    def equals(self, o: object) -> bool: ...
    
    def getBorder(self) -> 'BlockBorder': ...
    
    def getBounds(self) -> java.awt.geom.Rectangle2D: ...
    
    def getContentXOffset(self) -> float: ...
    
    def getContentYOffset(self) -> float: ...
    
    def getFrame(self) -> 'BlockFrame': ...
    
    def getHeight(self) -> float: ...
    
    def getID(self) -> str: ...
    
    def getMargin(self) -> org.jfree.ui.RectangleInsets: ...
    
    def getPadding(self) -> org.jfree.ui.RectangleInsets: ...
    
    def getWidth(self) -> float: ...
    
    def setBorder(self, blockBorder: 'BlockBorder') -> None: ...
    
    def setBounds(self, j: java.awt.geom.Rectangle2D) -> None: ...
    
    def setFrame(self, blockFrame: 'BlockFrame') -> None: ...
    
    def setHeight(self, f: float) -> None: ...
    
    def setID(self, s: str) -> None: ...
    
    def setMargin(self, o: org.jfree.ui.RectangleInsets) -> None: ...
    
    def setPadding(self, o: org.jfree.ui.RectangleInsets) -> None: ...
    
    def setWidth(self, f: float) -> None: ...
    
    
class Arrangement:
    def __init__(self) -> None: ...
    
    def add(self, block: 'Block', o: object) -> None: ...
    
    def arrange(self, blockContainer: 'BlockContainer', j: java.awt.Graphics2D, rectangleConstraint: 'RectangleConstraint') -> org.jfree.ui.Size2D: ...
    
    def clear(self) -> None: ...
    
    
class Block(org.jfree.ui.Drawable):
    def __init__(self) -> None: ...
    
    def arrange(self, j: java.awt.Graphics2D) -> org.jfree.ui.Size2D: ...
    
    def getBounds(self) -> java.awt.geom.Rectangle2D: ...
    
    def getID(self) -> str: ...
    
    def setBounds(self, j: java.awt.geom.Rectangle2D) -> None: ...
    
    def setID(self, s: str) -> None: ...
    
    
class BlockFrame:
    def __init__(self) -> None: ...
    
    def draw(self, j: java.awt.Graphics2D, j2: java.awt.geom.Rectangle2D) -> None: ...
    
    def getInsets(self) -> org.jfree.ui.RectangleInsets: ...
    
    
class BlockBorder(BlockFrame, java.io.Serializable):
    NONE = 'org.jfree.chart.block.BlockBorder'
    
    def __init__(self) -> None: ...
    
    def draw(self, j: java.awt.Graphics2D, j2: java.awt.geom.Rectangle2D) -> None: ...
    
    def equals(self, o: object) -> bool: ...
    
    def getInsets(self) -> org.jfree.ui.RectangleInsets: ...
    
    def getPaint(self) -> java.awt.Paint: ...
    
    
class BlockContainer(AbstractBlock, Block, org.jfree.util.PublicCloneable):
    def __init__(self) -> None: ...
    
    def add(self, block: Block) -> None: ...
    
    def clear(self) -> None: ...
    
    def clone(self) -> object: ...
    
    def draw(self, j: java.awt.Graphics2D, j2: java.awt.geom.Rectangle2D) -> None: ...
    
    def equals(self, o: object) -> bool: ...
    
    def getArrangement(self) -> Arrangement: ...
    
    def getBlocks(self) -> list: ...
    
    def isEmpty(self) -> bool: ...
    
    def setArrangement(self, arrangement: Arrangement) -> None: ...
    
    
class EntityBlockParams:
    def __init__(self) -> None: ...
    
    def getGenerateEntities(self) -> bool: ...
    
    
class BlockParams(EntityBlockParams):
    def __init__(self) -> None: ...
    
    def getGenerateEntities(self) -> bool: ...
    
    def getTranslateX(self) -> float: ...
    
    def getTranslateY(self) -> float: ...
    
    def setGenerateEntities(self, b: bool) -> None: ...
    
    def setTranslateX(self, f: float) -> None: ...
    
    def setTranslateY(self, f: float) -> None: ...
    
    
class EntityBlockResult:
    def __init__(self) -> None: ...
    
    def getEntityCollection(self) -> org.jfree.chart.entity.EntityCollection: ...
    
    
class BlockResult(EntityBlockResult):
    def __init__(self) -> None: ...
    
    def getEntityCollection(self) -> org.jfree.chart.entity.EntityCollection: ...
    
    def setEntityCollection(self, o: org.jfree.chart.entity.EntityCollection) -> None: ...
    
    
class BorderArrangement(Arrangement, java.io.Serializable):
    def __init__(self) -> None: ...
    
    def add(self, block: Block, o: object) -> None: ...
    
    def arrange(self, blockContainer: BlockContainer, j: java.awt.Graphics2D, rectangleConstraint: 'RectangleConstraint') -> org.jfree.ui.Size2D: ...
    
    def clear(self) -> None: ...
    
    def equals(self, o: object) -> bool: ...
    
    
class CenterArrangement(Arrangement, java.io.Serializable):
    def __init__(self) -> None: ...
    
    def add(self, block: Block, o: object) -> None: ...
    
    def arrange(self, blockContainer: BlockContainer, j: java.awt.Graphics2D, rectangleConstraint: 'RectangleConstraint') -> org.jfree.ui.Size2D: ...
    
    def clear(self) -> None: ...
    
    def equals(self, o: object) -> bool: ...
    
    
class ColorBlock(AbstractBlock, Block):
    def __init__(self, j: java.awt.Paint, f: float, f2: float) -> None: ...
    
    def draw(self, j: java.awt.Graphics2D, j2: java.awt.geom.Rectangle2D) -> None: ...
    
    def equals(self, o: object) -> bool: ...
    
    def getPaint(self) -> java.awt.Paint: ...
    
    
class ColumnArrangement(Arrangement, java.io.Serializable):
    def __init__(self) -> None: ...
    
    def add(self, block: Block, o: object) -> None: ...
    
    def arrange(self, blockContainer: BlockContainer, j: java.awt.Graphics2D, rectangleConstraint: 'RectangleConstraint') -> org.jfree.ui.Size2D: ...
    
    def clear(self) -> None: ...
    
    def equals(self, o: object) -> bool: ...
    
    
class EmptyBlock(AbstractBlock, Block, org.jfree.util.PublicCloneable):
    def __init__(self, f: float, f2: float) -> None: ...
    
    def clone(self) -> object: ...
    
    def draw(self, j: java.awt.Graphics2D, j2: java.awt.geom.Rectangle2D) -> None: ...
    
    
class FlowArrangement(Arrangement, java.io.Serializable):
    def __init__(self) -> None: ...
    
    def add(self, block: Block, o: object) -> None: ...
    
    def arrange(self, blockContainer: BlockContainer, j: java.awt.Graphics2D, rectangleConstraint: 'RectangleConstraint') -> org.jfree.ui.Size2D: ...
    
    def clear(self) -> None: ...
    
    def equals(self, o: object) -> bool: ...
    
    
class GridArrangement(Arrangement, java.io.Serializable):
    def __init__(self, i: int, i2: int) -> None: ...
    
    def add(self, block: Block, o: object) -> None: ...
    
    def arrange(self, blockContainer: BlockContainer, j: java.awt.Graphics2D, rectangleConstraint: 'RectangleConstraint') -> org.jfree.ui.Size2D: ...
    
    def clear(self) -> None: ...
    
    def equals(self, o: object) -> bool: ...
    
    
class LabelBlock(AbstractBlock, Block, org.jfree.util.PublicCloneable):
    DEFAULT_PAINT = 'java.awt.Color[r=0,g=0,b=0]'
    
    def __init__(self, s: str) -> None: ...
    
    def clone(self) -> object: ...
    
    def draw(self, j: java.awt.Graphics2D, j2: java.awt.geom.Rectangle2D) -> None: ...
    
    def equals(self, o: object) -> bool: ...
    
    def getContentAlignmentPoint(self) -> org.jfree.text.TextBlockAnchor: ...
    
    def getFont(self) -> java.awt.Font: ...
    
    def getPaint(self) -> java.awt.Paint: ...
    
    def getTextAnchor(self) -> org.jfree.ui.RectangleAnchor: ...
    
    def getToolTipText(self) -> str: ...
    
    def getURLText(self) -> str: ...
    
    def setContentAlignmentPoint(self, o: org.jfree.text.TextBlockAnchor) -> None: ...
    
    def setFont(self, j: java.awt.Font) -> None: ...
    
    def setPaint(self, j: java.awt.Paint) -> None: ...
    
    def setTextAnchor(self, o: org.jfree.ui.RectangleAnchor) -> None: ...
    
    def setToolTipText(self, s: str) -> None: ...
    
    def setURLText(self, s: str) -> None: ...
    
    
class LengthConstraintType(java.io.Serializable):
    FIXED = 'LengthConstraintType.FIXED'
    NONE = 'LengthConstraintType.NONE'
    RANGE = 'RectangleConstraintType.RANGE'
    
    def __init__(self) -> None: ...
    
    def equals(self, o: object) -> bool: ...
    
    def hashCode(self) -> int: ...
    
    def toString(self) -> str: ...
    
    
class LineBorder(BlockFrame, java.io.Serializable):
    def __init__(self) -> None: ...
    
    def draw(self, j: java.awt.Graphics2D, j2: java.awt.geom.Rectangle2D) -> None: ...
    
    def equals(self, o: object) -> bool: ...
    
    def getInsets(self) -> org.jfree.ui.RectangleInsets: ...
    
    def getPaint(self) -> java.awt.Paint: ...
    
    def getStroke(self) -> java.awt.Stroke: ...
    
    
class RectangleConstraint:
    NONE = 'RectangleConstraint[LengthConstraintType.NONE: width=0.0, height=0.0]'
    
    def __init__(self, f: float, f2: float) -> None: ...
    
    def calculateConstrainedSize(self, o: org.jfree.ui.Size2D) -> org.jfree.ui.Size2D: ...
    
    def getHeight(self) -> float: ...
    
    def getHeightConstraintType(self) -> LengthConstraintType: ...
    
    def getHeightRange(self) -> org.jfree.data.Range: ...
    
    def getWidth(self) -> float: ...
    
    def getWidthConstraintType(self) -> LengthConstraintType: ...
    
    def getWidthRange(self) -> org.jfree.data.Range: ...
    
    def toFixedHeight(self, f: float) -> 'RectangleConstraint': ...
    
    def toFixedWidth(self, f: float) -> 'RectangleConstraint': ...
    
    def toRangeHeight(self, o: org.jfree.data.Range) -> 'RectangleConstraint': ...
    
    def toRangeWidth(self, o: org.jfree.data.Range) -> 'RectangleConstraint': ...
    
    def toString(self) -> str: ...
    
    def toUnconstrainedHeight(self) -> 'RectangleConstraint': ...
    
    def toUnconstrainedWidth(self) -> 'RectangleConstraint': ...
    
    
