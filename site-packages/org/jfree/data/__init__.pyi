import typing
import general
import java.io
import java.lang
import java.util
import org.jfree.util


class ComparableObjectItem(java.lang.Cloneable, java.lang.Comparable, java.io.Serializable):
    def __init__(self, j: java.lang.Comparable, o: object) -> None: ...
    
    def clone(self) -> object: ...
    
    def compareTo(self, o: object) -> int: ...
    
    def equals(self, o: object) -> bool: ...
    
    def hashCode(self) -> int: ...
    
    
class ComparableObjectSeries(general.Series):
    pass
    
class DataUtilities:
    def __init__(self) -> None: ...
    
    @staticmethod
    def calculateColumnTotal(values2D: 'Values2D', i: int) -> float: ...
    
    @staticmethod
    def calculateRowTotal(values2D: 'Values2D', i: int) -> float: ...
    
    @staticmethod
    def clone(t: typing.List[typing.List[float]]) -> typing.List[typing.List[float]]: ...
    
    @staticmethod
    def createNumberArray(t: typing.List[float]) -> typing.List[java.lang.Number]: ...
    
    @staticmethod
    def createNumberArray2D(t: typing.List[typing.List[float]]) -> typing.List[typing.List[java.lang.Number]]: ...
    
    @staticmethod
    def equal(t: typing.List[typing.List[float]], t2: typing.List[typing.List[float]]) -> bool: ...
    
    @staticmethod
    def getCumulativePercentages(keyedValues: 'KeyedValues') -> 'KeyedValues': ...
    
    
class Value:
    def __init__(self) -> None: ...
    
    def getValue(self) -> java.lang.Number: ...
    
    
class KeyedValue(Value):
    def __init__(self) -> None: ...
    
    def getKey(self) -> java.lang.Comparable: ...
    
    
class DefaultKeyedValue(KeyedValue, java.lang.Cloneable, org.jfree.util.PublicCloneable, java.io.Serializable):
    def __init__(self, j: java.lang.Comparable, j2: java.lang.Number) -> None: ...
    
    def clone(self) -> object: ...
    
    def equals(self, o: object) -> bool: ...
    
    def getKey(self) -> java.lang.Comparable: ...
    
    def getValue(self) -> java.lang.Number: ...
    
    def hashCode(self) -> int: ...
    
    def setValue(self, j: java.lang.Number) -> None: ...
    
    def toString(self) -> str: ...
    
    
class Values:
    def __init__(self) -> None: ...
    
    def getItemCount(self) -> int: ...
    
    def getValue(self, i: int) -> java.lang.Number: ...
    
    
class KeyedValues(Values):
    def __init__(self) -> None: ...
    
    def getIndex(self, j: java.lang.Comparable) -> int: ...
    
    def getKey(self, i: int) -> java.lang.Comparable: ...
    
    def getKeys(self) -> list: ...
    
    
class DefaultKeyedValues(KeyedValues, java.lang.Cloneable, org.jfree.util.PublicCloneable, java.io.Serializable):
    def __init__(self) -> None: ...
    
    def addValue(self, j: java.lang.Comparable, f: float) -> None: ...
    
    def clear(self) -> None: ...
    
    def clone(self) -> object: ...
    
    def equals(self, o: object) -> bool: ...
    
    def getIndex(self, j: java.lang.Comparable) -> int: ...
    
    def getItemCount(self) -> int: ...
    
    def getKey(self, i: int) -> java.lang.Comparable: ...
    
    def getKeys(self) -> list: ...
    
    def getValue(self, i: int) -> java.lang.Number: ...
    
    def hashCode(self) -> int: ...
    
    def insertValue(self, i: int, j: java.lang.Comparable, f: float) -> None: ...
    
    def removeValue(self, i: int) -> None: ...
    
    def setValue(self, j: java.lang.Comparable, f: float) -> None: ...
    
    def sortByKeys(self, o: org.jfree.util.SortOrder) -> None: ...
    
    def sortByValues(self, o: org.jfree.util.SortOrder) -> None: ...
    
    
class Values2D:
    def __init__(self) -> None: ...
    
    def getColumnCount(self) -> int: ...
    
    def getRowCount(self) -> int: ...
    
    def getValue(self, i: int, i2: int) -> java.lang.Number: ...
    
    
class KeyedValues2D(Values2D):
    def __init__(self) -> None: ...
    
    def getColumnIndex(self, j: java.lang.Comparable) -> int: ...
    
    def getColumnKey(self, i: int) -> java.lang.Comparable: ...
    
    def getColumnKeys(self) -> list: ...
    
    def getRowIndex(self, j: java.lang.Comparable) -> int: ...
    
    def getRowKey(self, i: int) -> java.lang.Comparable: ...
    
    def getRowKeys(self) -> list: ...
    
    
class DefaultKeyedValues2D(KeyedValues2D, org.jfree.util.PublicCloneable, java.lang.Cloneable, java.io.Serializable):
    def __init__(self) -> None: ...
    
    def addValue(self, j: java.lang.Number, j2: java.lang.Comparable, j3: java.lang.Comparable) -> None: ...
    
    def clear(self) -> None: ...
    
    def clone(self) -> object: ...
    
    def equals(self, o: object) -> bool: ...
    
    def getColumnCount(self) -> int: ...
    
    def getColumnIndex(self, j: java.lang.Comparable) -> int: ...
    
    def getColumnKey(self, i: int) -> java.lang.Comparable: ...
    
    def getColumnKeys(self) -> list: ...
    
    def getRowCount(self) -> int: ...
    
    def getRowIndex(self, j: java.lang.Comparable) -> int: ...
    
    def getRowKey(self, i: int) -> java.lang.Comparable: ...
    
    def getRowKeys(self) -> list: ...
    
    def getValue(self, i: int, i2: int) -> java.lang.Number: ...
    
    def hashCode(self) -> int: ...
    
    def removeColumn(self, i: int) -> None: ...
    
    def removeRow(self, i: int) -> None: ...
    
    def removeValue(self, j: java.lang.Comparable, j2: java.lang.Comparable) -> None: ...
    
    def setValue(self, j: java.lang.Number, j2: java.lang.Comparable, j3: java.lang.Comparable) -> None: ...
    
    
class DomainInfo:
    def __init__(self) -> None: ...
    
    def getDomainBounds(self, b: bool) -> 'Range': ...
    
    def getDomainLowerBound(self, b: bool) -> float: ...
    
    def getDomainUpperBound(self, b: bool) -> float: ...
    
    
class DomainOrder(java.io.Serializable):
    ASCENDING = 'DomainOrder.ASCENDING'
    DESCENDING = 'DomainOrder.DESCENDING'
    NONE = 'DomainOrder.NONE'
    
    def __init__(self) -> None: ...
    
    def equals(self, o: object) -> bool: ...
    
    def hashCode(self) -> int: ...
    
    def toString(self) -> str: ...
    
    
class KeyToGroupMap(java.lang.Cloneable, org.jfree.util.PublicCloneable, java.io.Serializable):
    def __init__(self) -> None: ...
    
    def clone(self) -> object: ...
    
    def equals(self, o: object) -> bool: ...
    
    def getGroup(self, j: java.lang.Comparable) -> java.lang.Comparable: ...
    
    def getGroupCount(self) -> int: ...
    
    def getGroupIndex(self, j: java.lang.Comparable) -> int: ...
    
    def getGroups(self) -> list: ...
    
    def getKeyCount(self, j: java.lang.Comparable) -> int: ...
    
    def mapKeyToGroup(self, j: java.lang.Comparable, j2: java.lang.Comparable) -> None: ...
    
    
class KeyedObject(java.lang.Cloneable, org.jfree.util.PublicCloneable, java.io.Serializable):
    def __init__(self, j: java.lang.Comparable, o: object) -> None: ...
    
    def clone(self) -> object: ...
    
    def equals(self, o: object) -> bool: ...
    
    def getKey(self) -> java.lang.Comparable: ...
    
    def getObject(self) -> object: ...
    
    def setObject(self, o: object) -> None: ...
    
    
class KeyedObjects(java.lang.Cloneable, org.jfree.util.PublicCloneable, java.io.Serializable):
    def __init__(self) -> None: ...
    
    def addObject(self, j: java.lang.Comparable, o: object) -> None: ...
    
    def clear(self) -> None: ...
    
    def clone(self) -> object: ...
    
    def equals(self, o: object) -> bool: ...
    
    def getIndex(self, j: java.lang.Comparable) -> int: ...
    
    def getItemCount(self) -> int: ...
    
    def getKey(self, i: int) -> java.lang.Comparable: ...
    
    def getKeys(self) -> list: ...
    
    def getObject(self, i: int) -> object: ...
    
    def hashCode(self) -> int: ...
    
    def insertValue(self, i: int, j: java.lang.Comparable, o: object) -> None: ...
    
    def removeValue(self, i: int) -> None: ...
    
    def setObject(self, j: java.lang.Comparable, o: object) -> None: ...
    
    
class KeyedObjects2D(java.lang.Cloneable, java.io.Serializable):
    def __init__(self) -> None: ...
    
    def addObject(self, o: object, j: java.lang.Comparable, j2: java.lang.Comparable) -> None: ...
    
    def clear(self) -> None: ...
    
    def clone(self) -> object: ...
    
    def equals(self, o: object) -> bool: ...
    
    def getColumnCount(self) -> int: ...
    
    def getColumnIndex(self, j: java.lang.Comparable) -> int: ...
    
    def getColumnKey(self, i: int) -> java.lang.Comparable: ...
    
    def getColumnKeys(self) -> list: ...
    
    def getObject(self, i: int, i2: int) -> object: ...
    
    def getRowCount(self) -> int: ...
    
    def getRowIndex(self, j: java.lang.Comparable) -> int: ...
    
    def getRowKey(self, i: int) -> java.lang.Comparable: ...
    
    def getRowKeys(self) -> list: ...
    
    def hashCode(self) -> int: ...
    
    def removeColumn(self, i: int) -> None: ...
    
    def removeObject(self, j: java.lang.Comparable, j2: java.lang.Comparable) -> None: ...
    
    def removeRow(self, i: int) -> None: ...
    
    def setObject(self, o: object, j: java.lang.Comparable, j2: java.lang.Comparable) -> None: ...
    
    
class KeyedValueComparator(java.util.Comparator):
    def __init__(self, keyedValueComparatorType: 'KeyedValueComparatorType', o: org.jfree.util.SortOrder) -> None: ...
    
    def compare(self, o: object, o2: object) -> int: ...
    
    def getOrder(self) -> org.jfree.util.SortOrder: ...
    
    def getType(self) -> 'KeyedValueComparatorType': ...
    
    
class KeyedValueComparatorType:
    BY_KEY = 'KeyedValueComparatorType.BY_KEY'
    BY_VALUE = 'KeyedValueComparatorType.BY_VALUE'
    
    def __init__(self) -> None: ...
    
    def equals(self, o: object) -> bool: ...
    
    def hashCode(self) -> int: ...
    
    def toString(self) -> str: ...
    
    
class Range(java.io.Serializable):
    def __init__(self, f: float, f2: float) -> None: ...
    
    @staticmethod
    def combine(range: 'Range', range2: 'Range') -> 'Range': ...
    
    def constrain(self, f: float) -> float: ...
    
    def contains(self, f: float) -> bool: ...
    
    def equals(self, o: object) -> bool: ...
    
    @staticmethod
    def expand(range: 'Range', f: float, f2: float) -> 'Range': ...
    
    @staticmethod
    def expandToInclude(range: 'Range', f: float) -> 'Range': ...
    
    def getCentralValue(self) -> float: ...
    
    def getLength(self) -> float: ...
    
    def getLowerBound(self) -> float: ...
    
    def getUpperBound(self) -> float: ...
    
    def hashCode(self) -> int: ...
    
    def intersects(self, range: 'Range') -> bool: ...
    
    @staticmethod
    def scale(range: 'Range', f: float) -> 'Range': ...
    
    @staticmethod
    def shift(range: 'Range', f: float) -> 'Range': ...
    
    def toString(self) -> str: ...
    
    
class RangeInfo:
    def __init__(self) -> None: ...
    
    def getRangeBounds(self, b: bool) -> Range: ...
    
    def getRangeLowerBound(self, b: bool) -> float: ...
    
    def getRangeUpperBound(self, b: bool) -> float: ...
    
    
class RangeType(java.io.Serializable):
    FULL = 'RangeType.FULL'
    NEGATIVE = 'RangeType.NEGATIVE'
    POSITIVE = 'RangeType.POSITIVE'
    
    def __init__(self) -> None: ...
    
    def equals(self, o: object) -> bool: ...
    
    def hashCode(self) -> int: ...
    
    def toString(self) -> str: ...
    
    
class UnknownKeyException(java.lang.IllegalArgumentException):
    def __init__(self, s: str) -> None: ...
    
    
