import java.beans
import java.io
import java.lang
import java.util
import javax.swing.table
import org.jfree.data
import org.jfree.data.general
import org.jfree.data.xy


class DateRange(org.jfree.data.Range):
    def __init__(self) -> None: ...
    
    def getLowerDate(self) -> java.util.Date: ...
    
    def getLowerMillis(self) -> int: ...
    
    def getUpperDate(self) -> java.util.Date: ...
    
    def getUpperMillis(self) -> int: ...
    
    def toString(self) -> str: ...
    
    
class TimePeriod(java.lang.Comparable):
    def __init__(self) -> None: ...
    
    def getEnd(self) -> java.util.Date: ...
    
    def getStart(self) -> java.util.Date: ...
    
    
class RegularTimePeriod(TimePeriod, java.lang.Comparable, 'org.jfree.chart.date.MonthConstants'):
    APRIL = 4
    AUGUST = 8
    DECEMBER = 12
    FEBRUARY = 2
    JANUARY = 1
    JULY = 7
    JUNE = 6
    MARCH = 3
    MAY = 5
    NOVEMBER = 11
    OCTOBER = 10
    SEPTEMBER = 9
    
    def __init__(self) -> None: ...
    
    @staticmethod
    def createInstance(j: java.lang.Class, j2: java.util.Date, j3: java.util.TimeZone, j4: java.util.Locale) -> 'RegularTimePeriod': ...
    
    @staticmethod
    def downsize(j: java.lang.Class) -> java.lang.Class: ...
    
    def getEnd(self) -> java.util.Date: ...
    
    def getFirstMillisecond(self) -> int: ...
    
    def getLastMillisecond(self) -> int: ...
    
    def getMiddleMillisecond(self) -> int: ...
    
    def getMillisecond(self, timePeriodAnchor: 'TimePeriodAnchor', j: java.util.Calendar) -> int: ...
    
    def getSerialIndex(self) -> int: ...
    
    def getStart(self) -> java.util.Date: ...
    
    def next(self) -> 'RegularTimePeriod': ...
    
    def peg(self, j: java.util.Calendar) -> None: ...
    
    def previous(self) -> 'RegularTimePeriod': ...
    
    @staticmethod
    def setCalendarInstancePrototype(j: java.util.Calendar) -> None: ...
    
    @staticmethod
    def setThreadLocalCalendarInstance(j: java.util.Calendar) -> None: ...
    
    def toString(self) -> str: ...
    
    
class Day(RegularTimePeriod, java.io.Serializable):
    APRIL = 4
    AUGUST = 8
    DECEMBER = 12
    FEBRUARY = 2
    JANUARY = 1
    JULY = 7
    JUNE = 6
    MARCH = 3
    MAY = 5
    NOVEMBER = 11
    OCTOBER = 10
    SEPTEMBER = 9
    
    def __init__(self) -> None: ...
    
    def compareTo(self, o: object) -> int: ...
    
    def equals(self, o: object) -> bool: ...
    
    def getDayOfMonth(self) -> int: ...
    
    def getFirstMillisecond(self) -> int: ...
    
    def getLastMillisecond(self) -> int: ...
    
    def getMonth(self) -> int: ...
    
    def getSerialDate(self) -> 'org.jfree.chart.date.SerialDate': ...
    
    def getSerialIndex(self) -> int: ...
    
    def getYear(self) -> int: ...
    
    def hashCode(self) -> int: ...
    
    def next(self) -> RegularTimePeriod: ...
    
    @staticmethod
    def parseDay(s: str) -> 'Day': ...
    
    def peg(self, j: java.util.Calendar) -> None: ...
    
    def previous(self) -> RegularTimePeriod: ...
    
    def toString(self) -> str: ...
    
    
class DynamicTimeSeriesCollection(org.jfree.data.xy.AbstractIntervalXYDataset, org.jfree.data.DomainInfo, org.jfree.data.RangeInfo):
    pass
    
class FixedMillisecond(RegularTimePeriod, java.io.Serializable):
    APRIL = 4
    AUGUST = 8
    DECEMBER = 12
    FEBRUARY = 2
    JANUARY = 1
    JULY = 7
    JUNE = 6
    MARCH = 3
    MAY = 5
    NOVEMBER = 11
    OCTOBER = 10
    SEPTEMBER = 9
    
    def __init__(self) -> None: ...
    
    def compareTo(self, o: object) -> int: ...
    
    def equals(self, o: object) -> bool: ...
    
    def getFirstMillisecond(self) -> int: ...
    
    def getLastMillisecond(self) -> int: ...
    
    def getMiddleMillisecond(self) -> int: ...
    
    def getSerialIndex(self) -> int: ...
    
    def getTime(self) -> java.util.Date: ...
    
    def hashCode(self) -> int: ...
    
    def next(self) -> RegularTimePeriod: ...
    
    def peg(self, j: java.util.Calendar) -> None: ...
    
    def previous(self) -> RegularTimePeriod: ...
    
    
class Hour(RegularTimePeriod, java.io.Serializable):
    APRIL = 4
    AUGUST = 8
    DECEMBER = 12
    FEBRUARY = 2
    FIRST_HOUR_IN_DAY = 0
    JANUARY = 1
    JULY = 7
    JUNE = 6
    LAST_HOUR_IN_DAY = 23
    MARCH = 3
    MAY = 5
    NOVEMBER = 11
    OCTOBER = 10
    SEPTEMBER = 9
    
    def __init__(self) -> None: ...
    
    def compareTo(self, o: object) -> int: ...
    
    def equals(self, o: object) -> bool: ...
    
    def getDay(self) -> Day: ...
    
    def getDayOfMonth(self) -> int: ...
    
    def getFirstMillisecond(self) -> int: ...
    
    def getHour(self) -> int: ...
    
    def getLastMillisecond(self) -> int: ...
    
    def getMonth(self) -> int: ...
    
    def getSerialIndex(self) -> int: ...
    
    def getYear(self) -> int: ...
    
    def hashCode(self) -> int: ...
    
    def next(self) -> RegularTimePeriod: ...
    
    @staticmethod
    def parseHour(s: str) -> 'Hour': ...
    
    def peg(self, j: java.util.Calendar) -> None: ...
    
    def previous(self) -> RegularTimePeriod: ...
    
    def toString(self) -> str: ...
    
    
class Millisecond(RegularTimePeriod, java.io.Serializable):
    APRIL = 4
    AUGUST = 8
    DECEMBER = 12
    FEBRUARY = 2
    FIRST_MILLISECOND_IN_SECOND = 0
    JANUARY = 1
    JULY = 7
    JUNE = 6
    LAST_MILLISECOND_IN_SECOND = 999
    MARCH = 3
    MAY = 5
    NOVEMBER = 11
    OCTOBER = 10
    SEPTEMBER = 9
    
    def __init__(self) -> None: ...
    
    def compareTo(self, o: object) -> int: ...
    
    def equals(self, o: object) -> bool: ...
    
    def getFirstMillisecond(self) -> int: ...
    
    def getLastMillisecond(self) -> int: ...
    
    def getMillisecond(self) -> int: ...
    
    def getSecond(self) -> 'Second': ...
    
    def getSerialIndex(self) -> int: ...
    
    def hashCode(self) -> int: ...
    
    def next(self) -> RegularTimePeriod: ...
    
    def peg(self, j: java.util.Calendar) -> None: ...
    
    def previous(self) -> RegularTimePeriod: ...
    
    
class Minute(RegularTimePeriod, java.io.Serializable):
    APRIL = 4
    AUGUST = 8
    DECEMBER = 12
    FEBRUARY = 2
    FIRST_MINUTE_IN_HOUR = 0
    JANUARY = 1
    JULY = 7
    JUNE = 6
    LAST_MINUTE_IN_HOUR = 59
    MARCH = 3
    MAY = 5
    NOVEMBER = 11
    OCTOBER = 10
    SEPTEMBER = 9
    
    def __init__(self) -> None: ...
    
    def compareTo(self, o: object) -> int: ...
    
    def equals(self, o: object) -> bool: ...
    
    def getDay(self) -> Day: ...
    
    def getFirstMillisecond(self) -> int: ...
    
    def getHour(self) -> Hour: ...
    
    def getHourValue(self) -> int: ...
    
    def getLastMillisecond(self) -> int: ...
    
    def getMinute(self) -> int: ...
    
    def getSerialIndex(self) -> int: ...
    
    def hashCode(self) -> int: ...
    
    def next(self) -> RegularTimePeriod: ...
    
    @staticmethod
    def parseMinute(s: str) -> 'Minute': ...
    
    def peg(self, j: java.util.Calendar) -> None: ...
    
    def previous(self) -> RegularTimePeriod: ...
    
    
class Month(RegularTimePeriod, java.io.Serializable):
    APRIL = 4
    AUGUST = 8
    DECEMBER = 12
    FEBRUARY = 2
    JANUARY = 1
    JULY = 7
    JUNE = 6
    MARCH = 3
    MAY = 5
    NOVEMBER = 11
    OCTOBER = 10
    SEPTEMBER = 9
    
    def __init__(self) -> None: ...
    
    def compareTo(self, o: object) -> int: ...
    
    def equals(self, o: object) -> bool: ...
    
    def getFirstMillisecond(self) -> int: ...
    
    def getLastMillisecond(self) -> int: ...
    
    def getMonth(self) -> int: ...
    
    def getSerialIndex(self) -> int: ...
    
    def getYear(self) -> 'Year': ...
    
    def getYearValue(self) -> int: ...
    
    def hashCode(self) -> int: ...
    
    def next(self) -> RegularTimePeriod: ...
    
    @staticmethod
    def parseMonth(s: str) -> 'Month': ...
    
    def peg(self, j: java.util.Calendar) -> None: ...
    
    def previous(self) -> RegularTimePeriod: ...
    
    def toString(self) -> str: ...
    
    
class MovingAverage:
    def __init__(self) -> None: ...
    
    @staticmethod
    def createMovingAverage(o: org.jfree.data.xy.XYDataset, s: str, i: int, i2: int) -> org.jfree.data.xy.XYDataset: ...
    
    @staticmethod
    def createPointMovingAverage(timeSeries: 'TimeSeries', s: str, i: int) -> 'TimeSeries': ...
    
    
class Quarter(RegularTimePeriod, java.io.Serializable):
    APRIL = 4
    AUGUST = 8
    DECEMBER = 12
    FEBRUARY = 2
    FIRST_MONTH_IN_QUARTER = "array('i', [0, 1, 4, 7, 10])"
    FIRST_QUARTER = 1
    JANUARY = 1
    JULY = 7
    JUNE = 6
    LAST_MONTH_IN_QUARTER = "array('i', [0, 3, 6, 9, 12])"
    LAST_QUARTER = 4
    MARCH = 3
    MAY = 5
    NOVEMBER = 11
    OCTOBER = 10
    SEPTEMBER = 9
    
    def __init__(self) -> None: ...
    
    def compareTo(self, o: object) -> int: ...
    
    def equals(self, o: object) -> bool: ...
    
    def getFirstMillisecond(self) -> int: ...
    
    def getLastMillisecond(self) -> int: ...
    
    def getQuarter(self) -> int: ...
    
    def getSerialIndex(self) -> int: ...
    
    def getYear(self) -> 'Year': ...
    
    def getYearValue(self) -> int: ...
    
    def hashCode(self) -> int: ...
    
    def next(self) -> RegularTimePeriod: ...
    
    @staticmethod
    def parseQuarter(s: str) -> 'Quarter': ...
    
    def peg(self, j: java.util.Calendar) -> None: ...
    
    def previous(self) -> RegularTimePeriod: ...
    
    def toString(self) -> str: ...
    
    
class Second(RegularTimePeriod, java.io.Serializable):
    APRIL = 4
    AUGUST = 8
    DECEMBER = 12
    FEBRUARY = 2
    FIRST_SECOND_IN_MINUTE = 0
    JANUARY = 1
    JULY = 7
    JUNE = 6
    LAST_SECOND_IN_MINUTE = 59
    MARCH = 3
    MAY = 5
    NOVEMBER = 11
    OCTOBER = 10
    SEPTEMBER = 9
    
    def __init__(self) -> None: ...
    
    def compareTo(self, o: object) -> int: ...
    
    def equals(self, o: object) -> bool: ...
    
    def getFirstMillisecond(self) -> int: ...
    
    def getLastMillisecond(self) -> int: ...
    
    def getMinute(self) -> Minute: ...
    
    def getSecond(self) -> int: ...
    
    def getSerialIndex(self) -> int: ...
    
    def hashCode(self) -> int: ...
    
    def next(self) -> RegularTimePeriod: ...
    
    @staticmethod
    def parseSecond(s: str) -> 'Second': ...
    
    def peg(self, j: java.util.Calendar) -> None: ...
    
    def previous(self) -> RegularTimePeriod: ...
    
    
class SimpleTimePeriod(TimePeriod, java.lang.Comparable, java.io.Serializable):
    def __init__(self, i: int, i2: int) -> None: ...
    
    def compareTo(self, o: object) -> int: ...
    
    def equals(self, o: object) -> bool: ...
    
    def getEnd(self) -> java.util.Date: ...
    
    def getEndMillis(self) -> int: ...
    
    def getStart(self) -> java.util.Date: ...
    
    def getStartMillis(self) -> int: ...
    
    def hashCode(self) -> int: ...
    
    
class TimePeriodAnchor(java.io.Serializable):
    END = 'TimePeriodAnchor.END'
    MIDDLE = 'TimePeriodAnchor.MIDDLE'
    START = 'TimePeriodAnchor.START'
    
    def __init__(self) -> None: ...
    
    def equals(self, o: object) -> bool: ...
    
    def hashCode(self) -> int: ...
    
    def toString(self) -> str: ...
    
    
class TimePeriodFormatException(java.lang.IllegalArgumentException):
    def __init__(self, s: str) -> None: ...
    
    
class TimePeriodValue(java.lang.Cloneable, java.io.Serializable):
    def __init__(self, timePeriod: TimePeriod, f: float) -> None: ...
    
    def clone(self) -> object: ...
    
    def equals(self, o: object) -> bool: ...
    
    def getPeriod(self) -> TimePeriod: ...
    
    def getValue(self) -> java.lang.Number: ...
    
    def hashCode(self) -> int: ...
    
    def setValue(self, j: java.lang.Number) -> None: ...
    
    def toString(self) -> str: ...
    
    
class TimePeriodValues(org.jfree.data.general.Series):
    pass
    
class TimePeriodValuesCollection(org.jfree.data.xy.AbstractIntervalXYDataset, org.jfree.data.DomainInfo):
    pass
    
class TimeSeries(org.jfree.data.general.Series):
    pass
    
class TimeSeriesCollection(org.jfree.data.xy.AbstractIntervalXYDataset, org.jfree.data.DomainInfo, org.jfree.data.xy.XYDomainInfo, org.jfree.data.xy.XYRangeInfo, java.beans.VetoableChangeListener):
    pass
    
class TimeSeriesDataItem(java.lang.Cloneable, java.lang.Comparable, java.io.Serializable):
    def __init__(self, regularTimePeriod: RegularTimePeriod, f: float) -> None: ...
    
    def clone(self) -> object: ...
    
    def compareTo(self, o: object) -> int: ...
    
    def equals(self, o: object) -> bool: ...
    
    def getPeriod(self) -> RegularTimePeriod: ...
    
    def getValue(self) -> java.lang.Number: ...
    
    def hashCode(self) -> int: ...
    
    def setValue(self, j: java.lang.Number) -> None: ...
    
    
class TimeSeriesTableModel(javax.swing.table.AbstractTableModel, org.jfree.data.general.SeriesChangeListener):
    pass
    
class TimeTableXYDataset(org.jfree.data.xy.AbstractIntervalXYDataset, 'org.jfree.chart.util.PublicCloneable', org.jfree.data.DomainInfo, org.jfree.data.xy.TableXYDataset):
    pass
    
class Week(RegularTimePeriod, java.io.Serializable):
    APRIL = 4
    AUGUST = 8
    DECEMBER = 12
    FEBRUARY = 2
    FIRST_WEEK_IN_YEAR = 1
    JANUARY = 1
    JULY = 7
    JUNE = 6
    LAST_WEEK_IN_YEAR = 53
    MARCH = 3
    MAY = 5
    NOVEMBER = 11
    OCTOBER = 10
    SEPTEMBER = 9
    
    def __init__(self) -> None: ...
    
    def compareTo(self, o: object) -> int: ...
    
    def equals(self, o: object) -> bool: ...
    
    def getFirstMillisecond(self) -> int: ...
    
    def getLastMillisecond(self) -> int: ...
    
    def getSerialIndex(self) -> int: ...
    
    def getWeek(self) -> int: ...
    
    def getYear(self) -> 'Year': ...
    
    def getYearValue(self) -> int: ...
    
    def hashCode(self) -> int: ...
    
    def next(self) -> RegularTimePeriod: ...
    
    @staticmethod
    def parseWeek(s: str) -> 'Week': ...
    
    def peg(self, j: java.util.Calendar) -> None: ...
    
    def previous(self) -> RegularTimePeriod: ...
    
    def toString(self) -> str: ...
    
    
class Year(RegularTimePeriod, java.io.Serializable):
    APRIL = 4
    AUGUST = 8
    DECEMBER = 12
    FEBRUARY = 2
    JANUARY = 1
    JULY = 7
    JUNE = 6
    MARCH = 3
    MAXIMUM_YEAR = 9999
    MAY = 5
    MINIMUM_YEAR = -9999
    NOVEMBER = 11
    OCTOBER = 10
    SEPTEMBER = 9
    
    def __init__(self) -> None: ...
    
    def compareTo(self, o: object) -> int: ...
    
    def equals(self, o: object) -> bool: ...
    
    def getFirstMillisecond(self) -> int: ...
    
    def getLastMillisecond(self) -> int: ...
    
    def getSerialIndex(self) -> int: ...
    
    def getYear(self) -> int: ...
    
    def hashCode(self) -> int: ...
    
    def next(self) -> RegularTimePeriod: ...
    
    @staticmethod
    def parseYear(s: str) -> 'Year': ...
    
    def peg(self, j: java.util.Calendar) -> None: ...
    
    def previous(self) -> RegularTimePeriod: ...
    
    def toString(self) -> str: ...
    
    
