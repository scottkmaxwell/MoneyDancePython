import typing
import java.io
import java.lang
import java.util
import javax.swing.table
import org.jfree.data
import org.jfree.data.general
import org.jfree.util


class XYDataset(org.jfree.data.general.SeriesDataset):
    pass
    
class AbstractXYDataset(XYDataset, org.jfree.data.general.AbstractSeriesDataset):
    pass
    
class IntervalXYDataset(XYDataset):
    pass
    
class AbstractIntervalXYDataset(AbstractXYDataset, IntervalXYDataset):
    pass
    
class XYZDataset(XYDataset):
    pass
    
class AbstractXYZDataset(AbstractXYDataset, XYZDataset):
    pass
    
class TableXYDataset(XYDataset):
    pass
    
class CategoryTableXYDataset(AbstractIntervalXYDataset, TableXYDataset, org.jfree.data.DomainInfo, org.jfree.util.PublicCloneable):
    pass
    
class OHLCDataset(XYDataset):
    pass
    
class DefaultHighLowDataset(AbstractXYDataset, OHLCDataset, org.jfree.util.PublicCloneable):
    pass
    
class DefaultIntervalXYDataset(AbstractIntervalXYDataset, org.jfree.util.PublicCloneable):
    pass
    
class DefaultOHLCDataset(AbstractXYDataset, OHLCDataset, org.jfree.util.PublicCloneable):
    pass
    
class DefaultTableXYDataset(AbstractIntervalXYDataset, TableXYDataset, org.jfree.data.DomainInfo, org.jfree.util.PublicCloneable):
    pass
    
class WindDataset(XYDataset):
    pass
    
class DefaultWindDataset(AbstractXYDataset, WindDataset, org.jfree.util.PublicCloneable):
    pass
    
class DefaultXYDataset(AbstractXYDataset, org.jfree.util.PublicCloneable):
    pass
    
class DefaultXYZDataset(AbstractXYZDataset, org.jfree.util.PublicCloneable):
    pass
    
class IntervalXYDelegate(org.jfree.data.general.DatasetChangeListener, org.jfree.data.DomainInfo, java.io.Serializable, java.lang.Cloneable, org.jfree.util.PublicCloneable):
    def __init__(self, xYDataset: XYDataset) -> None: ...
    
    def clone(self) -> object: ...
    
    def datasetChanged(self, o: org.jfree.data.general.DatasetChangeEvent) -> None: ...
    
    def equals(self, o: object) -> bool: ...
    
    def getDomainBounds(self, b: bool) -> org.jfree.data.Range: ...
    
    def getDomainLowerBound(self, b: bool) -> float: ...
    
    def getDomainUpperBound(self, b: bool) -> float: ...
    
    def getEndX(self, i: int, i2: int) -> java.lang.Number: ...
    
    def getEndXValue(self, i: int, i2: int) -> float: ...
    
    def getFixedIntervalWidth(self) -> float: ...
    
    def getIntervalPositionFactor(self) -> float: ...
    
    def getIntervalWidth(self) -> float: ...
    
    def getStartX(self, i: int, i2: int) -> java.lang.Number: ...
    
    def getStartXValue(self, i: int, i2: int) -> float: ...
    
    def hashCode(self) -> int: ...
    
    def isAutoWidth(self) -> bool: ...
    
    def setAutoWidth(self, b: bool) -> None: ...
    
    def setFixedIntervalWidth(self, f: float) -> None: ...
    
    def setIntervalPositionFactor(self, f: float) -> None: ...
    
    
class IntervalXYZDataset(XYZDataset):
    pass
    
class MatrixSeries(org.jfree.data.general.Series):
    pass
    
class MatrixSeriesCollection(AbstractXYZDataset, org.jfree.util.PublicCloneable):
    pass
    
class NormalizedMatrixSeries(MatrixSeries):
    pass
    
class OHLCDataItem(java.lang.Comparable, java.io.Serializable):
    def __init__(self, j: java.util.Date, f: float, f2: float, f3: float, f4: float, f5: float) -> None: ...
    
    def compareTo(self, o: object) -> int: ...
    
    def equals(self, o: object) -> bool: ...
    
    def getClose(self) -> java.lang.Number: ...
    
    def getDate(self) -> java.util.Date: ...
    
    def getHigh(self) -> java.lang.Number: ...
    
    def getLow(self) -> java.lang.Number: ...
    
    def getOpen(self) -> java.lang.Number: ...
    
    def getVolume(self) -> java.lang.Number: ...
    
    
class Vector(java.io.Serializable):
    def __init__(self, f: float, f2: float) -> None: ...
    
    def equals(self, o: object) -> bool: ...
    
    def getAngle(self) -> float: ...
    
    def getLength(self) -> float: ...
    
    def getX(self) -> float: ...
    
    def getY(self) -> float: ...
    
    def hashCode(self) -> int: ...
    
    
class VectorDataItem(org.jfree.data.ComparableObjectItem):
    def __init__(self, f: float, f2: float, f3: float, f4: float) -> None: ...
    
    def getVector(self) -> Vector: ...
    
    def getVectorX(self) -> float: ...
    
    def getVectorY(self) -> float: ...
    
    def getXValue(self) -> float: ...
    
    def getYValue(self) -> float: ...
    
    
class VectorSeries(org.jfree.data.ComparableObjectSeries):
    pass
    
class VectorXYDataset(XYDataset):
    pass
    
class VectorSeriesCollection(AbstractXYDataset, VectorXYDataset, org.jfree.util.PublicCloneable):
    pass
    
class XIntervalDataItem(org.jfree.data.ComparableObjectItem):
    def __init__(self, f: float, f2: float, f3: float, f4: float) -> None: ...
    
    def getX(self) -> java.lang.Number: ...
    
    def getXHighValue(self) -> float: ...
    
    def getXLowValue(self) -> float: ...
    
    def getYValue(self) -> float: ...
    
    
class XIntervalSeries(org.jfree.data.ComparableObjectSeries):
    pass
    
class XIntervalSeriesCollection(AbstractIntervalXYDataset, org.jfree.util.PublicCloneable):
    pass
    
class XYBarDataset(AbstractIntervalXYDataset, org.jfree.data.general.DatasetChangeListener, org.jfree.util.PublicCloneable):
    pass
    
class XYCoordinate(java.lang.Comparable, java.io.Serializable):
    def __init__(self) -> None: ...
    
    def compareTo(self, o: object) -> int: ...
    
    def equals(self, o: object) -> bool: ...
    
    def getX(self) -> float: ...
    
    def getY(self) -> float: ...
    
    def hashCode(self) -> int: ...
    
    def toString(self) -> str: ...
    
    
class XYDataItem(java.lang.Cloneable, java.lang.Comparable, java.io.Serializable):
    def __init__(self, f: float, f2: float) -> None: ...
    
    def clone(self) -> object: ...
    
    def compareTo(self, o: object) -> int: ...
    
    def equals(self, o: object) -> bool: ...
    
    def getX(self) -> java.lang.Number: ...
    
    def getXValue(self) -> float: ...
    
    def getY(self) -> java.lang.Number: ...
    
    def getYValue(self) -> float: ...
    
    def hashCode(self) -> int: ...
    
    def setY(self, f: float) -> None: ...
    
    def toString(self) -> str: ...
    
    
class XYDatasetTableModel(javax.swing.table.AbstractTableModel, org.jfree.data.general.DatasetChangeListener):
    pass
    
class XYDomainInfo:
    def __init__(self) -> None: ...
    
    def getDomainBounds(self, l: list, b: bool) -> org.jfree.data.Range: ...
    
    
class XYInterval(java.io.Serializable):
    def __init__(self, f: float, f2: float, f3: float, f4: float, f5: float) -> None: ...
    
    def equals(self, o: object) -> bool: ...
    
    def getXHigh(self) -> float: ...
    
    def getXLow(self) -> float: ...
    
    def getY(self) -> float: ...
    
    def getYHigh(self) -> float: ...
    
    def getYLow(self) -> float: ...
    
    
class XYIntervalDataItem(org.jfree.data.ComparableObjectItem):
    def __init__(self, f: float, f2: float, f3: float, f4: float, f5: float, f6: float) -> None: ...
    
    def getX(self) -> java.lang.Double: ...
    
    def getXHighValue(self) -> float: ...
    
    def getXLowValue(self) -> float: ...
    
    def getYHighValue(self) -> float: ...
    
    def getYLowValue(self) -> float: ...
    
    def getYValue(self) -> float: ...
    
    
class XYIntervalSeries(org.jfree.data.ComparableObjectSeries):
    pass
    
class XYIntervalSeriesCollection(AbstractIntervalXYDataset, org.jfree.util.PublicCloneable):
    pass
    
class XYRangeInfo:
    def __init__(self) -> None: ...
    
    def getRangeBounds(self, l: list, o: org.jfree.data.Range, b: bool) -> org.jfree.data.Range: ...
    
    
class XYSeries(org.jfree.data.general.Series):
    pass
    
class XYSeriesCollection(AbstractIntervalXYDataset, org.jfree.data.DomainInfo, org.jfree.data.RangeInfo, org.jfree.util.PublicCloneable):
    pass
    
class XisSymbolic:
    def __init__(self) -> None: ...
    
    def getXSymbolicValue(self, i: int) -> str: ...
    
    def getXSymbolicValues(self) -> typing.List[str]: ...
    
    
class YInterval(java.io.Serializable):
    def __init__(self, f: float, f2: float, f3: float) -> None: ...
    
    def equals(self, o: object) -> bool: ...
    
    def getY(self) -> float: ...
    
    def getYHigh(self) -> float: ...
    
    def getYLow(self) -> float: ...
    
    
class YIntervalDataItem(org.jfree.data.ComparableObjectItem):
    def __init__(self, f: float, f2: float, f3: float, f4: float) -> None: ...
    
    def getX(self) -> java.lang.Double: ...
    
    def getYHighValue(self) -> float: ...
    
    def getYLowValue(self) -> float: ...
    
    def getYValue(self) -> float: ...
    
    
class YIntervalSeries(org.jfree.data.ComparableObjectSeries):
    pass
    
class YIntervalSeriesCollection(AbstractIntervalXYDataset, org.jfree.util.PublicCloneable):
    pass
    
class YWithXInterval(java.io.Serializable):
    def __init__(self, f: float, f2: float, f3: float) -> None: ...
    
    def equals(self, o: object) -> bool: ...
    
    def getXHigh(self) -> float: ...
    
    def getXLow(self) -> float: ...
    
    def getY(self) -> float: ...
    
    
class YisSymbolic:
    def __init__(self) -> None: ...
    
    def getYSymbolicValue(self, i: int) -> str: ...
    
    def getYSymbolicValues(self) -> typing.List[str]: ...
    
    
