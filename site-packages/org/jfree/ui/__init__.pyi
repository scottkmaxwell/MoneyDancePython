import java.awt
import java.awt.geom
import java.io
import java.lang
import javax.swing
import javax.swing.filechooser
import javax.swing.table
import javax.swing.text
import org.jfree.util


class Align:
    BOTTOM = 2
    BOTTOM_LEFT = 6
    BOTTOM_RIGHT = 10
    CENTER = 0
    EAST = 8
    FIT = 15
    FIT_HORIZONTAL = 12
    FIT_VERTICAL = 3
    LEFT = 4
    NORTH = 1
    NORTH_EAST = 9
    NORTH_WEST = 5
    RIGHT = 8
    SOUTH = 2
    SOUTH_EAST = 10
    SOUTH_WEST = 6
    TOP = 1
    TOP_LEFT = 5
    TOP_RIGHT = 9
    WEST = 4
    
    def __init__(self) -> None: ...
    
    @staticmethod
    def align(j: java.awt.geom.Rectangle2D, j2: java.awt.geom.Rectangle2D, i: int) -> None: ...
    
    
class ApplicationFrame(javax.swing.JFrame, 'java.awt.event.WindowListener'):
    pass
    
class ArrowPanel(javax.swing.JPanel):
    pass
    
class BevelArrowIcon(javax.swing.Icon):
    DOWN = 1
    UP = 0
    
    def __init__(self, i: int, b: bool, b2: bool) -> None: ...
    
    def getIconHeight(self) -> int: ...
    
    def getIconWidth(self) -> int: ...
    
    def paintIcon(self, j: java.awt.Component, j2: java.awt.Graphics, i: int, i2: int) -> None: ...
    
    
class DateCellRenderer(javax.swing.table.DefaultTableCellRenderer):
    pass
    
class DateChooserPanel(javax.swing.JPanel, 'java.awt.event.ActionListener'):
    pass
    
class Drawable:
    def __init__(self) -> None: ...
    
    def draw(self, j: java.awt.Graphics2D, j2: java.awt.geom.Rectangle2D) -> None: ...
    
    
class DrawablePanel(javax.swing.JPanel):
    pass
    
class ExtendedDrawable(Drawable):
    def __init__(self) -> None: ...
    
    def getPreferredSize(self) -> java.awt.Dimension: ...
    
    def isPreserveAspectRatio(self) -> bool: ...
    
    
class ExtensionFileFilter(javax.swing.filechooser.FileFilter):
    def __init__(self, s: str, s2: str) -> None: ...
    
    def accept(self, j: java.io.File) -> bool: ...
    
    def getDescription(self) -> str: ...
    
    
class FilesystemFilter(javax.swing.filechooser.FileFilter, java.io.FilenameFilter):
    def __init__(self, s: str, s2: str) -> None: ...
    
    def accept(self, j: java.io.File) -> bool: ...
    
    def acceptDirectories(self, b: bool) -> None: ...
    
    def acceptsDirectories(self) -> bool: ...
    
    def getDescription(self) -> str: ...
    
    
class FloatDimension(java.awt.geom.Dimension2D, java.io.Serializable):
    def __init__(self) -> None: ...
    
    def clone(self) -> object: ...
    
    def equals(self, o: object) -> bool: ...
    
    def getHeight(self) -> float: ...
    
    def getWidth(self) -> float: ...
    
    def hashCode(self) -> int: ...
    
    def setHeight(self, f: float) -> None: ...
    
    def setWidth(self, f: float) -> None: ...
    
    def toString(self) -> str: ...
    
    
class FloatingButtonEnabler('java.awt.event.MouseAdapter'):
    def __init__(self) -> None: ...
    
    def addButton(self, j: javax.swing.AbstractButton) -> None: ...
    
    @staticmethod
    def getInstance() -> 'FloatingButtonEnabler': ...
    
    def mouseEntered(self, j: 'java.awt.event.MouseEvent') -> None: ...
    
    def mouseExited(self, j: 'java.awt.event.MouseEvent') -> None: ...
    
    def removeButton(self, j: javax.swing.AbstractButton) -> None: ...
    
    
class StandardDialog(javax.swing.JDialog, 'java.awt.event.ActionListener'):
    pass
    
class FontChooserDialog(StandardDialog):
    pass
    
class FontChooserPanel(javax.swing.JPanel):
    pass
    
class FontDisplayField(javax.swing.JTextField):
    pass
    
class GradientPaintTransformType(java.io.Serializable):
    CENTER_HORIZONTAL = 'GradientPaintTransformType.CENTER_HORIZONTAL'
    CENTER_VERTICAL = 'GradientPaintTransformType.CENTER_VERTICAL'
    HORIZONTAL = 'GradientPaintTransformType.HORIZONTAL'
    VERTICAL = 'GradientPaintTransformType.VERTICAL'
    
    def __init__(self) -> None: ...
    
    def equals(self, o: object) -> bool: ...
    
    def hashCode(self) -> int: ...
    
    def toString(self) -> str: ...
    
    
class GradientPaintTransformer:
    def __init__(self) -> None: ...
    
    def transform(self, j: java.awt.GradientPaint, j2: java.awt.Shape) -> java.awt.GradientPaint: ...
    
    
class HorizontalAlignment(java.io.Serializable):
    CENTER = 'HorizontalAlignment.CENTER'
    LEFT = 'HorizontalAlignment.LEFT'
    RIGHT = 'HorizontalAlignment.RIGHT'
    
    def __init__(self) -> None: ...
    
    def equals(self, o: object) -> bool: ...
    
    def hashCode(self) -> int: ...
    
    def toString(self) -> str: ...
    
    
class InsetsChooserPanel(javax.swing.JPanel):
    pass
    
class InsetsTextField(javax.swing.JTextField):
    pass
    
class IntegerDocument(javax.swing.text.PlainDocument):
    pass
    
class JTextObserver('java.awt.event.FocusListener'):
    def __init__(self) -> None: ...
    
    @staticmethod
    def addTextComponent(j: javax.swing.text.JTextComponent) -> None: ...
    
    def focusGained(self, j: 'java.awt.event.FocusEvent') -> None: ...
    
    def focusLost(self, j: 'java.awt.event.FocusEvent') -> None: ...
    
    @staticmethod
    def getInstance() -> 'JTextObserver': ...
    
    @staticmethod
    def removeTextComponent(j: javax.swing.text.JTextComponent) -> None: ...
    
    
class KeyedComboBoxModel(javax.swing.ComboBoxModel):
    pass
    
class L1R1ButtonPanel(javax.swing.JPanel):
    pass
    
class L1R2ButtonPanel(javax.swing.JPanel):
    pass
    
class L1R3ButtonPanel(javax.swing.JPanel):
    pass
    
class Layer(java.io.Serializable):
    BACKGROUND = 'Layer.BACKGROUND'
    FOREGROUND = 'Layer.FOREGROUND'
    
    def __init__(self) -> None: ...
    
    def equals(self, o: object) -> bool: ...
    
    def hashCode(self) -> int: ...
    
    def toString(self) -> str: ...
    
    
class LengthAdjustmentType(java.io.Serializable):
    CONTRACT = 'CONTRACT'
    EXPAND = 'EXPAND'
    NO_CHANGE = 'NO_CHANGE'
    
    def __init__(self) -> None: ...
    
    def equals(self, o: object) -> bool: ...
    
    def hashCode(self) -> int: ...
    
    def toString(self) -> str: ...
    
    
class LengthLimitingDocument(javax.swing.text.PlainDocument):
    pass
    
class NumberCellRenderer(javax.swing.table.DefaultTableCellRenderer):
    pass
    
class OverlayLayout(java.awt.LayoutManager):
    def __init__(self) -> None: ...
    
    def addLayoutComponent(self, s: str, j: java.awt.Component) -> None: ...
    
    def layoutContainer(self, j: java.awt.Container) -> None: ...
    
    def minimumLayoutSize(self, j: java.awt.Container) -> java.awt.Dimension: ...
    
    def preferredLayoutSize(self, j: java.awt.Container) -> java.awt.Dimension: ...
    
    def removeLayoutComponent(self, j: java.awt.Component) -> None: ...
    
    
class PaintSample(javax.swing.JComponent):
    pass
    
class RectangleAnchor(java.io.Serializable):
    BOTTOM = 'RectangleAnchor.BOTTOM'
    BOTTOM_LEFT = 'RectangleAnchor.BOTTOM_LEFT'
    BOTTOM_RIGHT = 'RectangleAnchor.BOTTOM_RIGHT'
    CENTER = 'RectangleAnchor.CENTER'
    LEFT = 'RectangleAnchor.LEFT'
    RIGHT = 'RectangleAnchor.RIGHT'
    TOP = 'RectangleAnchor.TOP'
    TOP_LEFT = 'RectangleAnchor.TOP_LEFT'
    TOP_RIGHT = 'RectangleAnchor.TOP_RIGHT'
    
    def __init__(self) -> None: ...
    
    @staticmethod
    def coordinates(j: java.awt.geom.Rectangle2D, rectangleAnchor: 'RectangleAnchor') -> java.awt.geom.Point2D: ...
    
    @staticmethod
    def createRectangle(size2D: 'Size2D', f: float, f2: float, rectangleAnchor: 'RectangleAnchor') -> java.awt.geom.Rectangle2D: ...
    
    def equals(self, o: object) -> bool: ...
    
    def hashCode(self) -> int: ...
    
    def toString(self) -> str: ...
    
    
class RectangleEdge(java.io.Serializable):
    BOTTOM = 'RectangleEdge.BOTTOM'
    LEFT = 'RectangleEdge.LEFT'
    RIGHT = 'RectangleEdge.RIGHT'
    TOP = 'RectangleEdge.TOP'
    
    def __init__(self) -> None: ...
    
    @staticmethod
    def coordinate(j: java.awt.geom.Rectangle2D, rectangleEdge: 'RectangleEdge') -> float: ...
    
    def equals(self, o: object) -> bool: ...
    
    def hashCode(self) -> int: ...
    
    @staticmethod
    def isLeftOrRight(rectangleEdge: 'RectangleEdge') -> bool: ...
    
    @staticmethod
    def isTopOrBottom(rectangleEdge: 'RectangleEdge') -> bool: ...
    
    @staticmethod
    def opposite(rectangleEdge: 'RectangleEdge') -> 'RectangleEdge': ...
    
    def toString(self) -> str: ...
    
    
class RectangleInsets(java.io.Serializable):
    ZERO_INSETS = 'RectangleInsets[t=0.0,l=0.0,b=0.0,r=0.0]'
    
    def __init__(self) -> None: ...
    
    def calculateBottomInset(self, f: float) -> float: ...
    
    def calculateBottomOutset(self, f: float) -> float: ...
    
    def calculateLeftInset(self, f: float) -> float: ...
    
    def calculateLeftOutset(self, f: float) -> float: ...
    
    def calculateRightInset(self, f: float) -> float: ...
    
    def calculateRightOutset(self, f: float) -> float: ...
    
    def calculateTopInset(self, f: float) -> float: ...
    
    def calculateTopOutset(self, f: float) -> float: ...
    
    def createAdjustedRectangle(self, j: java.awt.geom.Rectangle2D, lengthAdjustmentType: LengthAdjustmentType, lengthAdjustmentType2: LengthAdjustmentType) -> java.awt.geom.Rectangle2D: ...
    
    def createInsetRectangle(self, j: java.awt.geom.Rectangle2D) -> java.awt.geom.Rectangle2D: ...
    
    def createOutsetRectangle(self, j: java.awt.geom.Rectangle2D) -> java.awt.geom.Rectangle2D: ...
    
    def equals(self, o: object) -> bool: ...
    
    def extendHeight(self, f: float) -> float: ...
    
    def extendWidth(self, f: float) -> float: ...
    
    def getBottom(self) -> float: ...
    
    def getLeft(self) -> float: ...
    
    def getRight(self) -> float: ...
    
    def getTop(self) -> float: ...
    
    def getUnitType(self) -> org.jfree.util.UnitType: ...
    
    def hashCode(self) -> int: ...
    
    def toString(self) -> str: ...
    
    def trim(self, j: java.awt.geom.Rectangle2D) -> None: ...
    
    def trimHeight(self, f: float) -> float: ...
    
    def trimWidth(self, f: float) -> float: ...
    
    
class RefineryUtilities:
    def __init__(self) -> None: ...
    
    @staticmethod
    def centerDialogInParent(j: java.awt.Dialog) -> None: ...
    
    @staticmethod
    def centerFrameOnScreen(j: java.awt.Window) -> None: ...
    
    @staticmethod
    def createJButton(s: str, j: java.awt.Font) -> javax.swing.JButton: ...
    
    @staticmethod
    def createJLabel(s: str, j: java.awt.Font) -> javax.swing.JLabel: ...
    
    @staticmethod
    def createTablePanel(j: javax.swing.table.TableModel) -> javax.swing.JPanel: ...
    
    @staticmethod
    def getCenterPoint() -> java.awt.Point: ...
    
    @staticmethod
    def getMaximumWindowBounds() -> java.awt.Rectangle: ...
    
    @staticmethod
    def positionDialogRelativeToParent(j: java.awt.Dialog, f: float, f2: float) -> None: ...
    
    @staticmethod
    def positionFrameOnScreen(j: java.awt.Window, f: float, f2: float) -> None: ...
    
    @staticmethod
    def positionFrameRandomly(j: java.awt.Window) -> None: ...
    
    
class SerialDateChooserPanel(javax.swing.JPanel, 'java.awt.event.ActionListener'):
    pass
    
class Size2D(java.lang.Cloneable, org.jfree.util.PublicCloneable, java.io.Serializable):
    height: float
    width: float
    
    def __init__(self) -> None: ...
    
    def clone(self) -> object: ...
    
    def equals(self, o: object) -> bool: ...
    
    def getHeight(self) -> float: ...
    
    def getWidth(self) -> float: ...
    
    def setHeight(self, f: float) -> None: ...
    
    def setWidth(self, f: float) -> None: ...
    
    def toString(self) -> str: ...
    
    
class SortButtonRenderer(javax.swing.table.TableCellRenderer):
    DOWN = 1
    NONE = 0
    UP = 2
    
    def __init__(self) -> None: ...
    
    def getTableCellRendererComponent(self, j: javax.swing.JTable, o: object, b: bool, b2: bool, i: int, i2: int) -> java.awt.Component: ...
    
    def setPressedColumn(self, i: int) -> None: ...
    
    
class SortableTable(javax.swing.JTable):
    pass
    
class SortableTableHeaderListener('java.awt.event.MouseListener', 'java.awt.event.MouseMotionListener'):
    def __init__(self, sortableTableModel: 'SortableTableModel', sortButtonRenderer: SortButtonRenderer) -> None: ...
    
    def mouseClicked(self, j: 'java.awt.event.MouseEvent') -> None: ...
    
    def mouseDragged(self, j: 'java.awt.event.MouseEvent') -> None: ...
    
    def mouseEntered(self, j: 'java.awt.event.MouseEvent') -> None: ...
    
    def mouseExited(self, j: 'java.awt.event.MouseEvent') -> None: ...
    
    def mouseMoved(self, j: 'java.awt.event.MouseEvent') -> None: ...
    
    def mousePressed(self, j: 'java.awt.event.MouseEvent') -> None: ...
    
    def mouseReleased(self, j: 'java.awt.event.MouseEvent') -> None: ...
    
    def setTableModel(self, sortableTableModel: 'SortableTableModel') -> None: ...
    
    
class SortableTableModel(javax.swing.table.AbstractTableModel):
    pass
    
class Spinner(javax.swing.JPanel, 'java.awt.event.MouseListener'):
    pass
    
class StandardGradientPaintTransformer(GradientPaintTransformer, java.lang.Cloneable, org.jfree.util.PublicCloneable, java.io.Serializable):
    def __init__(self) -> None: ...
    
    def clone(self) -> object: ...
    
    def equals(self, o: object) -> bool: ...
    
    def getType(self) -> GradientPaintTransformType: ...
    
    def hashCode(self) -> int: ...
    
    def transform(self, j: java.awt.GradientPaint, j2: java.awt.Shape) -> java.awt.GradientPaint: ...
    
    
class StrokeChooserPanel(javax.swing.JPanel):
    pass
    
class StrokeSample(javax.swing.JComponent, javax.swing.ListCellRenderer):
    pass
    
class TextAnchor(java.io.Serializable):
    BASELINE_CENTER = 'TextAnchor.BASELINE_CENTER'
    BASELINE_LEFT = 'TextAnchor.BASELINE_LEFT'
    BASELINE_RIGHT = 'TextAnchor.BASELINE_RIGHT'
    BOTTOM_CENTER = 'TextAnchor.BOTTOM_CENTER'
    BOTTOM_LEFT = 'TextAnchor.BOTTOM_LEFT'
    BOTTOM_RIGHT = 'TextAnchor.BOTTOM_RIGHT'
    CENTER = 'TextAnchor.CENTER'
    CENTER_LEFT = 'TextAnchor.CENTER_LEFT'
    CENTER_RIGHT = 'TextAnchor.CENTER_RIGHT'
    HALF_ASCENT_CENTER = 'TextAnchor.HALF_ASCENT_CENTER'
    HALF_ASCENT_LEFT = 'TextAnchor.HALF_ASCENT_LEFT'
    HALF_ASCENT_RIGHT = 'TextAnchor.HALF_ASCENT_RIGHT'
    TOP_CENTER = 'TextAnchor.TOP_CENTER'
    TOP_LEFT = 'TextAnchor.TOP_LEFT'
    TOP_RIGHT = 'TextAnchor.TOP_RIGHT'
    
    def __init__(self) -> None: ...
    
    def equals(self, o: object) -> bool: ...
    
    def hashCode(self) -> int: ...
    
    def toString(self) -> str: ...
    
    
class UIUtilities:
    def __init__(self) -> None: ...
    
    @staticmethod
    def setupUI() -> None: ...
    
    
class VerticalAlignment(java.io.Serializable):
    BOTTOM = 'VerticalAlignment.BOTTOM'
    CENTER = 'VerticalAlignment.CENTER'
    TOP = 'VerticalAlignment.TOP'
    
    def __init__(self) -> None: ...
    
    def equals(self, o: object) -> bool: ...
    
    def hashCode(self) -> int: ...
    
    def toString(self) -> str: ...
    
    
class WizardDialog(javax.swing.JDialog, 'java.awt.event.ActionListener'):
    pass
    
class WizardPanel(javax.swing.JPanel):
    pass
    
