import typing
import com.google.gson
import com.google.gson.internal
import com.google.gson.stream
import java.lang.reflect
import java.sql
import java.util

T = typing.TypeVar("T")


class ArrayTypeAdapter(com.google.gson.TypeAdapter):
    FACTORY = 'com.google.gson.internal.bind.ArrayTypeAdapter$1'
    
    def __init__(self, c: com.google.gson.Gson, t: typing.Any, t2: typing.Any) -> None: ...
    
    def read(self, c: com.google.gson.stream.JsonReader) -> object: ...
    
    def write(self, c: com.google.gson.stream.JsonWriter, o: object) -> None: ...
    
    
class CollectionTypeAdapterFactory(com.google.gson.TypeAdapterFactory):
    def __init__(self, c: com.google.gson.internal.ConstructorConstructor) -> None: ...
    
    def create(self, c: com.google.gson.Gson, t: typing.Any) -> typing.Any: ...
    
    
class DateTypeAdapter(com.google.gson.TypeAdapter):
    FACTORY = 'com.google.gson.internal.bind.DateTypeAdapter$1'
    
    def __init__(self) -> None: ...
    
    def read(self, c: com.google.gson.stream.JsonReader) -> object: ...
    
    def write(self, c: com.google.gson.stream.JsonWriter, j: java.util.Date) -> None: ...
    
    
class JsonAdapterAnnotationTypeAdapterFactory(com.google.gson.TypeAdapterFactory):
    def __init__(self, c: com.google.gson.internal.ConstructorConstructor) -> None: ...
    
    def create(self, c: com.google.gson.Gson, t: typing.Any) -> typing.Any: ...
    
    
class JsonTreeReader(com.google.gson.stream.JsonReader):
    def __init__(self, c: com.google.gson.JsonElement) -> None: ...
    
    def beginArray(self) -> None: ...
    
    def beginObject(self) -> None: ...
    
    def close(self) -> None: ...
    
    def endArray(self) -> None: ...
    
    def endObject(self) -> None: ...
    
    def getPath(self) -> str: ...
    
    def hasNext(self) -> bool: ...
    
    def nextBoolean(self) -> bool: ...
    
    def nextDouble(self) -> float: ...
    
    def nextInt(self) -> int: ...
    
    def nextLong(self) -> int: ...
    
    def nextName(self) -> str: ...
    
    def nextNull(self) -> None: ...
    
    def nextString(self) -> str: ...
    
    def peek(self) -> com.google.gson.stream.JsonToken: ...
    
    def promoteNameToValue(self) -> None: ...
    
    def skipValue(self) -> None: ...
    
    def toString(self) -> str: ...
    
    
class JsonTreeWriter(com.google.gson.stream.JsonWriter):
    def __init__(self) -> None: ...
    
    def beginArray(self) -> com.google.gson.stream.JsonWriter: ...
    
    def beginObject(self) -> com.google.gson.stream.JsonWriter: ...
    
    def close(self) -> None: ...
    
    def endArray(self) -> com.google.gson.stream.JsonWriter: ...
    
    def endObject(self) -> com.google.gson.stream.JsonWriter: ...
    
    def flush(self) -> None: ...
    
    def get(self) -> com.google.gson.JsonElement: ...
    
    def name(self, s: str) -> com.google.gson.stream.JsonWriter: ...
    
    def nullValue(self) -> com.google.gson.stream.JsonWriter: ...
    
    def value(self, i: int) -> com.google.gson.stream.JsonWriter: ...
    
    
class MapTypeAdapterFactory(com.google.gson.TypeAdapterFactory):
    def __init__(self, c: com.google.gson.internal.ConstructorConstructor, b: bool) -> None: ...
    
    def create(self, c: com.google.gson.Gson, t: typing.Any) -> typing.Any: ...
    
    
class ObjectTypeAdapter(com.google.gson.TypeAdapter):
    FACTORY = 'com.google.gson.internal.bind.ObjectTypeAdapter$1'
    
    def __init__(self) -> None: ...
    
    def read(self, c: com.google.gson.stream.JsonReader) -> object: ...
    
    def write(self, c: com.google.gson.stream.JsonWriter, o: object) -> None: ...
    
    
class ReflectiveTypeAdapterFactory(com.google.gson.TypeAdapterFactory):
    def __init__(self, c: com.google.gson.internal.ConstructorConstructor, c2: com.google.gson.FieldNamingStrategy, c3: com.google.gson.internal.Excluder, jsonAdapterAnnotationTypeAdapterFactory: JsonAdapterAnnotationTypeAdapterFactory) -> None: ...
    
    def create(self, c: com.google.gson.Gson, t: typing.Any) -> typing.Any: ...
    
    def excludeField(self, j: java.lang.reflect.Field, b: bool) -> bool: ...
    
    
    class Adapter:
        def __init__(self) -> None: ...
        
        def read(self, c: com.google.gson.stream.JsonReader) -> 'T': ...
        
        def write(self, c: com.google.gson.stream.JsonWriter, t: 'T') -> None: ...
        
        
    
class SqlDateTypeAdapter(com.google.gson.TypeAdapter):
    FACTORY = 'com.google.gson.internal.bind.SqlDateTypeAdapter$1'
    
    def __init__(self) -> None: ...
    
    def read(self, c: com.google.gson.stream.JsonReader) -> java.sql.Date: ...
    
    def write(self, c: com.google.gson.stream.JsonWriter, j: java.sql.Date) -> None: ...
    
    
class TimeTypeAdapter(com.google.gson.TypeAdapter):
    FACTORY = 'com.google.gson.internal.bind.TimeTypeAdapter$1'
    
    def __init__(self) -> None: ...
    
    def read(self, c: com.google.gson.stream.JsonReader) -> java.sql.Time: ...
    
    def write(self, c: com.google.gson.stream.JsonWriter, j: java.sql.Time) -> None: ...
    
    
class TreeTypeAdapter(com.google.gson.TypeAdapter):
    def __init__(self, t: typing.Any, t2: typing.Any, c: com.google.gson.Gson, t3: typing.Any, c2: com.google.gson.TypeAdapterFactory) -> None: ...
    
    @staticmethod
    def newFactory(t: typing.Any, o: object) -> com.google.gson.TypeAdapterFactory: ...
    
    @staticmethod
    def newFactoryWithMatchRawType(t: typing.Any, o: object) -> com.google.gson.TypeAdapterFactory: ...
    
    @staticmethod
    def newTypeHierarchyFactory(t: typing.Any, o: object) -> com.google.gson.TypeAdapterFactory: ...
    
    def read(self, c: com.google.gson.stream.JsonReader) -> 'T': ...
    
    def write(self, c: com.google.gson.stream.JsonWriter, t: 'T') -> None: ...
    
    
class TypeAdapters:
    ATOMIC_BOOLEAN = 'com.google.gson.TypeAdapter$1'
    ATOMIC_BOOLEAN_FACTORY = 'Factory[type=java.util.concurrent.atomic.AtomicBoolean,adapter=com.google.gson.TypeAdapter$1@272a8660]'
    ATOMIC_INTEGER = 'com.google.gson.TypeAdapter$1'
    ATOMIC_INTEGER_ARRAY = 'com.google.gson.TypeAdapter$1'
    ATOMIC_INTEGER_ARRAY_FACTORY = 'Factory[type=java.util.concurrent.atomic.AtomicIntegerArray,adapter=com.google.gson.TypeAdapter$1@3defd77]'
    ATOMIC_INTEGER_FACTORY = 'Factory[type=java.util.concurrent.atomic.AtomicInteger,adapter=com.google.gson.TypeAdapter$1@727e3cff]'
    BIG_DECIMAL = 'com.google.gson.internal.bind.TypeAdapters$17'
    BIG_INTEGER = 'com.google.gson.internal.bind.TypeAdapters$18'
    BIT_SET = 'com.google.gson.TypeAdapter$1'
    BIT_SET_FACTORY = 'Factory[type=java.util.BitSet,adapter=com.google.gson.TypeAdapter$1@d900b73]'
    BOOLEAN = 'com.google.gson.internal.bind.TypeAdapters$3'
    BOOLEAN_AS_STRING = 'com.google.gson.internal.bind.TypeAdapters$4'
    BOOLEAN_FACTORY = 'Factory[type=java.lang.Boolean+boolean,adapter=com.google.gson.internal.bind.TypeAdapters$3@3a0dc5db]'
    BYTE = 'com.google.gson.internal.bind.TypeAdapters$5'
    BYTE_FACTORY = 'Factory[type=java.lang.Byte+byte,adapter=com.google.gson.internal.bind.TypeAdapters$5@255d1db8]'
    CALENDAR = 'com.google.gson.internal.bind.TypeAdapters$27'
    CALENDAR_FACTORY = 'Factory[type=java.util.Calendar+java.util.GregorianCalendar,adapter=com.google.gson.internal.bind.TypeAdapters$27@65d97aef]'
    CHARACTER = 'com.google.gson.internal.bind.TypeAdapters$15'
    CHARACTER_FACTORY = 'Factory[type=java.lang.Character+char,adapter=com.google.gson.internal.bind.TypeAdapters$15@70b472ea]'
    CLASS = 'com.google.gson.TypeAdapter$1'
    CLASS_FACTORY = 'Factory[type=java.lang.Class,adapter=com.google.gson.TypeAdapter$1@2e798ef1]'
    CURRENCY = 'com.google.gson.TypeAdapter$1'
    CURRENCY_FACTORY = 'Factory[type=java.util.Currency,adapter=com.google.gson.TypeAdapter$1@3272134b]'
    DOUBLE = 'com.google.gson.internal.bind.TypeAdapters$13'
    ENUM_FACTORY = 'com.google.gson.internal.bind.TypeAdapters$30'
    FLOAT = 'com.google.gson.internal.bind.TypeAdapters$12'
    INET_ADDRESS = 'com.google.gson.internal.bind.TypeAdapters$23'
    INET_ADDRESS_FACTORY = 'Factory[typeHierarchy=java.net.InetAddress,adapter=com.google.gson.internal.bind.TypeAdapters$23@4bc4fa3]'
    INTEGER = 'com.google.gson.internal.bind.TypeAdapters$7'
    INTEGER_FACTORY = 'Factory[type=java.lang.Integer+int,adapter=com.google.gson.internal.bind.TypeAdapters$7@c1d86cd]'
    JSON_ELEMENT = 'com.google.gson.internal.bind.TypeAdapters$29'
    JSON_ELEMENT_FACTORY = 'Factory[typeHierarchy=com.google.gson.JsonElement,adapter=com.google.gson.internal.bind.TypeAdapters$29@5fccfd77]'
    LOCALE = 'com.google.gson.internal.bind.TypeAdapters$28'
    LOCALE_FACTORY = 'Factory[type=java.util.Locale,adapter=com.google.gson.internal.bind.TypeAdapters$28@50b35f5a]'
    LONG = 'com.google.gson.internal.bind.TypeAdapters$11'
    NUMBER = 'com.google.gson.internal.bind.TypeAdapters$14'
    NUMBER_FACTORY = 'Factory[type=java.lang.Number,adapter=com.google.gson.internal.bind.TypeAdapters$14@4a13d984]'
    SHORT = 'com.google.gson.internal.bind.TypeAdapters$6'
    SHORT_FACTORY = 'Factory[type=java.lang.Short+short,adapter=com.google.gson.internal.bind.TypeAdapters$6@35567a99]'
    STRING = 'com.google.gson.internal.bind.TypeAdapters$16'
    STRING_BUFFER = 'com.google.gson.internal.bind.TypeAdapters$20'
    STRING_BUFFER_FACTORY = 'Factory[type=java.lang.StringBuffer,adapter=com.google.gson.internal.bind.TypeAdapters$20@7d551792]'
    STRING_BUILDER = 'com.google.gson.internal.bind.TypeAdapters$19'
    STRING_BUILDER_FACTORY = 'Factory[type=java.lang.StringBuilder,adapter=com.google.gson.internal.bind.TypeAdapters$19@58b6cad0]'
    STRING_FACTORY = 'Factory[type=java.lang.String,adapter=com.google.gson.internal.bind.TypeAdapters$16@53d86872]'
    TIMESTAMP_FACTORY = 'com.google.gson.internal.bind.TypeAdapters$26'
    URI = 'com.google.gson.internal.bind.TypeAdapters$22'
    URI_FACTORY = 'Factory[type=java.net.URI,adapter=com.google.gson.internal.bind.TypeAdapters$22@6156a1be]'
    URL = 'com.google.gson.internal.bind.TypeAdapters$21'
    URL_FACTORY = 'Factory[type=java.net.URL,adapter=com.google.gson.internal.bind.TypeAdapters$21@34ead936]'
    UUID = 'com.google.gson.internal.bind.TypeAdapters$24'
    UUID_FACTORY = 'Factory[type=java.util.UUID,adapter=com.google.gson.internal.bind.TypeAdapters$24@4ba841b6]'
    
    def __init__(self) -> None: ...
    
    @staticmethod
    def newFactory(t: typing.Any, t2: typing.Any) -> com.google.gson.TypeAdapterFactory: ...
    
    @staticmethod
    def newFactoryForMultipleTypes(t: typing.Any, t2: typing.Any, t3: typing.Any) -> com.google.gson.TypeAdapterFactory: ...
    
    @staticmethod
    def newTypeHierarchyFactory(t: typing.Any, t2: typing.Any) -> com.google.gson.TypeAdapterFactory: ...
    
    
