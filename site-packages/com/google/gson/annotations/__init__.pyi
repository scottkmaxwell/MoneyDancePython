import typing
import java.lang.annotation


class Expose(java.lang.annotation.Annotation):
    def __init__(self) -> None: ...
    
    def deserialize(self) -> bool: ...
    
    def serialize(self) -> bool: ...
    
    
class JsonAdapter(java.lang.annotation.Annotation):
    def __init__(self) -> None: ...
    
    def nullSafe(self) -> bool: ...
    
    def value(self) -> typing.Any: ...
    
    
class SerializedName(java.lang.annotation.Annotation):
    def __init__(self) -> None: ...
    
    def alternate(self) -> typing.List[str]: ...
    
    def value(self) -> str: ...
    
    
class Since(java.lang.annotation.Annotation):
    def __init__(self) -> None: ...
    
    def value(self) -> float: ...
    
    
class Until(java.lang.annotation.Annotation):
    def __init__(self) -> None: ...
    
    def value(self) -> float: ...
    
    
