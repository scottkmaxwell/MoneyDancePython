import typing
import java.lang.reflect


class TypeToken:
    def __init__(self) -> None: ...
    
    def equals(self, o: object) -> bool: ...
    
    @staticmethod
    def get(t: typing.Any) -> typing.Any: ...
    
    @staticmethod
    def getArray(j: java.lang.reflect.Type) -> typing.Any: ...
    
    @staticmethod
    def getParameterized(j: java.lang.reflect.Type, t: typing.List[java.lang.reflect.Type]) -> typing.Any: ...
    
    def getRawType(self) -> typing.Any: ...
    
    def getType(self) -> java.lang.reflect.Type: ...
    
    def hashCode(self) -> int: ...
    
    def isAssignableFrom(self, t: typing.Any) -> bool: ...
    
    def toString(self) -> str: ...
    
    
