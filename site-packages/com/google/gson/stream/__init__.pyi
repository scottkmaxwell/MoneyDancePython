import typing
import java.io
import java.lang


class JsonReader(java.io.Closeable):
    def __init__(self, j: java.io.Reader) -> None: ...
    
    def beginArray(self) -> None: ...
    
    def beginObject(self) -> None: ...
    
    def close(self) -> None: ...
    
    def endArray(self) -> None: ...
    
    def endObject(self) -> None: ...
    
    def getPath(self) -> str: ...
    
    def getPreviousPath(self) -> str: ...
    
    def hasNext(self) -> bool: ...
    
    def isLenient(self) -> bool: ...
    
    def nextBoolean(self) -> bool: ...
    
    def nextDouble(self) -> float: ...
    
    def nextInt(self) -> int: ...
    
    def nextLong(self) -> int: ...
    
    def nextName(self) -> str: ...
    
    def nextNull(self) -> None: ...
    
    def nextString(self) -> str: ...
    
    def peek(self) -> 'JsonToken': ...
    
    def setLenient(self, b: bool) -> None: ...
    
    def skipValue(self) -> None: ...
    
    def toString(self) -> str: ...
    
    
class JsonToken(java.lang.Enum):
    BEGIN_ARRAY = 'BEGIN_ARRAY'
    BEGIN_OBJECT = 'BEGIN_OBJECT'
    BOOLEAN = 'BOOLEAN'
    END_ARRAY = 'END_ARRAY'
    END_DOCUMENT = 'END_DOCUMENT'
    END_OBJECT = 'END_OBJECT'
    NAME = 'NAME'
    NULL = 'NULL'
    NUMBER = 'NUMBER'
    STRING = 'STRING'
    
    def __init__(self) -> None: ...
    
    @staticmethod
    def valueOf(s: str) -> 'JsonToken': ...
    
    @staticmethod
    def values() -> typing.List['JsonToken']: ...
    
    
class JsonWriter(java.io.Closeable, java.io.Flushable):
    def __init__(self, j: java.io.Writer) -> None: ...
    
    def beginArray(self) -> 'JsonWriter': ...
    
    def beginObject(self) -> 'JsonWriter': ...
    
    def close(self) -> None: ...
    
    def endArray(self) -> 'JsonWriter': ...
    
    def endObject(self) -> 'JsonWriter': ...
    
    def flush(self) -> None: ...
    
    def getSerializeNulls(self) -> bool: ...
    
    def isHtmlSafe(self) -> bool: ...
    
    def isLenient(self) -> bool: ...
    
    def jsonValue(self, s: str) -> 'JsonWriter': ...
    
    def name(self, s: str) -> 'JsonWriter': ...
    
    def nullValue(self) -> 'JsonWriter': ...
    
    def setHtmlSafe(self, b: bool) -> None: ...
    
    def setIndent(self, s: str) -> None: ...
    
    def setLenient(self, b: bool) -> None: ...
    
    def setSerializeNulls(self, b: bool) -> None: ...
    
    def value(self, i: int) -> 'JsonWriter': ...
    
    
class MalformedJsonException(java.io.IOException):
    def __init__(self, s: str) -> None: ...
    
    
