import typing
import com.infinitekind.moneydance.model
import com.moneydance.apps.md.view.gui
import java.lang
import javax.swing
import org.antlr.runtime


class ParseDelegate:
    def __init__(self) -> None: ...
    
    def getUI(self) -> javax.swing.JComponent: ...
    
    def parse(self, s: str) -> bool: ...
    
    def reset(self) -> None: ...
    
    def showUI(self) -> None: ...
    
    
class CalculatorDelegate(ParseDelegate):
    COPY_ACTION = u'copy'
    
    def __init__(self, j: 'java.awt.event.ActionListener') -> None: ...
    
    def getResult(self) -> float: ...
    
    def getUI(self) -> javax.swing.JComponent: ...
    
    @staticmethod
    def main(t: typing.List[str]) -> None: ...
    
    def parse(self, s: str) -> bool: ...
    
    def reset(self) -> None: ...
    
    def showUI(self) -> None: ...
    
    
class CalculatorLexer(org.antlr.runtime.Lexer):
    DEFAULT_TOKEN_CHANNEL = 0
    EOF = -1
    HIDDEN = 99
    ID = 4
    INITIAL_FOLLOW_STACK_SIZE = 100
    MEMO_RULE_FAILED = -2
    MEMO_RULE_UNKNOWN = -1
    NEXT_TOKEN_RULE_NAME = u'nextToken'
    Number = 5
    T__10 = 10
    T__11 = 11
    T__12 = 12
    T__7 = 7
    T__8 = 8
    T__9 = 9
    WS = 6
    
    def __init__(self) -> None: ...
    
    def getDelegates(self) -> typing.List[org.antlr.runtime.Lexer]: ...
    
    def getGrammarFileName(self) -> str: ...
    
    def mID(self) -> None: ...
    
    def mNumber(self) -> None: ...
    
    def mT__10(self) -> None: ...
    
    def mT__11(self) -> None: ...
    
    def mT__12(self) -> None: ...
    
    def mT__7(self) -> None: ...
    
    def mT__8(self) -> None: ...
    
    def mT__9(self) -> None: ...
    
    def mTokens(self) -> None: ...
    
    def mWS(self) -> None: ...
    
    
class CalculatorParser(org.antlr.runtime.Parser):
    DEFAULT_TOKEN_CHANNEL = 0
    EOF = -1
    FOLLOW_10_in_additionExp104 = '{5,7}'
    FOLLOW_11_in_additionExp123 = '{5,7}'
    FOLLOW_12_in_multiplyExp207 = '{5,7}'
    FOLLOW_7_in_atomExp279 = '{5,7}'
    FOLLOW_8_in_atomExp285 = '{1}'
    FOLLOW_9_in_multiplyExp188 = '{5,7}'
    FOLLOW_Number_in_atomExp251 = '{1}'
    FOLLOW_additionExp_in_atomExp283 = '{8}'
    FOLLOW_additionExp_in_expr55 = '{1}'
    FOLLOW_atomExp_in_multiplyExp167 = '{1,9,12}'
    FOLLOW_atomExp_in_multiplyExp192 = '{1,9,12}'
    FOLLOW_atomExp_in_multiplyExp211 = '{1,9,12}'
    FOLLOW_expr_in_start33 = '{1}'
    FOLLOW_multiplyExp_in_additionExp108 = '{1,10,11}'
    FOLLOW_multiplyExp_in_additionExp127 = '{1,10,11}'
    FOLLOW_multiplyExp_in_additionExp83 = '{1,10,11}'
    HIDDEN = 99
    ID = 4
    INITIAL_FOLLOW_STACK_SIZE = 100
    MEMO_RULE_FAILED = -2
    MEMO_RULE_UNKNOWN = -1
    NEXT_TOKEN_RULE_NAME = u'nextToken'
    Number = 5
    T__10 = 10
    T__11 = 11
    T__12 = 12
    T__7 = 7
    T__8 = 8
    T__9 = 9
    WS = 6
    input: org.antlr.runtime.TokenStream
    tokenNames = 'array(java.lang.String, [u\'<invalid>\', u\'<EOR>\', u\'<DOWN>\', u\'<UP>\', u\'ID\', u\'Number\', u\'WS\', u"\'(\'", u"\')\'", u"\'*\'", u"\'+\'", u"\'-\'", u"\'/\'"])'
    
    def __init__(self, o: org.antlr.runtime.TokenStream) -> None: ...
    
    def additionExp(self) -> float: ...
    
    def atomExp(self) -> float: ...
    
    def expr(self) -> float: ...
    
    def getDelegates(self) -> typing.List[org.antlr.runtime.Parser]: ...
    
    def getGrammarFileName(self) -> str: ...
    
    def getTokenNames(self) -> typing.List[str]: ...
    
    def multiplyExp(self) -> float: ...
    
    def reportError(self, o: org.antlr.runtime.RecognitionException) -> None: ...
    
    def start(self) -> None: ...
    
    
class FreeFormTransaction:
    INVALID_DATE = -1
    
    def __init__(self, c: com.moneydance.apps.md.view.gui.MoneydanceGUI) -> None: ...
    
    def findSimilarMatches(self) -> bool: ...
    
    def getAmountString(self) -> str: ...
    
    def getDate(self) -> int: ...
    
    def getDescription(self) -> str: ...
    
    def getTxn(self) -> com.infinitekind.moneydance.model.ParentTxn: ...
    
    def getValue(self) -> int: ...
    
    def parse(self, s: str) -> bool: ...
    
    def setBaseAccount(self, c: com.infinitekind.moneydance.model.Account) -> None: ...
    
    
class InvalidTokenException(java.lang.IllegalArgumentException):
    def __init__(self, exception: Exception) -> None: ...
    
    
class MathExpression:
    def __init__(self) -> None: ...
    
    def parse(self, s: str) -> bool: ...
    
    
class QuickTransactionDelegate(ParseDelegate, 'java.awt.event.ActionListener'):
    CATEGORY_ACCOUNT = u'category_account'
    PARENT_ACCOUNT = u'parent_account'
    
    def __init__(self, c: com.moneydance.apps.md.view.gui.MoneydanceGUI, j: 'java.awt.event.ActionListener') -> None: ...
    
    def actionPerformed(self, j: 'java.awt.event.ActionEvent') -> None: ...
    
    def getDescription(self) -> str: ...
    
    def getSelectedAccount(self) -> com.infinitekind.moneydance.model.Account: ...
    
    def getSelectedCategory(self) -> com.infinitekind.moneydance.model.Account: ...
    
    def getTransactionAmount(self) -> int: ...
    
    def getTransactionDate(self) -> int: ...
    
    def getUI(self) -> javax.swing.JComponent: ...
    
    def hideUI(self) -> None: ...
    
    def parse(self, s: str) -> bool: ...
    
    def reset(self) -> None: ...
    
    def setDescription(self, s: str) -> None: ...
    
    def showUI(self) -> None: ...
    
    def update(self, s: str) -> typing.Dict[str,com.infinitekind.moneydance.model.Account]: ...
    
    
class QuickTransactionDelegateUI(javax.swing.JPanel):
    pass
    
class TransactionLexer(org.antlr.runtime.Lexer):
    AMOUNT = 4
    CURRENCY = 5
    DEFAULT_TOKEN_CHANNEL = 0
    DESCRIPTION = 6
    DIGIT = 7
    EOF = -1
    HIDDEN = 99
    INITIAL_FOLLOW_STACK_SIZE = 100
    MEMO_RULE_FAILED = -2
    MEMO_RULE_UNKNOWN = -1
    NEXT_TOKEN_RULE_NAME = u'nextToken'
    NUMBER = 8
    WORD = 9
    WS = 10
    
    def __init__(self) -> None: ...
    
    def getDelegates(self) -> typing.List[org.antlr.runtime.Lexer]: ...
    
    def getGrammarFileName(self) -> str: ...
    
    def mAMOUNT(self) -> None: ...
    
    def mCURRENCY(self) -> None: ...
    
    def mDESCRIPTION(self) -> None: ...
    
    def mDIGIT(self) -> None: ...
    
    def mNUMBER(self) -> None: ...
    
    def mTokens(self) -> None: ...
    
    def mWORD(self) -> None: ...
    
    def mWS(self) -> None: ...
    
    
class TransactionParser(org.antlr.runtime.Parser):
    AMOUNT = 4
    CURRENCY = 5
    DEFAULT_TOKEN_CHANNEL = 0
    DESCRIPTION = 6
    DIGIT = 7
    EOF = -1
    FOLLOW_AMOUNT_in_transaction42 = '{1}'
    FOLLOW_AMOUNT_in_transaction48 = '{6}'
    FOLLOW_DESCRIPTION_in_transaction40 = '{4}'
    FOLLOW_DESCRIPTION_in_transaction50 = '{1}'
    HIDDEN = 99
    INITIAL_FOLLOW_STACK_SIZE = 100
    MEMO_RULE_FAILED = -2
    MEMO_RULE_UNKNOWN = -1
    NEXT_TOKEN_RULE_NAME = u'nextToken'
    NUMBER = 8
    WORD = 9
    WS = 10
    input: org.antlr.runtime.TokenStream
    tokenNames = "array(java.lang.String, [u'<invalid>', u'<EOR>', u'<DOWN>', u'<UP>', u'AMOUNT', u'CURRENCY', u'DESCRIPTION', u'DIGIT', u'NUMBER', u'WORD', u'WS'])"
    
    def __init__(self, o: org.antlr.runtime.TokenStream) -> None: ...
    
    def getDelegates(self) -> typing.List[org.antlr.runtime.Parser]: ...
    
    def getGrammarFileName(self) -> str: ...
    
    def getTokenNames(self) -> typing.List[str]: ...
    
    def transaction(self) -> None: ...
    
    
