import typing
import com.moneydance.apps.md.controller
import java.awt
import java.io


class PlatformHelper:
    def __init__(self) -> None: ...
    
    def getDocumentsPath(self) -> str: ...
    
    def getRootPath(self) -> str: ...
    
    def getUserCanChooseBrowser(self) -> bool: ...
    
    def handleDraggedOrDoubleClickedFile(self, j: java.io.File) -> None: ...
    
    def handleDraggedOrDoubleClickedFiles(self, t: typing.List[java.io.File]) -> None: ...
    
    def init(self, c: com.moneydance.apps.md.controller.Main) -> None: ...
    
    def initHelper(self) -> None: ...
    
    @staticmethod
    def initPlatformHelper(c: com.moneydance.apps.md.controller.Main) -> 'PlatformHelper': ...
    
    def initializeWindow(self, j: java.awt.Window) -> None: ...
    
    def isConstrainedToSandbox(self) -> bool: ...
    
    def isSandboxed(self) -> bool: ...
    
    def openDirectory(self, j: java.io.File) -> None: ...
    
    def openURL(self, s: str) -> bool: ...
    
    def runPostInitializationTasks(self) -> None: ...
    
    
class DefaultHelper(PlatformHelper):
    def __init__(self) -> None: ...
    
    def initHelper(self) -> None: ...
    
    def isConstrainedToSandbox(self) -> bool: ...
    
    def isSandboxed(self) -> bool: ...
    
    
class MacHelper2(PlatformHelper):
    def __init__(self) -> None: ...
    
    def getDocumentsPath(self) -> str: ...
    
    def getRootPath(self) -> str: ...
    
    def getUserCanChooseBrowser(self) -> bool: ...
    
    def initHelper(self) -> None: ...
    
    def isConstrainedToSandbox(self) -> bool: ...
    
    def isSandboxed(self) -> bool: ...
    
    def runPostInitializationTasks(self) -> None: ...
    
    
class WinHelper(PlatformHelper, str):
    def __init__(self) -> None: ...
    
    def initHelper(self) -> None: ...
    
    def isConstrainedToSandbox(self) -> bool: ...
    
    def isSandboxed(self) -> bool: ...
    
    def startupPerformed(self, s: str) -> None: ...
    
    
