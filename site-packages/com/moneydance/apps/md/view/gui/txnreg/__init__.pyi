import typing
import com.infinitekind.moneydance.model
import com.moneydance.apps.md.view.gui
import com.moneydance.apps.md.view.gui.print
import com.moneydance.awt
import java.awt
import java.lang
import javax.swing
import javax.swing.border
import javax.swing.event


class AccountSelector(javax.swing.JPanel, java.awt.ItemSelectable, 'java.awt.event.ActionListener'):
    pass
    
class CategorySuggestionsPanel(javax.swing.JPanel):
    pass
    
class DefaultPostEditTxnModifier(com.moneydance.apps.md.view.gui.TxnModifier):
    def __init__(self) -> None: ...
    
    def modifyTxn(self, c: com.infinitekind.moneydance.model.AbstractTxn) -> None: ...
    
    def updateDataWithRate(self, c: com.infinitekind.moneydance.model.CurrencyType, c2: com.infinitekind.moneydance.model.CurrencyType, f: float, i: int) -> None: ...
    
    
class DownloadedTxnsView('java.awt.event.ActionListener', javax.swing.event.ListSelectionListener):
    DEBUG = False
    
    def __init__(self, c: com.moneydance.apps.md.view.gui.MoneydanceGUI, c2: com.moneydance.apps.md.view.gui.AccountDetailPanel, txnRegister: 'TxnRegister', c3: com.infinitekind.moneydance.model.OnlineTxnList, c4: com.infinitekind.moneydance.model.Account, c5: com.moneydance.apps.md.view.gui.OnlineManager) -> None: ...
    
    def actionPerformed(self, j: 'java.awt.event.ActionEvent') -> None: ...
    
    def getComponent(self) -> javax.swing.JPanel: ...
    
    def getDefaultButton(self) -> javax.swing.JButton: ...
    
    def goingAway(self) -> bool: ...
    
    @staticmethod
    def makeTitle(c: com.moneydance.apps.md.view.gui.MoneydanceGUI, c2: com.infinitekind.moneydance.model.Account) -> str: ...
    
    def valueChanged(self, j: javax.swing.event.ListSelectionEvent) -> None: ...
    
    
class TxnRegisterType:
    ALIGN_CENTER = 2
    ALIGN_LEFT = 1
    ALIGN_RIGHT = 0
    COLUMN_LEFT_MARGIN = 11
    highlightBorderStroke = 'java.awt.BasicStroke'
    rowIDs: typing.List[typing.List[str]]
    
    def __init__(self, c: com.moneydance.apps.md.view.gui.MoneydanceGUI) -> None: ...
    
    def affectsGlobalTxns(self) -> bool: ...
    
    def allowsBatchChanges(self, s: str) -> bool: ...
    
    def canDoSingleLineMode(self) -> bool: ...
    
    def clickTogglesTxnStatus(self) -> bool: ...
    
    def columnModelToView(self, c: com.infinitekind.moneydance.model.TxnSortOrder) -> int: ...
    
    def columnViewToModel(self, i: int) -> com.infinitekind.moneydance.model.TxnSortOrder: ...
    
    def deleteTxns(self, t: typing.List[com.infinitekind.moneydance.model.AbstractTxn]) -> None: ...
    
    def enableOnlineReconcilation(self) -> bool: ...
    
    def getAlternatePopup(self, txnRegister: 'TxnRegister') -> javax.swing.JPopupMenu: ...
    
    def getAutoRecordTxns(self) -> bool: ...
    
    def getAutomaticNewTxn(self, c: com.infinitekind.moneydance.model.AbstractTxn) -> com.infinitekind.moneydance.model.AbstractTxn: ...
    
    def getColMinWidth(self, registerInfo: 'RegisterInfo', i: int) -> int: ...
    
    def getColPreferredWidth(self, registerInfo: 'RegisterInfo', i: int) -> int: ...
    
    def getColResizeWeight(self, i: int) -> float: ...
    
    def getColumnKey(self, i: int, i2: int) -> str: ...
    
    def getColumnLabel(self, i: int, i2: int) -> str: ...
    
    def getColumnSortAscending(self, i: int, b: bool) -> bool: ...
    
    def getDecreaseColumnLabel(self) -> str: ...
    
    def getHighlightsFutureTxns(self) -> bool: ...
    
    def getIncreaseColumnLabel(self) -> str: ...
    
    def getNumColumns(self) -> int: ...
    
    def getPostEditModifier(self) -> com.moneydance.apps.md.view.gui.TxnModifier: ...
    
    def getPreferredFieldWidth(self, registerInfo: 'RegisterInfo', i: int) -> int: ...
    
    @staticmethod
    def getRegisterTypeForAccount(c: com.moneydance.apps.md.view.gui.MoneydanceGUI, c2: com.infinitekind.moneydance.model.Account) -> 'TxnRegisterType': ...
    
    def getRowsPerTxn(self) -> int: ...
    
    def getSingleTxnMode(self) -> bool: ...
    
    def getSuppressDateColumn(self) -> bool: ...
    
    def getTxnEditor(self, c: com.infinitekind.moneydance.model.AbstractTxn) -> 'RegTxnEditor': ...
    
    def isEditable(self) -> bool: ...
    
    def isInSchedulingMode(self) -> bool: ...
    
    def preferencesUpdated(self) -> None: ...
    
    def renderTxn(self, j: java.awt.Graphics, registerInfo: 'RegisterInfo', j2: java.awt.Rectangle, c: com.moneydance.apps.md.view.gui.TxnWrapper, b: bool, b2: bool) -> None: ...
    
    def restoreScrollPosition(self) -> bool: ...
    
    def setAffectsGlobalTxns(self, b: bool) -> None: ...
    
    def setAmountColumnIDs(self, s: str, s2: str) -> None: ...
    
    def setColumnIDsForAcct(self, c: com.infinitekind.moneydance.model.Account) -> None: ...
    
    def setPostEditModifier(self, c: com.moneydance.apps.md.view.gui.TxnModifier) -> None: ...
    
    def setSchedulingMode(self, b: bool) -> None: ...
    
    def setSingleTxnMode(self, b: bool) -> None: ...
    
    def setSuppressDateColumn(self, b: bool) -> None: ...
    
    def setUseFromAccountName(self, b: bool) -> None: ...
    
    def storePreferences(self) -> None: ...
    
    def usesAlternatePopup(self, txnRegister: 'TxnRegister') -> bool: ...
    
    
class InvestRegisterType(TxnRegisterType):
    ALIGN_CENTER = 2
    ALIGN_LEFT = 1
    ALIGN_RIGHT = 0
    COLUMN_LEFT_MARGIN = 11
    highlightBorderStroke = 'java.awt.BasicStroke'
    rowIDs: typing.List[typing.List[str]]
    
    def __init__(self, c: com.moneydance.apps.md.view.gui.MoneydanceGUI) -> None: ...
    
    def allowsBatchChanges(self, s: str) -> bool: ...
    
    def canDoSingleLineMode(self) -> bool: ...
    
    def columnModelToView(self, c: com.infinitekind.moneydance.model.TxnSortOrder) -> int: ...
    
    def columnViewToModel(self, i: int) -> com.infinitekind.moneydance.model.TxnSortOrder: ...
    
    def getColMinWidth(self, registerInfo: 'RegisterInfo', i: int) -> int: ...
    
    def getColPreferredWidth(self, registerInfo: 'RegisterInfo', i: int) -> int: ...
    
    def getColResizeWeight(self, i: int) -> float: ...
    
    def getColumnKey(self, i: int, i2: int) -> str: ...
    
    def getColumnSortAscending(self, i: int, b: bool) -> bool: ...
    
    def getNumColumns(self) -> int: ...
    
    def getPreferredFieldWidth(self, registerInfo: 'RegisterInfo', i: int) -> int: ...
    
    def getRowsPerTxn(self) -> int: ...
    
    def getTxnEditor(self, c: com.infinitekind.moneydance.model.AbstractTxn) -> 'RegTxnEditor': ...
    
    @staticmethod
    def getTxnTypeLabel(c: com.infinitekind.moneydance.model.InvestTxnType) -> str: ...
    
    def preferencesUpdated(self) -> None: ...
    
    
class LoanRegisterType(TxnRegisterType):
    ALIGN_CENTER = 2
    ALIGN_LEFT = 1
    ALIGN_RIGHT = 0
    COLUMN_LEFT_MARGIN = 11
    highlightBorderStroke = 'java.awt.BasicStroke'
    rowIDs: typing.List[typing.List[str]]
    
    def __init__(self, c: com.moneydance.apps.md.view.gui.MoneydanceGUI) -> None: ...
    
    def allowsBatchChanges(self, s: str) -> bool: ...
    
    def columnModelToView(self, c: com.infinitekind.moneydance.model.TxnSortOrder) -> int: ...
    
    def columnViewToModel(self, i: int) -> com.infinitekind.moneydance.model.TxnSortOrder: ...
    
    def getAutomaticNewTxn(self, c: com.infinitekind.moneydance.model.AbstractTxn) -> com.infinitekind.moneydance.model.AbstractTxn: ...
    
    def getColMinWidth(self, registerInfo: 'RegisterInfo', i: int) -> int: ...
    
    def getColPreferredWidth(self, registerInfo: 'RegisterInfo', i: int) -> int: ...
    
    def getColResizeWeight(self, i: int) -> float: ...
    
    def getColumnKey(self, i: int, i2: int) -> str: ...
    
    def getColumnSortAscending(self, i: int, b: bool) -> bool: ...
    
    def getNumColumns(self) -> int: ...
    
    def getPreferredFieldWidth(self, registerInfo: 'RegisterInfo', i: int) -> int: ...
    
    def getRowsPerTxn(self) -> int: ...
    
    def getTxnEditor(self, c: com.infinitekind.moneydance.model.AbstractTxn) -> 'RegTxnEditor': ...
    
    
class MDScrollUtil:
    def __init__(self) -> None: ...
    
    @staticmethod
    def addScrolling(mDScrollable: 'MDScrollable') -> None: ...
    
    
class MDScrollable:
    def __init__(self) -> None: ...
    
    def getComponent(self) -> java.awt.Component: ...
    
    def scrollBlocks(self, i: int) -> None: ...
    
    def scrollUnits(self, i: int) -> None: ...
    
    
class MDScroller('java.awt.event.MouseWheelListener'):
    def __init__(self) -> None: ...
    
    def init(self, mDScrollable: MDScrollable) -> None: ...
    
    def mouseWheelMoved(self, j: 'java.awt.event.MouseWheelEvent') -> None: ...
    
    
class OnlineTxnStatusPanel(javax.swing.JPanel):
    pass
    
class TxnInfoPanel(javax.swing.JPanel):
    pass
    
class OnlineTxnStatusPanel2(TxnInfoPanel):
    pass
    
class PopupEntrySpec:
    addressIcon = None
    addressImg = None
    
    def __init__(self, c: com.moneydance.apps.md.view.gui.MoneydanceGUI) -> None: ...
    
    def entryWasSelected(self, txnTextField: 'TxnTextField', o: object) -> None: ...
    
    def getIconForObject(self, txnTextField: 'TxnTextField', o: object) -> javax.swing.Icon: ...
    
    def getPopupElements(self, txnTextField: 'TxnTextField') -> typing.Iterator: ...
    
    def getPopupEntryRenderer(self) -> javax.swing.ListCellRenderer: ...
    
    def getTextForObject(self, txnTextField: 'TxnTextField', o: object) -> str: ...
    
    def preferencesUpdated(self) -> None: ...
    
    
class PopupSelector(javax.swing.JPanel, java.awt.ItemSelectable, 'java.awt.event.ActionListener'):
    pass
    
class ReconcileRegisterType(TxnRegisterType):
    ALIGN_CENTER = 2
    ALIGN_LEFT = 1
    ALIGN_RIGHT = 0
    COLUMN_LEFT_MARGIN = 11
    highlightBorderStroke = 'java.awt.BasicStroke'
    rowIDs: typing.List[typing.List[str]]
    
    def __init__(self, c: com.moneydance.apps.md.view.gui.MoneydanceGUI) -> None: ...
    
    def canDoSingleLineMode(self) -> bool: ...
    
    def columnModelToView(self, c: com.infinitekind.moneydance.model.TxnSortOrder) -> int: ...
    
    def columnViewToModel(self, i: int) -> com.infinitekind.moneydance.model.TxnSortOrder: ...
    
    def getAlternatePopup(self, txnRegister: 'TxnRegister') -> javax.swing.JPopupMenu: ...
    
    def getColMinWidth(self, registerInfo: 'RegisterInfo', i: int) -> int: ...
    
    def getColPreferredWidth(self, registerInfo: 'RegisterInfo', i: int) -> int: ...
    
    def getColResizeWeight(self, i: int) -> float: ...
    
    def getColumnKey(self, i: int, i2: int) -> str: ...
    
    def getColumnSortAscending(self, i: int, b: bool) -> bool: ...
    
    def getNumColumns(self) -> int: ...
    
    def getPreferredFieldWidth(self, registerInfo: 'RegisterInfo', i: int) -> int: ...
    
    def getRowsPerTxn(self) -> int: ...
    
    def getTxnEditor(self, c: com.infinitekind.moneydance.model.AbstractTxn) -> 'RegTxnEditor': ...
    
    def isEditable(self) -> bool: ...
    
    def usesAlternatePopup(self, txnRegister: 'TxnRegister') -> bool: ...
    
    
class RegEditorBorder(javax.swing.border.AbstractBorder):
    def __init__(self) -> None: ...
    
    def getBorderInsets(self, j: java.awt.Component) -> java.awt.Insets: ...
    
    def isBorderOpaque(self) -> bool: ...
    
    def paintBorder(self, j: java.awt.Component, j2: java.awt.Graphics, i: int, i2: int, i3: int, i4: int) -> None: ...
    
    
class RegHeader(javax.swing.JComponent):
    pass
    
class RegTxnEditor(javax.swing.JComponent):
    pass
    
class RegInvestTxnEditor(RegTxnEditor, 'java.awt.event.ActionListener', com.moneydance.apps.md.view.gui.AutoCompletable, 'java.awt.event.FocusListener'):
    pass
    
class RegPSplitTxnEditor(RegTxnEditor, com.moneydance.apps.md.view.gui.AutoCompletable, 'java.awt.event.FocusListener'):
    pass
    
class RegParentTxnEditor(RegTxnEditor, 'java.awt.event.ActionListener', com.moneydance.apps.md.view.gui.AutoCompletable, 'java.awt.event.FocusListener'):
    pass
    
class RegSplitTxnEditor(RegTxnEditor, 'java.awt.event.ActionListener', com.moneydance.apps.md.view.gui.AutoCompletable, 'java.awt.event.FocusListener'):
    pass
    
class RegisterButton(javax.swing.JButton):
    pass
    
class RegisterInfo:
    SORT_IDS = 'array(com.infinitekind.moneydance.model.TxnSortOrder, [DATE, DATE_ENTERED, DESCRIPTION, AMOUNT, STATUS_THEN_DATE, ACCOUNT, DATE_THEN_STATUS, DATE_THEN_AMOUNT, DATE_THEN_CHECKNUM, CHECKNUM, STATUS_THEN_CKNUM])'
    
    def __init__(self) -> None: ...
    
    def getColumnForPoint(self, j: java.awt.Point) -> int: ...
    
    def getPrintingInfo(self) -> 'RegisterInfo': ...
    
    def getRegister(self) -> 'TxnRegister': ...
    
    def getRegisterType(self) -> TxnRegisterType: ...
    
    def initFonts(self) -> None: ...
    
    def isOverColumnBorder(self, i: int) -> int: ...
    
    def setRowWidth(self, i: int) -> None: ...
    
    def toString(self) -> str: ...
    
    
class ScrollingPopup(javax.swing.JPanel):
    pass
    
class SecurityRegisterType(TxnRegisterType):
    ALIGN_CENTER = 2
    ALIGN_LEFT = 1
    ALIGN_RIGHT = 0
    COLUMN_LEFT_MARGIN = 11
    highlightBorderStroke = 'java.awt.BasicStroke'
    rowIDs: typing.List[typing.List[str]]
    
    def __init__(self, c: com.moneydance.apps.md.view.gui.MoneydanceGUI) -> None: ...
    
    def canDoSingleLineMode(self) -> bool: ...
    
    def columnModelToView(self, c: com.infinitekind.moneydance.model.TxnSortOrder) -> int: ...
    
    def columnViewToModel(self, i: int) -> com.infinitekind.moneydance.model.TxnSortOrder: ...
    
    def deleteTxns(self, t: typing.List[com.infinitekind.moneydance.model.AbstractTxn]) -> None: ...
    
    def getAlternatePopup(self, txnRegister: 'TxnRegister') -> javax.swing.JPopupMenu: ...
    
    def getColMinWidth(self, registerInfo: RegisterInfo, i: int) -> int: ...
    
    def getColPreferredWidth(self, registerInfo: RegisterInfo, i: int) -> int: ...
    
    def getColResizeWeight(self, i: int) -> float: ...
    
    def getColumnKey(self, i: int, i2: int) -> str: ...
    
    def getColumnSortAscending(self, i: int, b: bool) -> bool: ...
    
    def getNumColumns(self) -> int: ...
    
    def getPreferredFieldWidth(self, registerInfo: RegisterInfo, i: int) -> int: ...
    
    def getRowsPerTxn(self) -> int: ...
    
    def getTxnEditor(self, c: com.infinitekind.moneydance.model.AbstractTxn) -> RegTxnEditor: ...
    
    @staticmethod
    def getTxnTypeLabel(c: com.infinitekind.moneydance.model.InvestTxnType) -> str: ...
    
    def isEditable(self) -> bool: ...
    
    def preferencesUpdated(self) -> None: ...
    
    def usesAlternatePopup(self, txnRegister: 'TxnRegister') -> bool: ...
    
    
class SplitRegisterType(TxnRegisterType):
    ALIGN_CENTER = 2
    ALIGN_LEFT = 1
    ALIGN_RIGHT = 0
    COLUMN_LEFT_MARGIN = 11
    highlightBorderStroke = 'java.awt.BasicStroke'
    rowIDs: typing.List[typing.List[str]]
    
    def __init__(self, c: com.moneydance.apps.md.view.gui.MoneydanceGUI, splitsWindow: 'SplitsWindow') -> None: ...
    
    def allowsBatchChanges(self) -> bool: ...
    
    def canDoSingleLineMode(self) -> bool: ...
    
    def columnModelToView(self, c: com.infinitekind.moneydance.model.TxnSortOrder) -> int: ...
    
    def columnViewToModel(self, i: int) -> com.infinitekind.moneydance.model.TxnSortOrder: ...
    
    def deleteTxns(self, t: typing.List[com.infinitekind.moneydance.model.AbstractTxn]) -> None: ...
    
    def getAutoRecordTxns(self) -> bool: ...
    
    def getAutomaticNewTxn(self, c: com.infinitekind.moneydance.model.AbstractTxn) -> com.infinitekind.moneydance.model.AbstractTxn: ...
    
    def getColMinWidth(self, registerInfo: RegisterInfo, i: int) -> int: ...
    
    def getColPreferredWidth(self, registerInfo: RegisterInfo, i: int) -> int: ...
    
    def getColResizeWeight(self, i: int) -> float: ...
    
    def getColumnKey(self, i: int, i2: int) -> str: ...
    
    def getColumnSortAscending(self, i: int, b: bool) -> bool: ...
    
    def getHighlightsFutureTxns(self) -> bool: ...
    
    def getNumColumns(self) -> int: ...
    
    def getPreferredFieldWidth(self, registerInfo: RegisterInfo, i: int) -> int: ...
    
    def getRowsPerTxn(self) -> int: ...
    
    def getSingleTxnMode(self) -> bool: ...
    
    def getTxnEditor(self, c: com.infinitekind.moneydance.model.AbstractTxn) -> RegTxnEditor: ...
    
    def restoreScrollPosition(self) -> bool: ...
    
    def setSingleTxnMode(self, b: bool) -> None: ...
    
    
class SplitsWindow(com.moneydance.apps.md.view.gui.SecondaryDialog, 'java.awt.event.ActionListener'):
    pass
    
class TxnEditField:
    def __init__(self) -> None: ...
    
    def configureForRegister(self, regTxnEditor: RegTxnEditor) -> None: ...
    
    def getComponent(self) -> javax.swing.JComponent: ...
    
    def hasEditFocus(self) -> bool: ...
    
    def preferencesUpdated(self, c: com.moneydance.apps.md.view.gui.MoneydanceGUI) -> None: ...
    
    def setEnabled(self, b: bool) -> None: ...
    
    
class TxnAcctField(TxnEditField, javax.swing.JPanel):
    pass
    
class TxnAmtField(TxnEditField):
    def __init__(self, c: com.moneydance.apps.md.view.gui.MoneydanceGUI, c2: com.infinitekind.moneydance.model.CurrencyType) -> None: ...
    
    def clearValue(self) -> None: ...
    
    def configureForRegister(self, regTxnEditor: RegTxnEditor) -> None: ...
    
    def getAmount(self) -> int: ...
    
    def getAmountField(self) -> com.moneydance.awt.JCurrencyField: ...
    
    def getComponent(self) -> javax.swing.JComponent: ...
    
    def hasEditFocus(self) -> bool: ...
    
    def parseAmount(self) -> int: ...
    
    def preferencesUpdated(self, c: com.moneydance.apps.md.view.gui.MoneydanceGUI) -> None: ...
    
    def setAllowQuickDecimal(self, b: bool) -> None: ...
    
    def setAmount(self, c: com.infinitekind.moneydance.model.CurrencyType, i: int) -> None: ...
    
    def setCurrencyType(self, c: com.infinitekind.moneydance.model.CurrencyType) -> None: ...
    
    def setEnabled(self, b: bool) -> None: ...
    
    def setNullEntryLabel(self, s: str) -> None: ...
    
    def setOppositeField(self, txnAmtField: 'TxnAmtField') -> None: ...
    
    def setVisible(self, b: bool) -> None: ...
    
    
class TxnCheckboxField(TxnEditField):
    def __init__(self, c: com.moneydance.apps.md.view.gui.MoneydanceGUI) -> None: ...
    
    def configureForRegister(self, regTxnEditor: RegTxnEditor) -> None: ...
    
    def getComponent(self) -> javax.swing.JComponent: ...
    
    def hasEditFocus(self) -> bool: ...
    
    def isSelected(self) -> bool: ...
    
    def preferencesUpdated(self, c: com.moneydance.apps.md.view.gui.MoneydanceGUI) -> None: ...
    
    def setEnabled(self, b: bool) -> None: ...
    
    def setSelected(self, b: bool) -> None: ...
    
    
class TxnDateField(TxnEditField):
    def __init__(self, c: com.moneydance.apps.md.view.gui.MoneydanceGUI) -> None: ...
    
    def configureForRegister(self, regTxnEditor: RegTxnEditor) -> None: ...
    
    def getComponent(self) -> javax.swing.JComponent: ...
    
    def getDate(self) -> int: ...
    
    def hasEditFocus(self) -> bool: ...
    
    def parseDate(self) -> int: ...
    
    def preferencesUpdated(self, c: com.moneydance.apps.md.view.gui.MoneydanceGUI) -> None: ...
    
    def setDate(self, i: int) -> None: ...
    
    def setEnabled(self, b: bool) -> None: ...
    
    
class TxnDecorator:
    def __init__(self) -> None: ...
    
    def getForegroundColor(self, c: com.moneydance.apps.md.view.gui.TxnWrapper) -> java.awt.Color: ...
    
    def initialize(self, c: com.moneydance.apps.md.view.gui.MoneydanceGUI) -> None: ...
    
    def paintBackground(self, txnRegisterType: TxnRegisterType, j: java.awt.Graphics, registerInfo: RegisterInfo, j2: java.awt.Rectangle, i: int, c: com.moneydance.apps.md.view.gui.TxnWrapper) -> None: ...
    
    def paintForeground(self, txnRegisterType: TxnRegisterType, j: java.awt.Graphics, registerInfo: RegisterInfo, j2: java.awt.Rectangle, i: int, c: com.moneydance.apps.md.view.gui.TxnWrapper) -> None: ...
    
    
class TxnDetailsPanel(TxnInfoPanel, com.moneydance.apps.md.view.gui.AttachmentHolder):
    pass
    
class TxnFilterPanel(javax.swing.JPanel):
    pass
    
class TxnLabelField(TxnEditField):
    def __init__(self, c: com.moneydance.apps.md.view.gui.MoneydanceGUI) -> None: ...
    
    def configureForRegister(self, regTxnEditor: RegTxnEditor) -> None: ...
    
    def getComponent(self) -> javax.swing.JComponent: ...
    
    def getLabel(self) -> javax.swing.JLabel: ...
    
    def hasEditFocus(self) -> bool: ...
    
    def preferencesUpdated(self, c: com.moneydance.apps.md.view.gui.MoneydanceGUI) -> None: ...
    
    def setEnabled(self, b: bool) -> None: ...
    
    def setNullEntryLabel(self, s: str) -> None: ...
    
    
class TxnPopupField(TxnEditField, javax.swing.JPanel):
    pass
    
class TxnRateField(TxnEditField, javax.swing.JPanel):
    pass
    
class TxnRegister(javax.swing.JPanel, java.lang.Runnable):
    pass
    
class TxnRegisterList(MDScrollable, javax.swing.JPanel, com.moneydance.apps.md.view.gui.DropTargetDelegate):
    pass
    
class TxnRegisterPrinter(com.moneydance.apps.md.view.gui.print.MDPrintable):
    def __init__(self, c: com.moneydance.apps.md.view.gui.MoneydanceGUI, txnRegister: TxnRegister, s: str) -> None: ...
    
    def doPrintJob(self) -> None: ...
    
    def getSettingsKey(self) -> str: ...
    
    def getTitle(self) -> str: ...
    
    def isLandscape(self) -> bool: ...
    
    def printPage(self, j: java.awt.Graphics2D, i: int, f: float, f2: float, i2: int) -> bool: ...
    
    def usesWholePage(self) -> bool: ...
    
    
class TxnRenderer(java.awt.Component, javax.swing.ListCellRenderer):
    pass
    
class TxnStatusField(TxnEditField):
    def __init__(self, c: com.moneydance.apps.md.view.gui.MoneydanceGUI) -> None: ...
    
    def configureForRegister(self, regTxnEditor: RegTxnEditor) -> None: ...
    
    def getComponent(self) -> javax.swing.JComponent: ...
    
    def getStatus(self) -> str: ...
    
    def hasEditFocus(self) -> bool: ...
    
    def preferencesUpdated(self, c: com.moneydance.apps.md.view.gui.MoneydanceGUI) -> None: ...
    
    def setEnabled(self, b: bool) -> None: ...
    
    def setStatus(self, s: str) -> None: ...
    
    
class TxnTagsField(TxnEditField, javax.swing.JPanel, 'java.awt.event.ActionListener'):
    pass
    
class TxnTextField(TxnEditField, javax.swing.JPanel):
    pass
    
