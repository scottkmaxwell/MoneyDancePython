import typing
import com.infinitekind.moneydance.model
import com.moneydance.apps.md.view.gui
import com.moneydance.apps.md.view.gui.budgetbars
import com.moneydance.apps.md.view.gui.budgetbars.model
import com.moneydance.apps.md.view.gui.homepage
import com.moneydance.apps.md.view.resources
import java.awt
import javax.swing


class IBudgetBarController(com.moneydance.apps.md.view.resources.MDResourceProvider):
    def __init__(self) -> None: ...
    
    def cleanUp(self) -> None: ...
    
    def getAccountName(self, i: int) -> str: ...
    
    def getBarColor(self, f: float, b: bool) -> java.awt.Color: ...
    
    def getBarCount(self) -> int: ...
    
    def getBarItem(self, i: int) -> com.moneydance.apps.md.view.gui.budgetbars.BudgetItemBarView: ...
    
    def getBarLimit(self) -> int: ...
    
    def getCategoryName(self, c: com.infinitekind.moneydance.model.Account) -> str: ...
    
    def getCategoryTooltip(self, c: com.infinitekind.moneydance.model.Account) -> str: ...
    
    def getData(self) -> com.infinitekind.moneydance.model.AccountBook: ...
    
    def getDateRangeKeys(self) -> typing.List[str]: ...
    
    def getDateRangeSelection(self) -> str: ...
    
    def getSettings(self) -> com.moneydance.apps.md.view.gui.budgetbars.model.BudgetBarSettings: ...
    
    def isAccountUsed(self, c: com.infinitekind.moneydance.model.Account) -> bool: ...
    
    def isNotFirst(self, c: com.moneydance.apps.md.view.gui.budgetbars.model.BudgetItemBarModel) -> bool: ...
    
    def isNotLast(self, c: com.moneydance.apps.md.view.gui.budgetbars.model.BudgetItemBarModel) -> bool: ...
    
    def moveDown(self, c: com.moneydance.apps.md.view.gui.budgetbars.model.BudgetItemBarModel) -> None: ...
    
    def moveUp(self, c: com.moneydance.apps.md.view.gui.budgetbars.model.BudgetItemBarModel) -> None: ...
    
    def recalculate(self) -> None: ...
    
    def remove(self, c: com.moneydance.apps.md.view.gui.budgetbars.model.BudgetItemBarModel) -> None: ...
    
    def saveSettings(self) -> None: ...
    
    def setData(self, c: com.infinitekind.moneydance.model.AccountBook) -> None: ...
    
    def setDateRangeSelection(self, s: str) -> None: ...
    
    def setSettings(self, c: com.moneydance.apps.md.view.gui.budgetbars.model.BudgetBarSettings) -> None: ...
    
    def showSettingsDialog(self) -> None: ...
    
    
class BudgetBarController(IBudgetBarController):
    def __init__(self, c: com.moneydance.apps.md.view.gui.budgetbars.model.BudgetBarModel, c2: com.moneydance.apps.md.view.resources.MDResourceProvider, c3: com.moneydance.apps.md.view.gui.homepage.BudgetBarsView) -> None: ...
    
    def cleanUp(self) -> None: ...
    
    def getAccountName(self, i: int) -> str: ...
    
    def getBarColor(self, f: float, b: bool) -> java.awt.Color: ...
    
    def getBarCount(self) -> int: ...
    
    def getBarItem(self, i: int) -> com.moneydance.apps.md.view.gui.budgetbars.BudgetItemBarView: ...
    
    def getBarLimit(self) -> int: ...
    
    def getCategoryName(self, c: com.infinitekind.moneydance.model.Account) -> str: ...
    
    def getCategoryTooltip(self, c: com.infinitekind.moneydance.model.Account) -> str: ...
    
    def getData(self) -> com.infinitekind.moneydance.model.AccountBook: ...
    
    def getDateRangeKeys(self) -> typing.List[str]: ...
    
    def getDateRangeSelection(self) -> str: ...
    
    def getIcon(self, s: str) -> javax.swing.Icon: ...
    
    def getImage(self, s: str) -> java.awt.Image: ...
    
    def getResources(self) -> com.moneydance.apps.md.view.resources.Resources: ...
    
    def getSettings(self) -> com.moneydance.apps.md.view.gui.budgetbars.model.BudgetBarSettings: ...
    
    def getStr(self, s: str) -> str: ...
    
    def isAccountUsed(self, c: com.infinitekind.moneydance.model.Account) -> bool: ...
    
    def isNotFirst(self, c: com.moneydance.apps.md.view.gui.budgetbars.model.BudgetItemBarModel) -> bool: ...
    
    def isNotLast(self, c: com.moneydance.apps.md.view.gui.budgetbars.model.BudgetItemBarModel) -> bool: ...
    
    def moveDown(self, c: com.moneydance.apps.md.view.gui.budgetbars.model.BudgetItemBarModel) -> None: ...
    
    def moveUp(self, c: com.moneydance.apps.md.view.gui.budgetbars.model.BudgetItemBarModel) -> None: ...
    
    def recalculate(self) -> None: ...
    
    def remove(self, c: com.moneydance.apps.md.view.gui.budgetbars.model.BudgetItemBarModel) -> None: ...
    
    def saveSettings(self) -> None: ...
    
    def setData(self, c: com.infinitekind.moneydance.model.AccountBook) -> None: ...
    
    def setDateRangeSelection(self, s: str) -> None: ...
    
    def setSettings(self, c: com.moneydance.apps.md.view.gui.budgetbars.model.BudgetBarSettings) -> None: ...
    
    def showSettingsDialog(self) -> None: ...
    
    def strings(self) -> com.moneydance.apps.md.view.gui.MDStrings: ...
    
    
class BudgetBarUtil:
    def __init__(self) -> None: ...
    
    @staticmethod
    def getAccountDisplayText(c: com.infinitekind.moneydance.model.Account) -> str: ...
    
    @staticmethod
    def getAccountTypeName(c: com.moneydance.apps.md.view.resources.MDResourceProvider, s: str) -> str: ...
    
    @staticmethod
    def pointFromSettingsString(s: str) -> java.awt.Point: ...
    
    @staticmethod
    def settingsStringFromPoint(j: java.awt.Point) -> str: ...
    
    
class DateRangeAction(javax.swing.AbstractAction):
    pass
    
class ITransactionFilter(com.infinitekind.moneydance.model.TxnFilter):
    def __init__(self) -> None: ...
    
    def isRequired(self) -> bool: ...
    
    
class TransactionFilterBase(ITransactionFilter):
    def __init__(self) -> None: ...
    
    
class DateRangeTxnFilter(TransactionFilterBase):
    def __init__(self, i: int, i2: int, b: bool) -> None: ...
    
    def containsTxn(self, c: com.infinitekind.moneydance.model.AbstractTxn) -> bool: ...
    
    def isRequired(self) -> bool: ...
    
    
class DateTxnFilter(com.infinitekind.moneydance.model.TxnFilter):
    def __init__(self, c: com.infinitekind.moneydance.model.DateRange) -> None: ...
    
    def containsTxn(self, c: com.infinitekind.moneydance.model.AbstractTxn) -> bool: ...
    
    
class SettingsController(com.moneydance.apps.md.view.resources.MDResourceProvider):
    def __init__(self, c: com.moneydance.apps.md.view.gui.budgetbars.model.SettingsModel, iBudgetBarController: IBudgetBarController) -> None: ...
    
    def apply(self) -> None: ...
    
    def getAutoRollUpCategories(self) -> bool: ...
    
    def getBarLimit(self) -> int: ...
    
    def getData(self) -> com.infinitekind.moneydance.model.AccountBook: ...
    
    def getIcon(self, s: str) -> javax.swing.Icon: ...
    
    def getImage(self, s: str) -> java.awt.Image: ...
    
    def getIncomeAsMaximum(self) -> bool: ...
    
    def getResources(self) -> com.moneydance.apps.md.view.resources.Resources: ...
    
    def getSettings(self) -> com.moneydance.apps.md.view.gui.budgetbars.model.BudgetBarSettings: ...
    
    def getShowFullCategoryName(self) -> bool: ...
    
    def getStr(self, s: str) -> str: ...
    
    def setAutoRollUpCategories(self, b: bool) -> None: ...
    
    def setIncomeAsMaximum(self, b: bool) -> None: ...
    
    def setShowFullCategoryName(self, b: bool) -> None: ...
    
    def strings(self) -> com.moneydance.apps.md.view.gui.MDStrings: ...
    
    def validateOverLimit(self, s: str) -> bool: ...
    
    def validateUnderLimit(self, s: str) -> bool: ...
    
    def validateWarningLimit(self, s: str) -> bool: ...
    
    
