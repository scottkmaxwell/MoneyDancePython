import typing
import bot
import checks
import com.infinitekind.moneydance.model
import com.infinitekind.moneydance.online
import com.infinitekind.tiksync
import com.infinitekind.util
import com.moneydance.apps.md.controller
import com.moneydance.apps.md.controller.fileimport
import com.moneydance.apps.md.controller.olb
import com.moneydance.apps.md.controller.olb.plaid
import com.moneydance.apps.md.controller.sync
import com.moneydance.apps.md.view
import com.moneydance.apps.md.view.resources
import com.moneydance.awt
import com.moneydance.awt.graph
import com.moneydance.awt.treetable
import com.moneydance.security
import com.moneydance.util
import java.awt
import java.awt.dnd
import java.awt.font
import java.awt.geom
import java.awt.image
import java.beans
import java.io
import java.lang
import java.text
import java.util
import javax.swing
import javax.swing.border
import javax.swing.event
import javax.swing.plaf.basic
import javax.swing.table
import javax.swing.text
import javax.swing.tree
import javax.swing.undo
import org.jfree.ui
import print
import theme
import txnreg

T = typing.TypeVar("T")


class SecondaryWindow(com.moneydance.apps.md.controller.PreferencesListener):
    def __init__(self) -> None: ...
    
    def getUsesDataFile(self) -> bool: ...
    
    def getWindow(self) -> java.awt.Window: ...
    
    def getWindowName(self) -> str: ...
    
    def goAway(self) -> bool: ...
    
    def goingAway(self) -> bool: ...
    
    
class SecondaryDialog(SecondaryWindow, javax.swing.JDialog):
    pass
    
class AboutWindow(SecondaryDialog):
    pass
    
class AbstractTxnRenderer(java.awt.Component, javax.swing.ListCellRenderer):
    pass
    
class AccountBookSaveDialog(javax.swing.JDialog, 'java.awt.event.ActionListener', java.beans.PropertyChangeListener):
    pass
    
class AccountChoice(javax.swing.JComboBox, 'java.awt.event.ItemListener'):
    pass
    
class DisposablePanel(javax.swing.JPanel):
    pass
    
class AccountDetailPanel(DisposablePanel, com.moneydance.apps.md.controller.PreferencesListener):
    pass
    
class AccountDetailWindow:
    def __init__(self) -> None: ...
    
    
class AccountInfoListener:
    def __init__(self) -> None: ...
    
    def accountInfoUpdated(self) -> None: ...
    
    
class AccountInfoPanel(javax.swing.JPanel):
    pass
    
class OKButtonListener:
    def __init__(self) -> None: ...
    
    def buttonPressed(self, i: int) -> None: ...
    
    
class AccountInfoWindow(SecondaryDialog, OKButtonListener):
    pass
    
class AccountKeySelectionManager(str):
    def __init__(self) -> None: ...
    
    def selectionForKey(self, s: str, j: javax.swing.ComboBoxModel) -> int: ...
    
    def setUseBaseAccountName(self, b: bool) -> None: ...
    
    
class AccountListModel(javax.swing.AbstractListModel, javax.swing.ComboBoxModel, com.infinitekind.moneydance.model.AccountListener, java.awt.ItemSelectable, java.lang.Runnable):
    pass
    
class InterfacePanel:
    def __init__(self) -> None: ...
    
    def getSearchField(self) -> javax.swing.JTextField: ...
    
    def getSelectedAccount(self) -> com.infinitekind.moneydance.model.Account: ...
    
    def getVisiblePanel(self) -> DisposablePanel: ...
    
    def goingAway(self) -> bool: ...
    
    def goneAway(self) -> None: ...
    
    def selectAccount(self, c: com.infinitekind.moneydance.model.Account) -> bool: ...
    
    def showEmbeddedBudget(self, s: str) -> None: ...
    
    def showEmbeddedReminders(self) -> None: ...
    
    def showEmbeddedReport(self, c: com.infinitekind.moneydance.model.ReportSpec) -> None: ...
    
    
class AccountPanel(InterfacePanel, javax.swing.JPanel, com.infinitekind.moneydance.model.AccountListener, 'java.awt.event.ActionListener', com.moneydance.apps.md.controller.PreferencesListener, java.lang.Runnable):
    pass
    
class RegTxnListModel(javax.swing.ListModel, typing.Iterable):
    pass
    
class TxnListModel(RegTxnListModel, javax.swing.AbstractListModel, com.infinitekind.moneydance.model.TransactionListener, typing.Iterable):
    pass
    
class AccountRegTxnListModel(TxnListModel, com.infinitekind.moneydance.model.AccountListener):
    pass
    
class AccountSelectionListener:
    def __init__(self) -> None: ...
    
    def accountSelected(self, c: com.infinitekind.moneydance.model.Account) -> None: ...
    
    def createAccount(self, c: com.infinitekind.moneydance.model.Account) -> None: ...
    
    def deleteAccount(self, c: com.infinitekind.moneydance.model.Account) -> None: ...
    
    def editAccount(self, c: com.infinitekind.moneydance.model.Account) -> None: ...
    
    def graphAccount(self, c: com.infinitekind.moneydance.model.Account) -> None: ...
    
    def reportOnAccount(self, c: com.infinitekind.moneydance.model.Account) -> None: ...
    
    
class AccountTreeCellRenderer(javax.swing.tree.DefaultTreeCellRenderer, javax.swing.ListCellRenderer, javax.swing.table.TableCellRenderer):
    pass
    
class AccountTreeModel(javax.swing.tree.TreeModel, com.moneydance.awt.treetable.TreeTableModel, com.infinitekind.moneydance.model.AccountListener, com.moneydance.apps.md.controller.PreferencesListener):
    pass
    
class AddressBookImagePanel(com.moneydance.awt.ImagePanel, 'java.awt.event.ActionListener', 'java.awt.event.MouseListener'):
    pass
    
class AddressSelector(javax.swing.JPanel, 'java.awt.event.MouseListener', 'java.awt.event.ActionListener'):
    pass
    
class AlertController:
    def __init__(self) -> None: ...
    
    def addAlert(self, s: str, s2: str, j: javax.swing.Action) -> None: ...
    
    def addAlertListener(self, s: str) -> None: ...
    
    def removeAlert(self, s: str) -> None: ...
    
    def removeAlertListener(self, s: str) -> None: ...
    
    
    class AlertInfo:
        def __init__(self, s: str, s2: str, s3: str, s4: str, j: javax.swing.Action) -> None: ...
        
        def getAlertDescription(self) -> str: ...
        
        def getAlertHandler(self) -> javax.swing.Action: ...
        
        def getAlertID(self) -> str: ...
        
        def getAlertTitle(self) -> str: ...
        
        def getAlertType(self) -> str: ...
        
        
    class AlertListener:
        def __init__(self) -> None: ...
        
        def alertsChanged(self, alertController: 'AlertController', t: typing.List[str], t2: typing.List[str], t3: typing.List[str]) -> None: ...
        
        
    class AlertType:
        information = 'information'
        mdplus_relink_needed = 'mdplus_relink_needed'
        other = 'other'
        problem = 'problem'
        
        def __init__(self) -> None: ...
        
        @staticmethod
        def valueOf(s: str) -> str: ...
        
        @staticmethod
        def values() -> typing.List[str]: ...
        
        
    
class ArchiveWindow(SecondaryDialog, OKButtonListener):
    pass
    
class AssetAccountInfoPanel(AccountInfoPanel):
    pass
    
class AttachmentHolder:
    def __init__(self) -> None: ...
    
    def attachmentPressed(self) -> None: ...
    
    def deleteAttachment(self, c: com.infinitekind.moneydance.model.AbstractTxn, s: str) -> None: ...
    
    
class AttachmentsPanel(javax.swing.JPanel):
    pass
    
class AutoCompletable:
    def __init__(self) -> None: ...
    
    def findAutoCompletions(self, j: javax.swing.text.JTextComponent, s: str) -> typing.List[object]: ...
    
    def getTextForObject(self, j: javax.swing.text.JTextComponent, o: object) -> str: ...
    
    
class AutoCompletion(javax.swing.event.DocumentListener):
    def __init__(self, autoCompletable: AutoCompletable, j: javax.swing.text.JTextComponent) -> None: ...
    
    def changedUpdate(self, j: javax.swing.event.DocumentEvent) -> None: ...
    
    def completionWasSuccessful(self) -> bool: ...
    
    def getMatch(self) -> object: ...
    
    def insertUpdate(self, j: javax.swing.event.DocumentEvent) -> None: ...
    
    def removeUpdate(self, j: javax.swing.event.DocumentEvent) -> None: ...
    
    def setTokenDelimiter(self, s: str) -> None: ...
    
    
class BackgroundImagePanel(javax.swing.JPanel):
    pass
    
class BankAccountInfoPanel(AccountInfoPanel, 'java.awt.event.ItemListener'):
    pass
    
class BankInvestPanel(AccountDetailPanel):
    pass
    
class BasicReminderInfoWindow(SecondaryDialog, OKButtonListener):
    pass
    
class BasicReminderNotificationWindow(SecondaryDialog, 'java.awt.event.ActionListener'):
    pass
    
class BasicTxnRenderer(AbstractTxnRenderer):
    pass
    
class BegForRatingPanel(javax.swing.JPanel):
    pass
    
class BigDetailedButton(javax.swing.JPanel):
    pass
    
class CCAccountInfoPanel(AccountInfoPanel, 'java.awt.event.ItemListener'):
    pass
    
class CCTxnRenderer(AbstractTxnRenderer):
    pass
    
class COATreePanel(javax.swing.JPanel, javax.swing.event.ChangeListener, 'java.awt.event.ActionListener'):
    pass
    
class SecondaryFrame(SecondaryWindow, javax.swing.JFrame, 'java.awt.event.KeyListener'):
    pass
    
class COAWindow(SecondaryFrame, 'java.awt.event.ActionListener'):
    pass
    
class Calculator(javax.swing.JComponent):
    pass
    
class CalendarMouseListener:
    def __init__(self, moneydanceGUI: 'MoneydanceGUI', monthView: 'MonthView', c: com.infinitekind.moneydance.model.AccountBook) -> None: ...
    
    
class CheckNumbersEditor(javax.swing.JPanel):
    pass
    
class ChooseSplitType(javax.swing.JDialog, 'java.awt.event.ActionListener'):
    pass
    
class CircleDrawer(org.jfree.ui.Drawable):
    def __init__(self, j: java.awt.Paint, j2: java.awt.Stroke, j3: java.awt.Paint) -> None: ...
    
    def draw(self, j: java.awt.Graphics2D, j2: java.awt.geom.Rectangle2D) -> None: ...
    
    
class ConfirmDeleteDialog(OKButtonListener, javax.swing.JDialog):
    pass
    
class ConsoleWindow(SecondaryFrame):
    pass
    
class CreateAccountWizard(SecondaryDialog, 'java.awt.event.ActionListener'):
    pass
    
class CurrHistoryWindow(SecondaryDialog, 'java.awt.event.ActionListener'):
    pass
    
class CurrInfoPanel(javax.swing.JPanel):
    pass
    
class CurrencyGraphLabeler(com.moneydance.awt.graph.ValueLabeler):
    def __init__(self, moneydanceGUI: 'MoneydanceGUI', c: com.infinitekind.moneydance.model.CurrencyType) -> None: ...
    
    def getLabelForValue(self, f: float, i: int) -> str: ...
    
    def preferencesUpdated(self) -> None: ...
    
    
class CurrencyModel(javax.swing.AbstractListModel, javax.swing.ComboBoxModel, com.infinitekind.moneydance.model.CurrencyListener):
    pass
    
class CustomFilterButton(javax.swing.JToggleButton):
    pass
    
class DateGraphLabeler(com.moneydance.awt.graph.ValueLabeler):
    def __init__(self, moneydanceGUI: 'MoneydanceGUI') -> None: ...
    
    def getLabelForValue(self, f: float, i: int) -> str: ...
    
    def preferencesUpdated(self) -> None: ...
    
    
class DateRangeChooser(com.moneydance.util.BasePropertyChangeReporter, 'java.awt.event.ItemListener', java.beans.PropertyChangeListener):
    pass
    
class DebugWindow(SecondaryDialog):
    pass
    
class DefaultAcctSearch(com.infinitekind.moneydance.model.AcctFilter):
    ACTIVE_ACCOUNTS_FILTER = 'com.infinitekind.moneydance.model.AcctFilter$2'
    ACTIVE_CATEGORY_CHOICE_FILTER = 'com.infinitekind.moneydance.model.AcctFilter$9'
    ALL_ACCOUNTS_FILTER = 'com.infinitekind.moneydance.model.AcctFilter$7'
    CATEGORY_CHOICE_FILTER = 'com.infinitekind.moneydance.model.AcctFilter$8'
    CATEGORY_FILTER = 'com.infinitekind.moneydance.model.AcctFilter$6'
    EDITABLE_ACCOUNTS_FILTER = 'com.infinitekind.moneydance.model.AcctFilter$5'
    FORMAT_FULL_PATH = 0
    FORMAT_INDENTED = 1
    INACTIVE_ACCOUNTS_FILTER = 'com.infinitekind.moneydance.model.AcctFilter$3'
    NON_CATEGORY_FILTER = 'com.infinitekind.moneydance.model.AcctFilter$1'
    VIEWABLE_ACCOUNTS_FILTER = 'com.infinitekind.moneydance.model.AcctFilter$4'
    
    def __init__(self) -> None: ...
    
    def clearDontShowAccounts(self) -> None: ...
    
    def format(self, c: com.infinitekind.moneydance.model.Account) -> str: ...
    
    def getContainerAccount(self) -> com.infinitekind.moneydance.model.Account: ...
    
    def matches(self, c: com.infinitekind.moneydance.model.Account) -> bool: ...
    
    def setContainerAccount(self, c: com.infinitekind.moneydance.model.Account) -> None: ...
    
    def setDontShowInactiveAccounts(self, b: bool) -> None: ...
    
    def setFormatMethod(self, i: int) -> None: ...
    
    def setShowAccount(self, c: com.infinitekind.moneydance.model.Account, b: bool) -> None: ...
    
    def setShowAssetAccounts(self, b: bool) -> None: ...
    
    def setShowBankAccounts(self, b: bool) -> None: ...
    
    def setShowCreditCardAccounts(self, b: bool) -> None: ...
    
    def setShowExpenseAccounts(self, b: bool) -> None: ...
    
    def setShowIncomeAccounts(self, b: bool) -> None: ...
    
    def setShowInvestAccounts(self, b: bool) -> None: ...
    
    def setShowLiabilityAccounts(self, b: bool) -> None: ...
    
    def setShowLoanAccounts(self, b: bool) -> None: ...
    
    def setShowOnlyDescendantsOf(self, c: com.infinitekind.moneydance.model.Account) -> None: ...
    
    def setShowOnlyOnlineBankingCandidates(self, b: bool) -> None: ...
    
    def setShowOnlyOnlineBillPayCandidates(self, b: bool) -> None: ...
    
    def setShowOtherAccounts(self, b: bool) -> None: ...
    
    def setShowRootAccounts(self, b: bool) -> None: ...
    
    def setShowSecurityAccounts(self, b: bool) -> None: ...
    
    def showAllAccountTypes(self) -> None: ...
    
    
class DefaultOnlineUIProxy(com.infinitekind.moneydance.online.OnlineBankingUI):
    DEFAULT_ERROR_WINDOW_HEIGHT = 400
    DEFAULT_ERROR_WINDOW_WIDTH = 700
    
    def __init__(self, moneydanceGUI: 'MoneydanceGUI', c: com.infinitekind.moneydance.model.AccountBook, accountPanel: AccountPanel) -> None: ...
    
    def authenticateUser(self, c: com.infinitekind.moneydance.model.OnlineService, s: str, c2: com.infinitekind.moneydance.model.OnlineAccountProxy) -> com.infinitekind.moneydance.online.OFXAuthInfo: ...
    
    def getClientUID(self, c: com.infinitekind.moneydance.model.OnlineService, c2: com.infinitekind.moneydance.online.OFXAuthInfo) -> str: ...
    
    def getResourceString(self, s: str) -> str: ...
    
    def getShortDateFormat(self) -> java.text.DateFormat: ...
    
    def matchSecurity(self, c: com.infinitekind.moneydance.model.OnlineService, s: str, s2: str, s3: str) -> com.infinitekind.moneydance.model.CurrencyType: ...
    
    def receivedStatement(self, c: com.infinitekind.moneydance.model.OnlineAccountProxy) -> None: ...
    
    def recordUndoableChange(self, t: typing.List[com.infinitekind.moneydance.model.MoneydanceSyncableItem], t2: typing.List[com.infinitekind.moneydance.model.MoneydanceSyncableItem]) -> None: ...
    
    def selectBankAccount(self, c: com.infinitekind.moneydance.model.OnlineService, s: str) -> com.infinitekind.moneydance.model.OnlineAccountProxy: ...
    
    def selectCreditCardAccount(self, c: com.infinitekind.moneydance.model.OnlineService, s: str) -> com.infinitekind.moneydance.model.OnlineAccountProxy: ...
    
    def selectInvestmentAccount(self, c: com.infinitekind.moneydance.model.OnlineService, s: str) -> com.infinitekind.moneydance.model.OnlineAccountProxy: ...
    
    def setPlaidItemStatus(self, c: com.moneydance.apps.md.controller.olb.plaid.PlaidConnection, c2: com.infinitekind.moneydance.model.OnlineAccountProxy, s: str, b: bool) -> None: ...
    
    def setStatus(self, s: str, f: float) -> None: ...
    
    def showOFXError(self, c: com.infinitekind.moneydance.online.ErrorMessage) -> None: ...
    
    
class DeleteSecurityWindow(SecondaryDialog, OKButtonListener):
    pass
    
class DocumentsRootSelectionDialog:
    def __init__(self, j: java.awt.Frame, c: com.moneydance.apps.md.view.resources.Resources) -> None: ...
    
    def getWorkingDirectory(self) -> java.io.File: ...
    
    def show(self) -> None: ...
    
    
class DropTargetDelegate:
    def __init__(self) -> None: ...
    
    def dragEntered(self) -> None: ...
    
    def dragExited(self) -> None: ...
    
    def dragOver(self, j: java.awt.Point) -> None: ...
    
    def droppedFiles(self, t: typing.List[java.io.File]) -> None: ...
    
    def isAcceptableFile(self, j: java.io.File) -> bool: ...
    
    
class DropboxFileWarning:
    def __init__(self) -> None: ...
    
    @staticmethod
    def checkFileBeforeOpening(moneydanceGUI: 'MoneydanceGUI', c: com.moneydance.apps.md.controller.AccountBookWrapper) -> com.moneydance.apps.md.controller.AccountBookWrapper: ...
    
    
class EditCurrencyWindow(SecondaryDialog):
    pass
    
class EditInvestTxnListener:
    def __init__(self) -> None: ...
    
    def doneEditing(self, investTransactionEditor: 'InvestTransactionEditor', c: com.infinitekind.moneydance.model.AbstractTxn) -> None: ...
    
    
class EditRemindersWindow(SecondaryDialog, 'java.awt.event.ActionListener', print.MDPrintable):
    pass
    
class EditSecuritiesWindow(SecondaryDialog):
    pass
    
class EditTransactionListener:
    def __init__(self) -> None: ...
    
    def cancelEdits(self) -> None: ...
    
    def txnDeleted(self, c: com.infinitekind.moneydance.model.AbstractTxn) -> None: ...
    
    def txnRecorded(self, c: com.infinitekind.moneydance.model.AbstractTxn) -> None: ...
    
    
class EncryptInfoWin(SecondaryDialog, OKButtonListener, 'java.awt.event.ItemListener'):
    pass
    
class ExchangeRateEditor(javax.swing.JPanel, 'java.awt.event.ItemListener', 'java.awt.event.KeyListener'):
    pass
    
class ExpenseIncomeAccountInfoPanel(AccountInfoPanel, javax.swing.event.ChangeListener):
    pass
    
class ExportWindow(SecondaryDialog, OKButtonListener, 'java.awt.event.ItemListener'):
    pass
    
class FXWebView(java.lang.Runnable):
    def __init__(self) -> None: ...
    
    def loadURL(self, s: str) -> None: ...
    
    @staticmethod
    def main(t: typing.List[str]) -> None: ...
    
    def run(self) -> None: ...
    
    def setDeleteEnvironment(self, b: bool) -> None: ...
    
    
class FieldCalculator(SecondaryDialog, javax.swing.event.DocumentListener):
    pass
    
class FileFixer:
    def __init__(self) -> None: ...
    
    def repairWrapper(self, c: com.moneydance.apps.md.controller.AccountBookWrapper) -> com.moneydance.apps.md.controller.AccountBookWrapper: ...
    
    def restoreFromBackup(self, moneydanceGUI: 'MoneydanceGUI', c: com.moneydance.apps.md.controller.AccountBookWrapper) -> com.moneydance.apps.md.controller.AccountBookWrapper: ...
    
    
class FindTxnWindow(SecondaryDialog, OKButtonListener):
    pass
    
class FlatButtonUI(javax.swing.plaf.basic.BasicButtonUI):
    def __init__(self, s: str) -> None: ...
    
    def getBackgroundColor(self) -> java.awt.Paint: ...
    
    def getForegroundColor(self) -> java.awt.Color: ...
    
    def getPreferredSize(self, j: javax.swing.JComponent) -> java.awt.Dimension: ...
    
    def getSelectedBackgroundColor(self) -> java.awt.Paint: ...
    
    def getSelectedForegroundColor(self) -> java.awt.Color: ...
    
    def getShadowPaint(self) -> java.awt.Paint: ...
    
    def installDefaults(self, j: javax.swing.AbstractButton) -> None: ...
    
    def installUI(self, j: javax.swing.JComponent) -> None: ...
    
    def paint(self, j: java.awt.Graphics, j2: javax.swing.JComponent) -> None: ...
    
    def setBackgroundColor(self, j: java.awt.Paint) -> None: ...
    
    def setDisabledTextColor(self, j: java.awt.Color) -> None: ...
    
    def setForegroundColor(self, j: java.awt.Color) -> None: ...
    
    def setSelectedBackgroundColor(self, j: java.awt.Paint) -> None: ...
    
    def setSelectedForegroundColor(self, j: java.awt.Color) -> None: ...
    
    def setShadowPaint(self, j: java.awt.Paint) -> None: ...
    
    def uninstallDefaults(self, j: javax.swing.AbstractButton) -> None: ...
    
    def update(self, j: java.awt.Graphics, j2: javax.swing.JComponent) -> None: ...
    
    
    class FlatButtonType:
        BOTH = 'BOTH'
        LEFT = 'LEFT'
        MIDDLE = 'MIDDLE'
        RIGHT = 'RIGHT'
        
        def __init__(self) -> None: ...
        
        @staticmethod
        def valueOf(s: str) -> str: ...
        
        @staticmethod
        def values() -> typing.List[str]: ...
        
        
    
class GenericDialog(OKButtonListener, javax.swing.JDialog):
    pass
    
class GenericDropTargetListener(java.awt.dnd.DropTargetListener):
    INVALID_FILE = ''
    
    def __init__(self, t: 'T') -> None: ...
    
    def dragEnter(self, j: java.awt.dnd.DropTargetDragEvent) -> None: ...
    
    def dragExit(self, j: java.awt.dnd.DropTargetEvent) -> None: ...
    
    def dragOver(self, j: java.awt.dnd.DropTargetDragEvent) -> None: ...
    
    def drop(self, j: java.awt.dnd.DropTargetDropEvent) -> None: ...
    
    def dropActionChanged(self, j: java.awt.dnd.DropTargetDragEvent) -> None: ...
    
    def getDropTarget(self) -> java.awt.dnd.DropTarget: ...
    
    def getTransferHandler(self) -> javax.swing.TransferHandler: ...
    
    
class GradientPanel(javax.swing.JPanel):
    pass
    
class GraphReportGenerator:
    GRFNAME_ACCBALANCE = u'com.moneydance.apps.md.view.gui.graphtool.AccountBalanceGraph'
    GRFNAME_ASSETALLOCATE = u'com.moneydance.apps.md.view.gui.graphtool.AssetAllocationGraph'
    GRFNAME_CURRENCY = u'com.moneydance.apps.md.view.gui.graphtool.CurrencyGraph'
    GRFNAME_EXPENSES = u'com.moneydance.apps.md.view.gui.graphtool.ExpensesGraph'
    GRFNAME_INCOME = u'com.moneydance.apps.md.view.gui.graphtool.IncomeGraph'
    GRFNAME_INCOME_EXPENSE = u'com.moneydance.apps.md.view.gui.graphtool.IncomeExpenseGraph'
    GRFNAME_MEMORIZED = u'com.moneydance.apps.md.view.gui.graphtool.MemorizedGraph'
    GRFNAME_NETWORTH = u'com.moneydance.apps.md.view.gui.graphtool.NetWorthGraph'
    PARAM_ACCOUNT = u'account'
    PARAM_ACCTS = u'accounts'
    PARAM_ALL_ACCOUNTS = u'all_accounts'
    PARAM_ALL_CATEGORIES = u'all_categories'
    PARAM_AMOUNT = u'amount'
    PARAM_AS_OF = u'as_of'
    PARAM_BALANCE_TYPE = u'balance'
    PARAM_BUDGET_KEY = u'budget_key'
    PARAM_BY_INV_ACCT = u'inv_acct'
    PARAM_BY_SECURITY = u'security'
    PARAM_CATEGORIES = u'categories'
    PARAM_CHECKNUM = u'cknum'
    PARAM_CLEARED = u'cleared'
    PARAM_COL_WIDTHS = u'colWidths'
    PARAM_COMBINE_TYPE = u'combine'
    PARAM_CUMULATIVE = u'cumulative'
    PARAM_CURRENCY = u'currency'
    PARAM_CURRENCY_FROM = u'fm_curr_id'
    PARAM_CURRENCY_TO = u'to_curr_id'
    PARAM_DATE = u'date'
    PARAM_DESC = u'desc'
    PARAM_DESC_MEMO_SAME_LINE = u'desc_memo_same_line'
    PARAM_FILTER_LEGACY_TAGS = u'tags'
    PARAM_FILTER_TAGLOGIC = u'taglogic'
    PARAM_FILTER_TAGS = u'tags2'
    PARAM_FULL_ACCT_PATH = u'fullpath'
    PARAM_GROUP_BY = u'group_by'
    PARAM_INCLUDE_SECURITIES = u'include_securities'
    PARAM_INCLUDE_SUBACCOUNTS = u'include_subaccounts'
    PARAM_INCLUDE_ZERO_BAL_ACCTS = u'inc_zero_balances'
    PARAM_INC_LIABILITIES = u'include_liabilities'
    PARAM_MEMO = u'memo'
    PARAM_ORIENTATION = u'landscape'
    PARAM_RELATIVE_TO = u'relative_to'
    PARAM_SELECTED_ACCOUNTS = u'selected_accounts'
    PARAM_SHOW_3D = u'show_3d'
    PARAM_SHOW_EXTRAINFO = u'show_extra'
    PARAM_SHOW_LEGEND = u'show_legend'
    PARAM_SHOW_MEMOS = u'show_memos'
    PARAM_SHOW_SPLITS = u'show_splits'
    PARAM_SHOW_TOP = u'show_top'
    PARAM_SHOW_TRANSFERS = u'show_xfers'
    PARAM_SHOW_UNREALIZED = u'show_unrealized'
    PARAM_SHOW_ZEROES = u'show_zeroes'
    PARAM_SOURCE_ACCOUNTS = u'source_accts'
    PARAM_STACKED = u'stacked'
    PARAM_SUBTOTAL_CATEGORIES = u'subtotal_categories'
    PARAM_TAX_DATE = u'useTaxDate'
    PARAM_TAX_RELATED = u'tax_related'
    PARAM_TWO_LINES = u'twolines'
    PARAM_USE_TAX_DATE = u'use_tax_date'
    REPNAME_ACCBALANCE = u'com.moneydance.apps.md.view.gui.reporttool.AccountBalanceReport'
    REPNAME_ASSETALLOCATE = u'com.moneydance.apps.md.view.gui.reporttool.AssetAllocationReport'
    REPNAME_BUDGET = u'com.moneydance.apps.md.view.gui.reporttool.BudgetReport'
    REPNAME_CAPGAINS = u'com.moneydance.apps.md.view.gui.reporttool.CapitalGainsReport'
    REPNAME_CASHFLOW = u'com.moneydance.apps.md.view.gui.reporttool.RealCashFlowReport'
    REPNAME_COSTBASIS = u'com.moneydance.apps.md.view.gui.reporttool.CostBasisReport'
    REPNAME_DETAILEDCASHFLOW = u'com.moneydance.apps.md.view.gui.reporttool.RealDetailedCashFlowReport'
    REPNAME_DETAILEDINCEXP = u'com.moneydance.apps.md.view.gui.reporttool.DetailedCashFlowReport'
    REPNAME_DETAILEDXFER = u'com.moneydance.apps.md.view.gui.reporttool.DetailedTransferReport'
    REPNAME_INCEXP = u'com.moneydance.apps.md.view.gui.reporttool.CashFlowReport'
    REPNAME_INVESTPERF = u'com.moneydance.apps.md.view.gui.reporttool.InvestmentPerformanceReport'
    REPNAME_INVSEARCH = u'com.moneydance.apps.md.view.gui.reporttool.InvestTxnReport'
    REPNAME_MEMORIZED = u'com.moneydance.apps.md.view.gui.reporttool.MemorizedReport'
    REPNAME_MISSCHECKS = u'com.moneydance.apps.md.view.gui.reporttool.MissingChecksReport'
    REPNAME_NETWORTH = u'com.moneydance.apps.md.view.gui.reporttool.NetWorthReport'
    REPNAME_PORTFOLIO = u'com.moneydance.apps.md.view.gui.reporttool.PortfolioReport'
    REPNAME_RECONCILIATION = u'com.moneydance.apps.md.view.gui.reporttool.ReconciliationReport'
    REPNAME_SEARCH = u'com.moneydance.apps.md.view.gui.reporttool.SearchReport'
    REPNAME_TAGTOTAL = u'com.moneydance.apps.md.view.gui.reporttool.TagTotalReport'
    REPNAME_TXN = u'com.moneydance.apps.md.view.gui.reporttool.TxnReport'
    REPNAME_VAT = u'com.moneydance.apps.md.view.gui.reporttool.VATReport'
    REPNAME_XFER = u'com.moneydance.apps.md.view.gui.reporttool.TransferReport'
    
    def __init__(self) -> None: ...
    
    @staticmethod
    def findOrMakeReportInfo(c: com.infinitekind.moneydance.model.AccountBook, s: str, s2: str, b: bool) -> com.infinitekind.moneydance.model.ReportSpec: ...
    
    def generate(self) -> object: ...
    
    def getClassName(self) -> str: ...
    
    def getConfigPanel(self) -> javax.swing.JPanel: ...
    
    @staticmethod
    def getGenerator(c: com.infinitekind.moneydance.model.ReportSpec, moneydanceGUI: 'MoneydanceGUI') -> 'GraphReportGenerator': ...
    
    def getInfo(self) -> com.infinitekind.moneydance.model.ReportSpec: ...
    
    def getName(self) -> str: ...
    
    def goneAway(self) -> None: ...
    
    def isGraph(self) -> bool: ...
    
    @staticmethod
    def reportInfoFromURI(c: com.infinitekind.moneydance.model.AccountBook, s: str) -> com.infinitekind.moneydance.model.ReportSpec: ...
    
    def setGUI(self, moneydanceGUI: 'MoneydanceGUI') -> None: ...
    
    def setInfo(self, c: com.infinitekind.moneydance.model.ReportSpec) -> None: ...
    
    def setParameters(self, c: com.infinitekind.tiksync.SyncRecord) -> None: ...
    
    def setSuppressMessageDialogs(self, b: bool) -> None: ...
    
    @staticmethod
    def showReport(c: com.infinitekind.moneydance.model.ReportSpec, moneydanceGUI: 'MoneydanceGUI') -> None: ...
    
    def toString(self) -> str: ...
    
    
class GraphReportWindow(SecondaryDialog, 'java.awt.event.ActionListener', com.infinitekind.moneydance.model.AccountListener):
    pass
    
class HeavyLotIDPanel(SecondaryDialog, OKButtonListener, javax.swing.event.ListSelectionListener):
    pass
    
class HomePageBorder(javax.swing.border.Border):
    def __init__(self) -> None: ...
    
    def getBorderInsets(self, j: java.awt.Component) -> java.awt.Insets: ...
    
    def getFillColor(self) -> java.awt.Color: ...
    
    def getLineColor(self) -> java.awt.Color: ...
    
    def getSectionBackground(self) -> java.awt.Color: ...
    
    def isBorderOpaque(self) -> bool: ...
    
    def paintBorder(self, j: java.awt.Component, j2: java.awt.Graphics, i: int, i2: int, i3: int, i4: int) -> None: ...
    
    def setBorderInsets(self, j: java.awt.Insets) -> None: ...
    
    def setFillColor(self, j: java.awt.Color) -> None: ...
    
    def setLineColor(self, j: java.awt.Color) -> None: ...
    
    def setSectionBackground(self, j: java.awt.Color) -> None: ...
    
    def updateUI(self) -> None: ...
    
    
class HomeViewSettings(javax.swing.JPanel, 'java.awt.event.ActionListener'):
    pass
    
class ImportCurrHistoryWindow(SecondaryDialog, OKButtonListener):
    pass
    
class ImportFileTransferHandler(javax.swing.TransferHandler):
    COPY = 1
    COPY_OR_MOVE = 3
    LINK = 1073741824
    MOVE = 2
    NONE = 0
    
    def __init__(self, moneydanceGUI: 'MoneydanceGUI') -> None: ...
    
    def getSourceActions(self, j: javax.swing.JComponent) -> int: ...
    
    
class ImportOFCWindow(SecondaryDialog, OKButtonListener, 'java.awt.event.ActionListener'):
    pass
    
class ImportOFXWindow(SecondaryDialog, OKButtonListener, 'java.awt.event.ActionListener'):
    pass
    
class ImportTask:
    def __init__(self, moneydanceGUI: 'MoneydanceGUI', c: com.moneydance.apps.md.controller.fileimport.FileImporter, j: java.io.InputStream) -> None: ...
    
    def start(self) -> None: ...
    
    
class IntegerGraphLabeler(com.moneydance.awt.graph.ValueLabeler):
    def __init__(self) -> None: ...
    
    def getLabelForValue(self, f: float, i: int) -> str: ...
    
    
class IntervalChooser(javax.swing.JComboBox):
    pass
    
class InvestAccountDetailPanel(AccountDetailPanel, 'java.awt.event.ActionListener', com.infinitekind.moneydance.model.AccountListener):
    pass
    
class InvestTxnEditInterface:
    def __init__(self) -> None: ...
    
    def beginEditing(self, c: com.infinitekind.moneydance.model.AbstractTxn) -> None: ...
    
    def commitEdits(self) -> None: ...
    
    def getEdits(self) -> com.moneydance.util.StreamTable: ...
    
    def getOnlineMode(self) -> bool: ...
    
    def getPanel(self) -> javax.swing.JComponent: ...
    
    def goingAway(self) -> bool: ...
    
    def goneAway(self) -> None: ...
    
    def inputCheck(self) -> bool: ...
    
    def setBackground(self, j: java.awt.Color) -> None: ...
    
    def setEdits(self, c: com.moneydance.util.StreamTable) -> None: ...
    
    def setOnlineMode(self, b: bool) -> None: ...
    
    def setSecurity(self, c: com.infinitekind.moneydance.model.Account) -> None: ...
    
    
class InvestBankTxnEditor(InvestTxnEditInterface, javax.swing.JPanel):
    pass
    
class InvestTxnEditor(InvestTxnEditInterface, javax.swing.JPanel, com.moneydance.apps.md.controller.PreferencesListener):
    pass
    
class InvestBuySellEditor(InvestTxnEditor, 'java.awt.event.ItemListener', javax.swing.event.DocumentListener):
    pass
    
class InvestDividendEditor(InvestTxnEditor, 'java.awt.event.ItemListener', 'java.awt.event.FocusListener', javax.swing.event.DocumentListener):
    pass
    
class InvestDividendXfrEditor(InvestTxnEditor, 'java.awt.event.ItemListener'):
    pass
    
class InvestMiscTxnEditor(InvestTxnEditor, 'java.awt.event.ItemListener'):
    pass
    
class InvestRegister(AccountDetailPanel):
    pass
    
class InvestShortCoverEditor(InvestTxnEditor, 'java.awt.event.ItemListener'):
    pass
    
class InvestTransactionEditor(javax.swing.JPanel, 'java.awt.event.ActionListener'):
    pass
    
class InvestTxnRenderer(AbstractTxnRenderer):
    pass
    
class InvestTxnUtil:
    def __init__(self) -> None: ...
    
    @staticmethod
    def getTxnEditor(moneydanceGUI: 'MoneydanceGUI', c: com.infinitekind.moneydance.model.Account, c2: com.infinitekind.moneydance.model.InvestTxnType, investTxnEditInterface: InvestTxnEditInterface) -> InvestTxnEditInterface: ...
    
    
class InvestTxnWindow(SecondaryDialog):
    pass
    
class InvestXfrEditor(InvestTxnEditor, 'java.awt.event.ItemListener', javax.swing.event.DocumentListener):
    pass
    
class InvestmentAccountInfoPanel(AccountInfoPanel, 'java.awt.event.ItemListener'):
    pass
    
class InvstRecTxnRenderer(AbstractTxnRenderer):
    pass
    
class JSmartPanel(javax.swing.JPanel, 'java.awt.event.ActionListener'):
    pass
    
class LastPrintedCheckWindow(OKButtonListener, javax.swing.JDialog):
    pass
    
class LiabilityAccountInfoPanel(AccountInfoPanel):
    pass
    
class LicenseAgreementWindow(javax.swing.JDialog, 'java.awt.event.ActionListener'):
    pass
    
class LicenseKeyWindow(SecondaryDialog, OKButtonListener):
    pass
    
class LicenseWindow(SecondaryDialog, OKButtonListener):
    pass
    
class LightLotIDPanel(SecondaryDialog, 'java.awt.event.ActionListener'):
    pass
    
class LoanAccountDetailPanel(AccountDetailPanel, com.infinitekind.moneydance.model.AccountListener, 'java.awt.event.ActionListener'):
    pass
    
class LoanAccountInfoPanel(AccountInfoPanel, javax.swing.event.ChangeListener, 'java.awt.event.ItemListener', 'java.awt.event.FocusListener', 'java.awt.event.ActionListener'):
    pass
    
class LoanCalculator(javax.swing.JPanel, 'java.awt.event.ActionListener', 'java.awt.event.FocusListener'):
    pass
    
class LoanReminderTxnEditPanel(AutoCompletable, javax.swing.JPanel, 'java.awt.event.FocusListener', 'java.awt.event.ItemListener', 'java.awt.event.KeyListener', java.lang.Runnable):
    pass
    
class LoanToolsWin(SecondaryFrame):
    pass
    
class LoanTxnReminderInfoWindow(SecondaryDialog, OKButtonListener):
    pass
    
class LoanTxnReminderNotificationWindow(SecondaryDialog, 'java.awt.event.ActionListener'):
    pass
    
class LoanTxnRenderer(AbstractTxnRenderer):
    pass
    
class LotChooser(javax.swing.JPanel, 'java.awt.event.FocusListener'):
    pass
    
class MDAccountProxy(com.infinitekind.moneydance.model.OnlineAccountProxy):
    def __init__(self, c: com.infinitekind.moneydance.model.Account) -> None: ...
    
    def getAccount(self) -> com.infinitekind.moneydance.model.Account: ...
    
    def getAccountInfo(self) -> com.infinitekind.moneydance.model.OnlineAccountInfo: ...
    
    def getAccountKey(self) -> str: ...
    
    def getAccountMsgType(self) -> int: ...
    
    def getCurrency(self) -> com.infinitekind.moneydance.model.CurrencyType: ...
    
    def getDownloadStartDate(self, s: str) -> java.util.Date: ...
    
    def getDownloadedTxns(self) -> com.infinitekind.moneydance.model.OnlineTxnList: ...
    
    def getOFXAccountKey(self) -> str: ...
    
    def getOFXAccountNumber(self) -> str: ...
    
    def getOFXAccountType(self) -> str: ...
    
    def getOFXBranchID(self) -> str: ...
    
    def getOFXBrokerID(self) -> str: ...
    
    def getOFXRoutingNumber(self) -> str: ...
    
    def getPayees(self) -> com.infinitekind.moneydance.model.OnlinePayeeList: ...
    
    def getPayments(self) -> com.infinitekind.moneydance.model.OnlinePaymentList: ...
    
    def isCreditCard(self) -> bool: ...
    
    def isInvestment(self) -> bool: ...
    
    def setOFXLastTxnUpdate(self, i: int, s: str) -> None: ...
    
    def setOnlineAvailBalance(self, i: int, i2: int) -> None: ...
    
    def setOnlineLedgerBalance(self, i: int, i2: int) -> None: ...
    
    def toString(self) -> str: ...
    
    
class MDAction(javax.swing.AbstractAction):
    pass
    
class MDColors:
    TRANSPARENT = 'java.awt.Color[r=0,g=0,b=0]'
    accountIconTint: java.awt.Color
    budgetAcceptableColor: java.awt.Color
    budgetAlertColor: java.awt.Color
    budgetGraphWarning: java.awt.Color
    budgetHealthyColor: java.awt.Color
    budgetIconTint: java.awt.Color
    calEventBG: java.awt.Color
    calPastEventBG: java.awt.Color
    dashboardFG: java.awt.Color
    defaultBackground: java.awt.Color
    defaultTextForeground: java.awt.Color
    dimmedRegisterOverlay = 'java.awt.Color[r=255,g=255,b=255]'
    errorMessageForeground: java.awt.Color
    errorPanelBG: java.awt.Color
    errorPanelFG: java.awt.Color
    expenseIconTint: java.awt.Color
    filterBarBG: java.awt.Color
    filterBarBorderPaint: java.awt.Paint
    filterBarBtnBG: java.awt.Color
    filterBarFG: java.awt.Color
    filterBarSelBG: java.awt.Color
    filterBarSelFG: java.awt.Color
    filterBarShadow: java.awt.Color
    filterBarShadowPaint: java.awt.Paint
    futureTxn2BG: java.awt.Color
    futureTxnBG: java.awt.Color
    futureTxnIndicator: java.awt.Color
    graphBG1: java.awt.Color
    graphBG2: java.awt.Color
    graphBGGradient: java.awt.GradientPaint
    graphData1: java.awt.Color
    graphData10: java.awt.Color
    graphData11: java.awt.Color
    graphData12: java.awt.Color
    graphData13: java.awt.Color
    graphData14: java.awt.Color
    graphData15: java.awt.Color
    graphData16: java.awt.Color
    graphData17: java.awt.Color
    graphData18: java.awt.Color
    graphData19: java.awt.Color
    graphData2: java.awt.Color
    graphData20: java.awt.Color
    graphData21: java.awt.Color
    graphData22: java.awt.Color
    graphData23: java.awt.Color
    graphData3: java.awt.Color
    graphData4: java.awt.Color
    graphData5: java.awt.Color
    graphData6: java.awt.Color
    graphData7: java.awt.Color
    graphData8: java.awt.Color
    graphData9: java.awt.Color
    graphIconTint: java.awt.Color
    headerBG: java.awt.Color
    headerBG1: java.awt.Color
    headerBG2: java.awt.Color
    headerBGGradient: java.awt.GradientPaint
    headerBorder: java.awt.Color
    headerFG: java.awt.Color
    homeIconTint: java.awt.Color
    homePageAltBG: java.awt.Color
    homePageBG: java.awt.Color
    homePageFG: java.awt.Color
    homepageSectionBG: java.awt.Color
    hudBG: java.awt.Color
    hudBG1: java.awt.Color
    hudBG2: java.awt.Color
    hudBorderColor: java.awt.Color
    hudFG: java.awt.Color
    incomeIconTint: java.awt.Color
    listBackground: java.awt.Color
    listSelectionBG: java.awt.Color
    mainDivider: java.awt.Color
    mainPanelBorderColor: java.awt.Color
    negativeBalFG: java.awt.Color
    popoverBG: java.awt.Color
    popoverBorder: java.awt.Color
    popoverTriangleBG: java.awt.Color
    positiveBalFG: java.awt.Color
    registerBG1: java.awt.Color
    registerBG2: java.awt.Color
    registerGrid: java.awt.Color
    registerSelectedBG: java.awt.Color
    registerSelectedFG: java.awt.Color
    registerTextFG: java.awt.Color
    registerUnconfirmedIconFG: java.awt.Color
    registerUnfocusedSelectedBG: java.awt.Color
    reminderHomeInnerLine: java.awt.Color
    remindersIconTint: java.awt.Color
    reportBlueFG: java.awt.Color
    reportIconTint: java.awt.Color
    reportRedFG: java.awt.Color
    scrollThumb: java.awt.Color
    secondaryTextFG: java.awt.Color
    selectedRowGradient1: java.awt.Color
    selectedRowGradient2: java.awt.Color
    selectedRowUFGradient1: java.awt.Color
    selectedRowUFGradient2: java.awt.Color
    sidebarBackground: java.awt.Color
    sidebarHeader: java.awt.Color
    sidebarNegativeBalanceFG: java.awt.Color
    sidebarPositiveBalanceFG: java.awt.Color
    sidebarSecondaryTextFG: java.awt.Color
    sidebarSelectedBG: java.awt.Color
    sidebarSelectedFG: java.awt.Color
    sidebarUFSelectedBG: java.awt.Color
    tableHeaderBG: java.awt.Color
    tertiaryTextFG: java.awt.Color
    
    def __init__(self) -> None: ...
    
    def colorsWereUpdated(self) -> None: ...
    
    def decorateFrame(self, j: javax.swing.JFrame) -> None: ...
    
    def decorateTopLevelPanel(self, j: javax.swing.JPanel) -> None: ...
    
    @staticmethod
    def getDefaultColorMap() -> typing.Dict[str,java.awt.Color]: ...
    
    @staticmethod
    def getPrintableColors() -> 'MDColors': ...
    
    @staticmethod
    def getSingleton() -> 'MDColors': ...
    
    def isDarkTheme(self) -> bool: ...
    
    def loadDefaultColors(self) -> None: ...
    
    @staticmethod
    def main(t: typing.List[str]) -> None: ...
    
    
class MDFieldPanel(javax.swing.JPanel):
    pass
    
class MDFileDialog(java.awt.FileDialog):
    pass
    
class MDFonts:
    calendarTitle: java.awt.Font
    code: java.awt.Font
    codeDefault: java.awt.Font
    defaultMetrics: java.awt.FontMetrics
    defaultSystemFont: java.awt.Font
    defaultSystemMetrics: java.awt.font.LineMetrics
    defaultText: java.awt.Font
    defaultTextDefault: java.awt.Font
    detailTitle: java.awt.Font
    detailTitleMetrics: java.awt.FontMetrics
    header: java.awt.Font
    headerMetrics: java.awt.FontMetrics
    mini: java.awt.Font
    mono: java.awt.Font
    monoDefault: java.awt.Font
    monoMetrics: java.awt.FontMetrics
    print: java.awt.Font
    printDefault: java.awt.Font
    register: java.awt.Font
    registerMetrics: java.awt.FontMetrics
    reportHeader: java.awt.Font
    reportTitle: java.awt.Font
    reportTitleMetrics: java.awt.FontMetrics
    
    def __init__(self) -> None: ...
    
    @staticmethod
    def getSingleton() -> 'MDFonts': ...
    
    def updateFonts(self, b: bool) -> None: ...
    
    def updateMetricsIfNecessary(self, j: java.awt.Graphics) -> None: ...
    
    
class MDHeaderRenderer(javax.swing.table.DefaultTableCellRenderer):
    pass
    
class MDImages:
    ACCT_ASSET_ICON = u'/com/moneydance/apps/md/view/gui/glyphs/glyph_assets.png'
    ACCT_BANK_ICON = u'/com/moneydance/apps/md/view/gui/glyphs/glyph_bank.png'
    ACCT_BANK_OL_ICON = u'/com/moneydance/apps/md/view/gui/images/md_tree_account_ol_icon.gif'
    ACCT_CC_ICON = u'/com/moneydance/apps/md/view/gui/glyphs/glyph_cc.png'
    ACCT_DEFAULT_ICON = u'/com/moneydance/apps/md/view/gui/images/md_tree_uneditable_account_icon.gif'
    ACCT_DEFAULT_ICON_GRAY = u'/com/moneydance/apps/md/view/gui/images/md_tree_uneditable_account_icon_gray.gif'
    ACCT_EXPENSE_ICON = u'/com/moneydance/apps/md/view/gui/glyphs/glyph_expense.png'
    ACCT_INCOME_ICON = u'/com/moneydance/apps/md/view/gui/glyphs/glyph_income.png'
    ACCT_INVEST_ICON = u'/com/moneydance/apps/md/view/gui/glyphs/glyph_invest.png'
    ACCT_LIABILITY_ICON = u'/com/moneydance/apps/md/view/gui/glyphs/glyph_liability.png'
    ACCT_LOAN_ICON = u'/com/moneydance/apps/md/view/gui/glyphs/glyph_loan.png'
    ACCT_RECONCILING_ICON = u'/com/moneydance/apps/md/view/gui/images/md_txn_reconciling_icon.gif'
    ACCT_STAT_NEW = u'/com/moneydance/apps/md/view/gui/glyphs/acct_status_unconfirmed.png'
    ACCT_STOCK_ICON = u'/com/moneydance/apps/md/view/gui/glyphs/glyph_invest.png'
    ACTIONS = u'/com/moneydance/apps/md/view/gui/icons/actions.png'
    ACTIONS_SMALL = u'/com/moneydance/apps/md/view/gui/icons/actions_sm.png'
    ALERT_ICON = u'/com/moneydance/apps/md/view/gui/icons/alert16.png'
    APP_ICON_128 = u'/com/moneydance/apps/md/view/gui/glyphs/appicon_128.png'
    APP_ICON_512 = u'/com/moneydance/apps/md/view/gui/glyphs/appicon_512.png'
    APP_ICON_64 = u'/com/moneydance/apps/md/view/gui/glyphs/appicon_64.png'
    BACKGROUND_HEADER = u'/com/moneydance/apps/md/view/gui/images/bg_tiled.png'
    BLANK_ICON = u'/com/moneydance/apps/md/view/gui/images/blank_64.png'
    BLUE_DOT = u'/com/moneydance/apps/md/view/gui/icons/bluedot.png'
    BOTTOM_STATUS_BG = u'/com/moneydance/apps/md/view/gui/icons/bottom_status_bg.png'
    BOTTOM_STATUS_BG_MAC = u'/com/moneydance/apps/md/view/gui/icons/bottom_status_bg_grey.png'
    BOTTOM_TOOLBAR_BG = u'/com/moneydance/apps/md/view/gui/icons/bottom_toolbar_bg.png'
    BUDGET_ICON = u'/com/moneydance/apps/md/view/gui/glyphs/glyph_budget.png'
    CALCULATOR_ICON = u'/com/moneydance/apps/md/view/gui/icons/calculator_icon.png'
    CALENDAR_NEXT_ICON = u'/com/moneydance/apps/md/view/gui/glyphs/big_arrow_right.png'
    CALENDAR_PREV_ICON = u'/com/moneydance/apps/md/view/gui/glyphs/big_arrow_left.png'
    CLOSE_ICON = u'/com/moneydance/apps/md/view/gui/glyphs/glyph_close.png'
    CLOSE_ICON_HIGHLIGHT_SMALL = u'/com/moneydance/apps/md/view/gui/icons/close_toolbar_hl_14.png'
    CLOSE_ICON_SMALL = u'/com/moneydance/apps/md/view/gui/icons/close_toolbar_14.png'
    CONTEXT_MENU_ICON = u'/com/moneydance/apps/md/view/gui/glyphs/context_menu_icon.png'
    DARK_STONE_BACKGROUND = u'/com/moneydance/apps/md/view/gui/images/stone_background.png'
    DELETE_ICON = u'/com/moneydance/apps/md/view/gui/glyphs/glyph_delete.png'
    DELETE_ICON_PRESSED = u'/com/moneydance/apps/md/view/gui/glyphs/glyph_delete.png'
    DIALOG = u'/com/moneydance/apps/md/view/gui/glyphs/appicon_64.png'
    DOWN_TRIANGLE = u'/com/moneydance/apps/md/view/gui/glyphs/glyph_triangle_down.png'
    DROPBOX_ICON = u'/com/moneydance/apps/md/view/gui/images/dropbox_64.png'
    FILTER_BAR_BG = u'/com/moneydance/apps/md/view/gui/images/FilterBarBG.png'
    FOLDER_ICON = u'/com/moneydance/apps/md/view/gui/images/folder_64.png'
    GENERIC_FILE_ICON = u'/com/moneydance/apps/md/view/gui/icons/generic_file_icon.png'
    GREEN_DOT = u'/com/moneydance/apps/md/view/gui/icons/greendot.png'
    GRIP_HORIZONTAL = u'/com/moneydance/apps/md/view/gui/glyphs/glyph_grip_horizontal.png'
    GRIP_VERTICAL = u'/com/moneydance/apps/md/view/gui/glyphs/glyph_grip_vertical.png'
    HOME_ICON = u'/com/moneydance/apps/md/view/gui/glyphs/glyph_summary.png'
    LCD_BACKGROUND = u'/com/moneydance/apps/md/view/gui/images/lcd_background.png'
    LEFT_TRIANGLE = u'/com/moneydance/apps/md/view/gui/glyphs/glyph_triangle_left.png'
    LIGHT_STONE_BACKGROUND = u'/com/moneydance/apps/md/view/gui/images/light_stone_background.png'
    LINK_ARROW = u'/com/moneydance/apps/md/view/gui/icons/link_arrow.png'
    MINUS = u'/com/moneydance/apps/md/view/gui/glyphs/glyph_minus.png'
    NOISE_OVERLAY = u'/com/moneydance/apps/md/view/gui/images/noise_overlay.png'
    NO_DOT = u'/com/moneydance/apps/md/view/gui/icons/nodot.png'
    OUTER_SHADOW = u'/com/moneydance/apps/md/view/gui/images/outershadow.png'
    PLUS = u'/com/moneydance/apps/md/view/gui/glyphs/glyph_plus.png'
    POPOVER_CLOSE_ICON = u'/com/moneydance/awt/images/close.png'
    POPOVER_NEXT_ICON = u'/com/moneydance/awt/images/right_arrow.png'
    POPOVER_PREVIOUS_ICON = u'/com/moneydance/awt/images/left_arrow.png'
    POPOVER_TITLE_BG = u'/com/moneydance/apps/md/view/gui/images/popover_title_bg.png'
    PYTHON_BUTTON = u'/com/moneydance/apps/md/view/gui/glyphs/browser_python.png'
    RECESSED_AREA_BACKGROUND = u'/com/moneydance/apps/md/view/gui/images/recessed_bg.png'
    RED_DOT = u'/com/moneydance/apps/md/view/gui/icons/reddot.png'
    REFRESH = u'/com/moneydance/apps/md/view/gui/glyphs/glyph_refresh.png'
    REMINDERS_ICON = u'/com/moneydance/apps/md/view/gui/glyphs/glyph_reminders.png'
    RIGHT_TRIANGLE = u'/com/moneydance/apps/md/view/gui/glyphs/glyph_triangle_right.png'
    SB_GRAPH = u'/com/moneydance/apps/md/view/gui/glyphs/glyph_graphs.png'
    SB_REPORT = u'/com/moneydance/apps/md/view/gui/glyphs/glyph_reports.png'
    SEARCH_SMALL = u'/com/moneydance/apps/md/view/gui/glyphs/glyph_search.png'
    SELECTOR = u'/com/moneydance/apps/md/view/gui/glyphs/selector.png'
    SELECTOR_SMALL = u'/com/moneydance/apps/md/view/gui/glyphs/selector_sm.png'
    SMALL_MINUS = u'/com/moneydance/apps/md/view/gui/glyphs/glyph_small_minus.png'
    SMALL_PLUS = u'/com/moneydance/apps/md/view/gui/glyphs/glyph_small_plus.png'
    SPLIT_REGISER_ICON_BRIGHT = u'/com/moneydance/apps/md/view/gui/icons/reg_split_bright.png'
    SPLIT_REGISER_ICON_DARK = u'/com/moneydance/apps/md/view/gui/icons/reg_split.png'
    TAG_SELECTED = u'/com/moneydance/apps/md/view/gui/glyphs/glyph_selected.png'
    TAG_UNSELECTED = u'/com/moneydance/apps/md/view/gui/glyphs/glyph_unselected.png'
    TICK_MARK = u'/com/moneydance/apps/md/view/gui/glyphs/glyph_tick.png'
    TREE_COLLAPSED_ICON = u'/com/moneydance/apps/md/view/gui/glyphs/glyph_tree_collapsed.png'
    TREE_EXPANDED_ICON = u'/com/moneydance/apps/md/view/gui/glyphs/glyph_tree_expanded.png'
    TXN_STAT_ADDRESS = u'/com/moneydance/apps/md/view/gui/glyphs/txn_status_hasaddress.png'
    TXN_STAT_ATTACHMENT = u'/com/moneydance/apps/md/view/gui/glyphs/glyph_attachment.png'
    TXN_STAT_CLEARED = u'/com/moneydance/apps/md/view/gui/glyphs/txn_status_cleared.png'
    TXN_STAT_NEW = u'/com/moneydance/apps/md/view/gui/glyphs/txn_status_unconfirmed.png'
    TXN_STAT_ONLINE = u'/com/moneydance/apps/md/view/gui/glyphs/txn_status_downloaded.png'
    TXN_STAT_RECONCILING = u'/com/moneydance/apps/md/view/gui/glyphs/txn_status_reconciling.png'
    TXN_STAT_SPLIT = u'/com/moneydance/apps/md/view/gui/glyphs/glyph_split.png'
    TXN_STAT_UNCLEARED = u'/com/moneydance/apps/md/view/gui/glyphs/txn_status_uncleared.png'
    UNSPLIT_REGISER_ICON_BRIGHT = u'/com/moneydance/apps/md/view/gui/icons/reg_combined_bright.png'
    UNSPLIT_REGISER_ICON_DARK = u'/com/moneydance/apps/md/view/gui/icons/reg_combined.png'
    UP_TRIANGLE = u'/com/moneydance/apps/md/view/gui/glyphs/glyph_triangle_up.png'
    VIEW_SOURCE = u'/com/moneydance/apps/md/view/gui/glyphs/browser_source_html.png'
    VISIBILITY_ICON = u'/com/moneydance/apps/md/view/gui/icons/visibility_toggle.png'
    WHITE_DOT = u'/com/moneydance/apps/md/view/gui/icons/whitedot.png'
    YELLOW_DOT = u'/com/moneydance/apps/md/view/gui/icons/yellowdot.png'
    
    def __init__(self) -> None: ...
    
    @staticmethod
    def get2xImagePath(s: str) -> str: ...
    
    def getIcon(self, s: str) -> javax.swing.Icon: ...
    
    def getIconForAccount(self, c: com.infinitekind.moneydance.model.Account) -> javax.swing.Icon: ...
    
    def getIconForAccountType(self, s: str) -> javax.swing.Icon: ...
    
    @staticmethod
    def getIconPathForAccountType(s: str) -> str: ...
    
    def getIconTintForAccountType(self, s: str) -> java.awt.Color: ...
    
    def getIconWithColor(self, s: str, j: java.awt.Color) -> javax.swing.Icon: ...
    
    @staticmethod
    def getImage(s: str) -> java.awt.Image: ...
    
    @staticmethod
    def getMDIcon(s: str) -> javax.swing.Icon: ...
    
    @staticmethod
    def getMDIconWithColor(s: str, j: java.awt.Color) -> javax.swing.Icon: ...
    
    def getPreviewForFile(self, j: java.io.File, j2: java.awt.Dimension) -> java.awt.Image: ...
    
    @staticmethod
    def getSingletonImages() -> 'MDImages': ...
    
    def getStatusImage(self, s: str) -> java.awt.Image: ...
    
    @staticmethod
    def scaledMultiresImage(t: typing.List[int], i: int, i2: int) -> java.awt.Image: ...
    
    @staticmethod
    def toBufferedImage(j: java.awt.Image) -> java.awt.image.BufferedImage: ...
    
    
class MDLabel(javax.swing.JComponent):
    pass
    
class MDPlusController:
    def __init__(self) -> None: ...
    
    def addOneOffTask(self, s: str, b: bool) -> None: ...
    
    def addStatusListener(self, s: str) -> None: ...
    
    def addTask(self, s: str, b: bool, b2: bool, i: int, i2: int, b3: bool, i3: int, b4: bool) -> None: ...
    
    def getItemLinkStatus(self, s: str) -> str: ...
    
    def getSignupStatus(self) -> str: ...
    
    def refreshAccountsList(self, j: java.lang.Runnable) -> None: ...
    
    def removeStatusListener(self, s: str) -> None: ...
    
    def removeTask(self, s: str) -> None: ...
    
    def setItemLinkStatus(self, s: str, s2: str) -> bool: ...
    
    
    class ItemLinkStatus:
        needsLinking = 'needsLinking'
        ok = 'ok'
        unknown = 'unknown'
        
        def __init__(self) -> None: ...
        
        @staticmethod
        def valueOf(s: str) -> str: ...
        
        @staticmethod
        def values() -> typing.List[str]: ...
        
        
    class StatusListener:
        def __init__(self) -> None: ...
        
        def licenseStatusUpdated(self, s: str, s2: str) -> None: ...
        
        
    class TaskRunner:
        def __init__(self) -> None: ...
        
        def runTask(self, s: str, s2: str) -> None: ...
        
        
    
class MDPlusController(object):
    class StatusListener:
        def __init__(self) -> None: ...
        
        def licenseStatusUpdated(self, s: str, s2: str) -> None: ...
        
        
class MDPlusSettingsWindow(SecondaryFrame, MDPlusController.StatusListener):
    pass
    
class MDSounds:
    CASH_REGISTER = u'cash_register.wav'
    
    def __init__(self) -> None: ...
    
    def playSound(self, s: str) -> bool: ...
    
    
class MDStrings:
    BUDGETS: str
    CATEGORIES: str
    EXPENSE_CAT: str
    GRAPHS: str
    INCOME_CAT: str
    LLIDP: str
    LT_cap_gains: str
    MT_cap_gains: str
    REPGRAPHS: str
    REPORTS: str
    ST_cap_gains: str
    TRANSFERS_IN: str
    TRANSFERS_OUT: str
    _continue: str
    _default: str
    _import: str
    _new: str
    a_s: str
    a_s_every: str
    a_s_question: str
    about_html: str
    about_moneydance: str
    about_trans: str
    accept_all_txns: str
    accept_oltxn_label: str
    accept_oltxns_label: str
    accept_txn: str
    account: str
    account_book_already_exists: str
    account_book_name: str
    account_description: str
    account_details: str
    account_info_title: str
    account_is_inactive: str
    account_map_desc: str
    account_name: str
    account_number: str
    account_sets: str
    account_specific_settings: str
    account_type: str
    account_type_Investment: str
    account_type_bank: str
    account_type_expense: str
    account_type_income: str
    account_url: str
    accountfilter_all: str
    accounts: str
    accountselect_accountnotfound: str
    acct_book_delete_confirmation: str
    acct_book_delete_failed: str
    acct_list: str
    acct_num_with_payee: str
    acct_type0: str
    acct_type0S: str
    acct_type0s: str
    acct_type1000: str
    acct_type10000: str
    acct_type10000S: str
    acct_type10000s: str
    acct_type1000S: str
    acct_type1000s: str
    acct_type2000: str
    acct_type2000S: str
    acct_type2000s: str
    acct_type3000: str
    acct_type3000S: str
    acct_type3000s: str
    acct_type4000: str
    acct_type4000S: str
    acct_type4000s: str
    acct_type4300: str
    acct_type4300S: str
    acct_type4300s: str
    acct_type4600: str
    acct_type4600S: str
    acct_type4600s: str
    acct_type5000: str
    acct_type5000S: str
    acct_type5000s: str
    acct_type6000: str
    acct_type6000S: str
    acct_type6000s: str
    acct_type7000: str
    acct_type7000S: str
    acct_type7000s: str
    acct_types_to_include: str
    acct_value: str
    action_menu: str
    add: str
    add___: str
    add_attachment: str
    add_ext_desc: str
    add_from_file___: str
    add_module: str
    add_payee: str
    add_payee_header: str
    add_payee_title: str
    add_payment: str
    add_sidebar_dlg_title: str
    add_to: str
    additional_olb_info: str
    addr_sel_tooltip: str
    address: str
    address1: str
    address2: str
    adjust_local_amount: str
    adjust_other_amount: str
    adjust_vat: str
    advanced_search: str
    aes128_crypto_option: str
    agree: str
    allOutOfDate: str
    all_accounts: str
    all_accts: str
    all_categories: str
    all_checks: str
    all_dates: str
    all_expenses: str
    all_fields: str
    all_securities: str
    allocated_too_many_shares: str
    already_changed_pin: str
    alternatives: str
    amex: str
    amount: str
    amt_borrowed: str
    any_acct: str
    any_category: str
    apply: str
    apply_dates: str
    apply_vat: str
    apr: str
    apr_rate: str
    apr_then: str
    apr_until: str
    april: str
    archive___: str
    archive_error: str
    archive_file: str
    archive_only_clrd: str
    archive_only_remove_cleared: str
    archive_txns: str
    archiving_data: str
    as_downloaded_txn: str
    as_downloaded_txn_description: str
    as_of: str
    ask_delete_cleared_txn: str
    ask_save_cleared_other: str
    ask_save_cleared_txn: str
    ask_save_cleared_xfer: str
    attachment_error: str
    attachments: str
    august: str
    authenticated_proxy: str
    autoRollUp_text: str
    auto_matchmerge_downloaded_txns: str
    auto_merge_txns: str
    autosave_option_auto: str
    autosave_option_onexit: str
    autosync_pref: str
    avail_items: str
    available_extensions: str
    avg_cost: str
    back: str
    backing_up: str
    backup_loc_in_root_err: str
    backup_loc_not_folder_err: str
    backup_loc_not_writable_err: str
    bad_addr: str
    bad_anwp: str
    bad_country: str
    bad_field_0: str
    bad_field_1: str
    bad_field_2: str
    bad_field_3: str
    bad_field_4: str
    bad_format_file: str
    bad_memo: str
    bad_name: str
    bad_password: str
    bad_payeeID: str
    bad_phone: str
    bad_state: str
    bad_zip: str
    balance: str
    balance_type: str
    bank_account: str
    bank_name: str
    base_currency: str
    batch_change: str
    batch_change_txns_msg: str
    batch_date_increment_days: str
    batch_date_increment_months: str
    batch_date_increment_years: str
    batch_date_set: str
    batch_msg: str
    bdgt_acct_item_desc: str
    bdgt_active: str
    bdgt_actual: str
    bdgt_actual_s: str
    bdgt_all: str
    bdgt_amt: str
    bdgt_amt_s: str
    bdgt_calc: str
    bdgt_calc_desc: str
    bdgt_calc_nodates: str
    bdgt_class: str
    bdgt_class_d: str
    bdgt_class_i: str
    bdgt_class_m: str
    bdgt_class_r: str
    bdgt_conflict_0: str
    bdgt_conflict_1: str
    bdgt_diff: str
    bdgt_diff_s: str
    bdgt_effective_date: str
    bdgt_from: str
    bdgt_int_m: str
    bdgt_int_q: str
    bdgt_int_w: str
    bdgt_int_y: str
    bdgt_item_desc: str
    bdgt_item_desc_wsubcats: str
    bdgt_name: str
    bdgt_per_acct: str
    bdgt_prorated_amt: str
    bdgt_title: str
    bdgt_to: str
    bdgti_annually: str
    bdgti_bimonthly: str
    bdgti_biweekly: str
    bdgti_daily: str
    bdgti_interval: str
    bdgti_monthly: str
    bdgti_norepeat: str
    bdgti_once_annually: str
    bdgti_once_bimonthly: str
    bdgti_once_biweekly: str
    bdgti_once_monthly: str
    bdgti_once_semiannually: str
    bdgti_once_semimonthly: str
    bdgti_once_trimonthly: str
    bdgti_once_triweekly: str
    bdgti_once_weekly: str
    bdgti_semiannually: str
    bdgti_semimonthly: str
    bdgti_trimonthly: str
    bdgti_triweekly: str
    bdgti_weekly: str
    beep_on_txn_change: str
    beg_for_review: str
    between_dates_x_and_y: str
    biller_ref_info: str
    bluLabel: str
    bondSubType_corp: str
    bondSubType_junk: str
    bondSubType_muni: str
    bondSubType_revenue: str
    bond_broker: str
    bond_coupon: str
    bond_type: str
    bp_acct_bankbranch: str
    bp_acct_bankcity: str
    bp_acct_bankname: str
    bp_acct_bankpostal: str
    bp_acct_id: str
    bp_acct_key: str
    bp_acct_pttacctid: str
    bp_acct_type: str
    bp_amount: str
    bp_bankid: str
    bp_branch_id: str
    bp_cust_acct: str
    bp_dt_due: str
    bp_memo: str
    bp_payee_addr1: str
    bp_payee_addr2: str
    bp_payee_addr3: str
    bp_payee_city: str
    bp_payee_country: str
    bp_payee_name: str
    bp_payee_phone: str
    bp_payee_postal: str
    bp_payee_state: str
    bpto_bank_acct: str
    bpto_newpayee: str
    bpto_predefpayee: str
    browse_files: str
    budget: str
    budgetAmountTip_format: str
    budget_already_exists: str
    budget_class: str
    budget_copy_and_rollover_prev_period: str
    budget_copy_prev_period: str
    budget_item: str
    budget_list_win_title: str
    budget_tip_title: str
    budget_use_prev_actual: str
    budgets: str
    budgets___: str
    build: str
    buy_now: str
    buy_upgrade: str
    by_inv_acct: str
    by_sec: str
    bytes: str
    cal: str
    calc_budget: str
    calc_expl_html: str
    calculate_pmt: str
    calibrate_printer: str
    calibrate_printer_title: str
    call: str
    cancel: str
    cancel_payment: str
    cancel_txn: str
    canceled: str
    cannot_open_book_file: str
    cannot_remove_currency1: str
    cannot_remove_currency2: str
    cant_delete_nonempty_acct: str
    cant_delete_root_acct: str
    cant_edit_splits: str
    casestv_ac: str
    cash: str
    cashflow_dest: str
    cashflow_source: str
    categories: str
    category: str
    category_info_title: str
    category_is_inactive: str
    category_list: str
    category_name: str
    catsHelp: str
    catsHelpSelected: str
    catsLabel: str
    cc_exp: str
    cc_start_bal: str
    ccard_number: str
    cdSubType_broker: str
    cdSubType_bumpup: str
    cdSubType_callable: str
    cdSubType_fixed: str
    cdSubType_liquid: str
    cdSubType_variable: str
    cdSubType_zerocoupon: str
    cd_apr: str
    cd_name: str
    cd_price: str
    certificate_error: str
    changelog_title: str
    check_for_updates: str
    check_for_updates_q: str
    check_num_nextnum: str
    check_num_printnum: str
    check_num_settings: str
    check_num_settings_label: str
    check_num_settings_show_nextnum: str
    check_num_settings_show_print: str
    check_num_settings_title: str
    check_num_tags: str
    check_on_startup: str
    check_type: str
    check_version_at_startup: str
    check_versions_ext: str
    checknums_recents: str
    checknums_recents_all: str
    checknums_recents_from_account: str
    checknums_recents_max: str
    checknums_recents_none: str
    checks_on_1st_page: str
    checks_per_page: str
    checks_through_date: str
    checks_with_stubs: str
    chg_curr_msg1: str
    chg_pin_win_title: str
    chknum_atm: str
    chknum_buy: str
    chknum_buyx: str
    chknum_ckcard: str
    chknum_dep: str
    chknum_nextchecknum: str
    chknum_print: str
    chknum_sell: str
    chknum_sellx: str
    chknum_split: str
    chknum_transfer: str
    choose_acct_file_title: str
    choose_archive_file_title: str
    choose_documents_dir: str
    choose_exp_file_title: str
    choose_ext_file: str
    choose_file: str
    choose_folder: str
    choose_graph_file_title: str
    choose_import_file: str
    choose_location: str
    choose_moneydance_file: str
    choose_ofx_file_title: str
    choose_ol_account: str
    choose_png_file: str
    choose_qem_file: str
    choose_qif_file_title: str
    choose_report_file_title: str
    choose_security: str
    city: str
    clear: str
    clear_all: str
    clear_all_auth: str
    clear_menu: str
    cleared: str
    cleared_balance: str
    click2update: str
    click_to_select_account: str
    close: str
    close_edit_script: str
    closing_and_syncing_changes: str
    coa: str
    colorSelect_hueTip: str
    colorSelect_lumTip: str
    colorSelect_satTip: str
    color_accountIconTint: str
    color_budgetAcceptableColor: str
    color_budgetAlertColor: str
    color_budgetGraphWarning: str
    color_budgetHealthyColor: str
    color_budgetIconTint: str
    color_calEventBG: str
    color_calPastEventBG: str
    color_dashboardFG: str
    color_defaultBackground: str
    color_defaultTextForeground: str
    color_errorMessageForeground: str
    color_expenseIconTint: str
    color_filterBarBG: str
    color_filterBarBtnBG: str
    color_filterBarFG: str
    color_filterBarSelBG: str
    color_filterBarSelFG: str
    color_filterBarShadow: str
    color_futureTxn2BG: str
    color_futureTxnBG: str
    color_futureTxnIndicator: str
    color_graphBG1: str
    color_graphBG2: str
    color_graphData1: str
    color_graphData10: str
    color_graphData11: str
    color_graphData12: str
    color_graphData13: str
    color_graphData14: str
    color_graphData15: str
    color_graphData16: str
    color_graphData17: str
    color_graphData18: str
    color_graphData19: str
    color_graphData2: str
    color_graphData20: str
    color_graphData21: str
    color_graphData22: str
    color_graphData23: str
    color_graphData3: str
    color_graphData4: str
    color_graphData5: str
    color_graphData6: str
    color_graphData7: str
    color_graphData8: str
    color_graphData9: str
    color_graphIconTint: str
    color_headerBG: str
    color_headerBG1: str
    color_headerBG2: str
    color_headerBorder: str
    color_headerFG: str
    color_homeIconTint: str
    color_homePageAltBG: str
    color_homePageBG: str
    color_homePageFG: str
    color_homepageSectionBG: str
    color_hudBG: str
    color_hudBG1: str
    color_hudBG2: str
    color_hudBorderColor: str
    color_hudFG: str
    color_incomeIconTint: str
    color_listBackground: str
    color_listSelectioBG: str
    color_mainDivider: str
    color_mainPanelBorderColor: str
    color_negativeBalFG: str
    color_popoverBG: str
    color_popoverBorder: str
    color_popoverTriangleBG: str
    color_positiveBalFG: str
    color_registerBG1: str
    color_registerBG2: str
    color_registerGrid: str
    color_registerSelectedBG: str
    color_registerSelectedFG: str
    color_registerTextFG: str
    color_registerUnconfirmedIconFG: str
    color_registerUnfocusedSelectedBG: str
    color_reminderHomeInnerLine: str
    color_reminderIconTint: str
    color_reportBlueFG: str
    color_reportIconTint: str
    color_reportRedFG: str
    color_scrollThumb: str
    color_secondaryTextFG: str
    color_selectedRowGradient1: str
    color_selectedRowGradient2: str
    color_sidebarBackground: str
    color_sidebarHeader: str
    color_sidebarNegativeBalanceFG: str
    color_sidebarPositiveBalanceFG: str
    color_sidebarSecondaryTextFG: str
    color_sidebarSelectedBG: str
    color_sidebarSelectedFG: str
    color_sidebarUFSelectedBG: str
    color_tableHeaderBG: str
    color_tertiaryTextFG: str
    color_text: str
    colorselect_label: str
    combine_criteria: str
    comm_error: str
    compounding: str
    confirm: str
    confirm_clear_snapshots: str
    confirm_del_acct_book_q: str
    confirm_del_acct_q: str
    confirm_del_currencies: str
    confirm_del_currency: str
    confirm_del_payee: str
    confirm_del_payment: str
    confirm_del_securities: str
    confirm_del_security: str
    confirm_del_tag: str
    confirm_delete_acct: str
    confirm_delete_addrbkentry: str
    confirm_delete_reminder: str
    confirm_delete_txn: str
    confirm_no_match: str
    confirm_pos_rec_cc_bal: str
    confirm_txn_changes: str
    confirm_yes: str
    confirmed_balance: str
    conn_state_authorising: str
    conn_state_connected: str
    conn_state_connecting: str
    conn_state_disconnected: str
    console_window: str
    console_window_title: str
    copied: str
    copy_mdplus_settings: str
    copy_of: str
    copy_to_clipboard: str
    copyright: str
    corp_bond: str
    cost_basis: str
    cost_basis_invalid: str
    cost_per_share: str
    country: str
    create: str
    create_acct: str
    create_cat: str
    create_extension: str
    create_init_tfr: str
    create_loan_rem: str
    create_new_file: str
    create_new_file_expl: str
    create_reminder: str
    create_sec: str
    create_txn_tag: str
    create_txn_tag_msg: str
    create_watch_list: str
    credit_amount: str
    credit_limit: str
    credit_remaining: str
    crypto_level: str
    cumulative: str
    curr_del: str
    curr_hist_download: str
    curr_hist_title: str
    curr_new: str
    curr_splits: str
    curr_type_curr: str
    curr_type_sec: str
    currencies: str
    currency: str
    currency_id: str
    currency_id_exists_msg: str
    currency_name: str
    currency_num_decimal_points: str
    currency_prefix: str
    currency_rate: str
    currency_suffix: str
    currency_ticker: str
    currency_type: str
    current_period: str
    custom: str
    custom_date: str
    customer_id_num: str
    customize_theme: str
    cutoff_date: str
    date_due: str
    date_fmt: str
    date_format: str
    day: str
    day_headers: str
    days_to_sync: str
    db_blank: str
    db_budget_status: str
    db_networth: str
    debit_amount: str
    debt_payment_clearedbal: str
    debt_payment_currentbal: str
    debt_payment_fixed: str
    debt_payment_pctclearedbal: str
    debt_payment_pctcurrentbal: str
    december: str
    decimal_char: str
    decimal_point: str
    decimal_point_comma: str
    decimal_point_dot: str
    decrease: str
    default_account_book_names: str
    default_archive_file: str
    default_browser: str
    default_category: str
    default_currency: str
    default_new_budget_name: str
    deflt_chknum_list: str
    del_msg: str
    del_reminder_ques: str
    del_sec_txt: str
    del_sec_win: str
    del_sel_txns: str
    del_splits: str
    delete: str
    delete___: str
    delete_acct___: str
    delete_attachment_message: str
    delete_attachment_title: str
    delete_book___: str
    delete_budget_q: str
    delete_mem_report_q: str
    delete_split: str
    delete_txn: str
    delete_txns_q: str
    des_crypto_option: str
    desc: str
    desc_memo_same_line: str
    destination_of_funds: str
    did_save_data: str
    diff_bet_expenses_income: str
    disagree: str
    discounted_update_msg: str
    div_inc: str
    dividend: str
    dling_fi_list: str
    dling_from: str
    dling_module: str
    dling_versions: str
    done: str
    dont_adjust_rate: str
    dont_bother: str
    dont_download: str
    dont_repeat: str
    down: str
    download: str
    download___: str
    download_all_available: str
    download_ext_error: str
    download_from_x: str
    download_history_length_msg: str
    download_history_length_title: str
    download_sync_reset_msg: str
    download_txns_for_acct: str
    downloaded_n_txns_for_acct: str
    downloaded_one_txn_for_acct: str
    downloaded_zero_txns_for_acct: str
    downloading_acct_x: str
    downloading_all_done: str
    downloading_extension_list: str
    dropbox: str
    dropbox_auth_err: str
    dropbox_auth_msg: str
    dropbox_auth_wait_msg: str
    dropbox_authorize: str
    dropbox_connect: str
    dropbox_disconnect: str
    dropbox_login: str
    dropbox_syncing: str
    dropboxapi_sync_instructions: str
    dropboxfolder_sync_instructions: str
    duplicate_chknum: str
    duplicate_txn: str
    edit: str
    edit___: str
    edit_acct___: str
    edit_budget_win_title: str
    edit_copy: str
    edit_currencies___: str
    edit_currency_win_title: str
    edit_custom_filter: str
    edit_cut: str
    edit_history: str
    edit_list: str
    edit_lots: str
    edit_paste: str
    edit_payee_title: str
    edit_payment: str
    edit_payment_title: str
    edit_reminders_win_title: str
    edit_script: str
    edit_securities___: str
    edit_securities_win_title: str
    edit_select_all: str
    edit_them_overwrite_warning: str
    edit_theme: str
    edit_txn: str
    edit_txn_tag: str
    edit_txn_tag_msg: str
    edit_txn_tag_prompt: str
    edit_txn_tags: str
    edited_txn: str
    edited_txn_description: str
    editlist_error: str
    editlist_inuse_msg: str
    editlist_prompt_fmt: str
    editlist_title: str
    email: str
    email_address: str
    empty_currency_id_msg: str
    encrypt_desc: str
    encrypt_file: str
    encrypt_not_available: str
    encryption___: str
    encryption_error: str
    enter_bp_acct_num: str
    enter_budget_name: str
    enter_graph_name: str
    enter_license_key: str
    enter_passwd: str
    enter_passwd_desc: str
    enter_rpt_name: str
    err_bad_mod_sig: str
    err_internal: str
    err_save_graph: str
    err_save_report: str
    err_unknown: str
    error: str
    error_backing_up_file: str
    error_checking_version: str
    error_creating_file: str
    error_desc: str
    error_during_download: str
    error_getting_ext_list: str
    error_loading_ext_file: str
    error_loading_module: str
    error_loading_msg: str
    error_loading_title: str
    error_module_name: str
    error_opening_file: str
    error_saving_currency_data: str
    error_saving_file: str
    error_saving_theme: str
    error_title: str
    escrow: str
    escrow_acct: str
    escrow_pmt: str
    ex_month: str
    exact_match: str
    except_type: str
    exchange_as: str
    exchange_ase: str
    exchange_ax: str
    exchange_ba: str
    exchange_bc: str
    exchange_be: str
    exchange_bi: str
    exchange_bm: str
    exchange_bo: str
    exchange_cbt: str
    exchange_cme: str
    exchange_co: str
    exchange_de: str
    exchange_du: str
    exchange_f: str
    exchange_ha: str
    exchange_hk: str
    exchange_hm: str
    exchange_jk: str
    exchange_kq: str
    exchange_ks: str
    exchange_l: str
    exchange_ma: str
    exchange_mc: str
    exchange_mf: str
    exchange_mi: str
    exchange_mu: str
    exchange_mx: str
    exchange_nasdaq: str
    exchange_ns: str
    exchange_nyb: str
    exchange_nym: str
    exchange_nyse: str
    exchange_nyx: str
    exchange_nz: str
    exchange_ol: str
    exchange_otc: str
    exchange_pa: str
    exchange_pk: str
    exchange_sa: str
    exchange_sg: str
    exchange_si: str
    exchange_ss: str
    exchange_st: str
    exchange_sw: str
    exchange_sz: str
    exchange_ta: str
    exchange_to: str
    exchange_tw: str
    exchange_two: str
    exchange_v: str
    exchange_vi: str
    excluded_extension_message: str
    existing_account: str
    exp_vat_editor: str
    expense_account: str
    expenses_graph: str
    export_all_accounts: str
    export_completed_message: str
    export_data___: str
    export_done: str
    export_format: str
    export_qif_header: str
    exporting_file: str
    ext_bad_sig_warning: str
    ext_download: str
    ext_download_desc: str
    ext_downloading: str
    ext_file_desc: str
    ext_from_file: str
    ext_info: str
    ext_install: str
    ext_installed: str
    ext_name: str
    ext_selectdl_desc: str
    ext_selectfile_desc: str
    ext_src: str
    ext_uninstall: str
    ext_upgrade: str
    external_files: str
    face_value: str
    fc_location: str
    february: str
    fewer_fields: str
    fi: str
    fi_acct_assoc_error: str
    fi_refresh_err: str
    field_delimiter: str
    field_exp: str
    fifo: str
    file: str
    file_encoding: str
    file_exists_q: str
    file_not_found: str
    file_read_error: str
    file_was_downloaded: str
    filter_by_tag: str
    filter_has_tag: str
    filter_label: str
    findAnd_text: str
    findCategoriesSelect_mnemonic: str
    findExact_text: str
    findOr_text: str
    find___: str
    find_again: str
    find_txn: str
    finding_syncable_files: str
    finish: str
    first_chk_num: str
    fiscal_year_start: str
    fiscal_year_to_date: str
    folder_sync_instructions: str
    font: str
    font_size: str
    foreign_amount: str
    foreign_amt: str
    format_commadel: str
    format_commadel_with_bom: str
    format_html: str
    format_md2008: str
    format_md2010: str
    format_qif: str
    format_raw_json: str
    format_tabdel: str
    format_xml: str
    forward: str
    found_syncable_files: str
    free_update_msg: str
    fri_s: str
    from_acct: str
    from_currency: str
    from_file: str
    from_ofx_file: str
    from_qif_file: str
    from_txn_primacct: str
    fund_name: str
    gen_graph: str
    gen_graph_error: str
    gen_graph_report: str
    gen_report: str
    gen_report_error: str
    general_error_msg: str
    generating: str
    generic_confirm: str
    generic_error_message: str
    get_info: str
    getting_started_win_title: str
    got_zero_rate: str
    gov_bond: str
    graph: str
    graph___: str
    graph_account: str
    graph_account_balance: str
    graph_asset_alloc: str
    graph_avg: str
    graph_bar: str
    graph_begindate: str
    graph_currency: str
    graph_detailed_key: str
    graph_dimension_3: str
    graph_done: str
    graph_dot__expenses: str
    graph_dot__incomes: str
    graph_enddate: str
    graph_expenses: str
    graph_explast30days: str
    graph_explast365days: str
    graph_explastmonth: str
    graph_expnext30days: str
    graph_expnextmonth: str
    graph_expthismonth: str
    graph_expthisyear: str
    graph_groupby: str
    graph_groupby_day: str
    graph_groupby_fquarter: str
    graph_groupby_fyear: str
    graph_groupby_month: str
    graph_groupby_none: str
    graph_groupby_quarter: str
    graph_groupby_week: str
    graph_groupby_year: str
    graph_inclast30days: str
    graph_inclast365days: str
    graph_inclastmonth: str
    graph_income: str
    graph_income_expenses: str
    graph_incthismonth: str
    graph_incthisyear: str
    graph_line: str
    graph_max: str
    graph_med: str
    graph_memorize: str
    graph_memorize_title: str
    graph_min: str
    graph_name: str
    graph_net_worth: str
    graph_pie: str
    graph_print: str
    graph_relative_to_currency: str
    graph_save: str
    graph_security_performance: str
    graph_sel_expenses: str
    graph_sel_incomes: str
    graph_show_noncleared: str
    graph_top_expenses: str
    graph_top_expenses___: str
    graph_top_incomes: str
    graph_top_incomes___: str
    graph_type: str
    graph_update: str
    graph_win_title: str
    graphs: str
    graphs_and_reports: str
    grnLabel: str
    have_most_recent_version: str
    heavy_lot_panel: str
    help: str
    help_contents: str
    help_dir: str
    help_reg: str
    help_support_site: str
    help_userguide: str
    help_win_title: str
    hidden_panels: str
    hideBudgetItemPrompt: str
    hide_on_hp: str
    hide_source_list: str
    high_contrast_setting: str
    hint: str
    home: str
    home_asset_balances: str
    home_balances: str
    home_bank_balances: str
    home_calendar: str
    home_cc_balances: str
    home_exchangerates: str
    home_invst_balances: str
    home_liability_balances: str
    home_loan_balances: str
    home_stocksprices: str
    home_versions: str
    home_view_config_desc: str
    https_not_available: str
    hueLabel: str
    icloud: str
    iclouddrive: str
    iclouddrive_sync_instructions: str
    ignore: str
    ignore_this_version: str
    import_accts_only: str
    import_backup: str
    import_csv_error_columns: str
    import_csv_error_nodata: str
    import_csv_ready_fmt: str
    import_data___: str
    import_download_desc: str
    import_error_msg: str
    import_from_download: str
    import_from_program: str
    import_from_qem: str
    import_from_qem_desc: str
    import_from_qem_expl: str
    import_from_qem_title: str
    import_from_txns: str
    import_hist_desc: str
    import_hist_from_file: str
    import_hist_from_txns_desc: str
    import_into_acct: str
    import_multiple_settings_desc: str
    import_no_file: str
    import_ofc_header: str
    import_ofx_header: str
    import_partial_fmt: str
    import_price_hist: str
    import_price_hist_error: str
    import_qif_header: str
    import_single_acct_desc: str
    import_status_merging: str
    import_status_prescanning: str
    import_status_reading: str
    import_success_fmt: str
    imported_ofx: str
    importing_data: str
    in_window: str
    inbox: str
    inc_exp_include_xfer: str
    inc_liabilities: str
    inc_sec_bal: str
    inc_subaccts: str
    incl_items: str
    include_reconciling: str
    incomeAsMax_text: str
    income_acct: str
    incoming: str
    increase: str
    index: str
    info: str
    information: str
    init_srng___: str
    initial_liability: str
    initial_sync_msg: str
    initial_value: str
    input_error: str
    insert_dec: str
    install: str
    install_extension: str
    install_extension_from_script_q: str
    installed_extensions: str
    int_acct: str
    int_inc: str
    int_rem: str
    interest: str
    internal_files: str
    invalid_checknum: str
    invalid_key: str
    invalid_ofx: str
    invalid_olb_signon_msg: str
    invst_cash_balance: str
    invst_port_val: str
    invst_txntype_0: str
    invst_txntype_1: str
    invst_txntype_10: str
    invst_txntype_11: str
    invst_txntype_2: str
    invst_txntype_3: str
    invst_txntype_4: str
    invst_txntype_5: str
    invst_txntype_6: str
    invst_txntype_7: str
    invst_txntype_8: str
    invst_txntype_9: str
    invst_txntype_unreal: str
    invst_txntypel_0: str
    invst_txntypel_1: str
    invst_txntypel_10: str
    invst_txntypel_11: str
    invst_txntypel_2: str
    invst_txntypel_3: str
    invst_txntypel_4: str
    invst_txntypel_5: str
    invst_txntypel_6: str
    invst_txntypel_7: str
    invst_txntypel_8: str
    invst_txntypel_9: str
    invst_unsprtd_txn: str
    is_child_of: str
    is_reg_desc: str
    item_exists_q: str
    january: str
    java_laf: str
    java_loc: str
    java_vendor: str
    java_version: str
    july: str
    june: str
    keep_reminders_in_archive: str
    key_desc: str
    key_title: str
    labelColon: str
    last_12_months: str
    last_1_day: str
    last_30_days: str
    last_365_days: str
    last_fiscal_quarter: str
    last_fiscal_year: str
    last_month: str
    last_quarter: str
    last_week: str
    last_x_days: str
    last_year: str
    latest_build: str
    latest_licensed_msg: str
    latest_update: str
    least_gain: str
    left_panels: str
    license: str
    license_agree: str
    license_key: str
    limits_text: str
    list_name: str
    loading___: str
    loading_file: str
    loan_amt: str
    loan_principal: str
    loan_pts: str
    loan_rate: str
    loan_reminder: str
    loan_term_yrs: str
    loan_tfr: str
    locale: str
    log_mdplus_settings: str
    login: str
    look_and_feel: str
    lot_match: str
    lumLabel: str
    make_duplicate: str
    manage_extensions: str
    manually_open_url_message: str
    march: str
    mark_confirmed_txns_cleared: str
    mark_txns_as_confirmed: str
    mark_txns_cleared_q: str
    mark_txns_reconciling_q: str
    mark_txns_uncleared_q: str
    match_local_account: str
    match_local_category: str
    match_lots: str
    match_lots2: str
    match_online_accounts: str
    match_online_name: str
    match_txns: str
    match_type_correction: str
    match_type_delete: str
    match_type_duplicate: str
    match_type_merge: str
    match_type_orig: str
    match_type_revert: str
    match_type_similar: str
    maturity_date: str
    may: str
    md_files: str
    mdplus: str
    mdplus_authentication_error: str
    mdplus_confirmation_expired: str
    mdplus_confirmation_pending: str
    mdplus_disconnect_x: str
    mdplus_doing_initial_download_msg: str
    mdplus_error_refreshing: str
    mdplus_expires_x: str
    mdplus_fully_connected: str
    mdplus_item_is_relinking_desc: str
    mdplus_item_needs_relink: str
    mdplus_item_needs_relink_prompt: str
    mdplus_item_relink_needed: str
    mdplus_item_status_connected: str
    mdplus_item_status_expiration_imminent: str
    mdplus_item_status_expired: str
    mdplus_item_status_unknown: str
    mdplus_manage_account: str
    mdplus_pending_subscription: str
    mdplus_relink_error: str
    mdplus_service: str
    mdplus_service_desc: str
    mdplus_setup: str
    mdplus_setup_accounts: str
    mdplus_signup_connect: str
    mdplus_signup_connect_accounts: str
    mdplus_signup_extra_activated: str
    mdplus_signup_extra_confirmed: str
    mdplus_signup_extra_expired: str
    mdplus_signup_extra_none: str
    mdplus_signup_extra_pending: str
    mdplus_signup_extra_subscribed: str
    mdplus_signup_extra_unknown: str
    mdplus_signup_go_to_browser: str
    mdplus_signup_link_accounts: str
    mdplus_signup_message: str
    mdplus_signup_message2: str
    mdplus_signup_preparing: str
    mdplus_signup_reconnect: str
    mdplus_signup_subscribe: str
    mdplus_status_checking: str
    mdplus_subscription_confirmed: str
    mdplus_table_desc: str
    mdplus_unable_to_add_connection: str
    mdplus_unable_to_disconnect: str
    mdplus_unable_to_register_key: str
    mdplus_update_link: str
    memo: str
    memorize_txn: str
    memorized: str
    memorized_graphs: str
    memorized_reports: str
    merge_txn: str
    migrate_file_continue: str
    migrate_file_continue_external: str
    migrate_file_internal_desc: str
    minimize_window: str
    misc_error: str
    misc_exp: str
    misc_inc: str
    missing_field: str
    missing_r_desc: str
    missing_r_desc_title: str
    mixed_interval_budget: str
    mon_s: str
    moneybot: str
    month: str
    month_to_date: str
    monthly_pmt: str
    more: str
    more___: str
    more_fields: str
    motif_laf: str
    moveDown: str
    moveUp: str
    move_file_from_dropbox: str
    move_file_from_dropbox_msg: str
    move_internal_storage_failed: str
    move_internal_storage_message: str
    move_internal_storage_title: str
    move_left_item: str
    move_right_item: str
    move_txn: str
    msg_from: str
    msg_subj: str
    msg_to: str
    multiple_selections: str
    multiple_selections_description: str
    multiple_txns_selected: str
    mun_bond: str
    mutualSubType_US: str
    mutualSubType_balanced: str
    mutualSubType_bond: str
    mutualSubType_etf: str
    mutualSubType_intl: str
    mutualSubType_money: str
    n_total: str
    n_unconfirmed_txns: str
    name: str
    nasdaq: str
    net_worth: str
    netsync: str
    netsync_at_startup: str
    netsync_wait: str
    network_error: str
    new___: str
    new_account: str
    new_account_book: str
    new_account_name: str
    new_account_url_text: str
    new_account_url_title: str
    new_acct___: str
    new_basic_reminder_on_date: str
    new_bond_win: str
    new_budget: str
    new_category: str
    new_category_name: str
    new_cd_win: str
    new_check_tag: str
    new_currency_win_title: str
    new_fi: str
    new_file_contents0: str
    new_file_contents1: str
    new_file_currency: str
    new_file_desc: str
    new_file_desc0: str
    new_file_desc1: str
    new_file_from_import: str
    new_file_from_import_expl: str
    new_file_header: str
    new_file_inv_acct_name: str
    new_file_inv_acct_type: str
    new_file_inv_curr_type: str
    new_file_location: str
    new_file_type: str
    new_file_type0: str
    new_file_type1: str
    new_file_win_title: str
    new_invest_txn_win: str
    new_manual_fi: str
    new_msg: str
    new_mutual_win: str
    new_payee: str
    new_payee_title: str
    new_script: str
    new_script_title: str
    new_sec_win: str
    new_split: str
    new_stock_win: str
    new_transaction: str
    new_transaction_on_record: str
    new_txn_reminder_on_date: str
    new_updater_msg: str
    new_version: str
    new_watch_list_win: str
    newextavail: str
    next: str
    next_check_num: str
    no: str
    noBudget: str
    noCategory: str
    noEndDate: str
    no_bdgt_selected: str
    no_checks_to_print: str
    no_dldr_for_currtype: str
    no_emails: str
    no_fields_err: str
    no_file_opened_error: str
    no_files_selected: str
    no_folder_selected: str
    no_info_about_features: str
    no_new_online_txns: str
    no_online_banking_test: str
    no_sec_selected_err: str
    no_security_q: str
    no_sells: str
    no_shares_date: str
    no_syncable_files_found: str
    no_txns: str
    no_txns_selected: str
    none: str
    none_of_the_above: str
    notes: str
    nothing_to_download_msg: str
    nothing_to_graph: str
    nothing_to_print: str
    nothing_to_report: str
    november: str
    null_pointer_exception: str
    num_payments: str
    num_pmts_rem: str
    num_txns_left_in_demo: str
    num_years: str
    numeric_font: str
    nxt_pmt: str
    nyse: str
    observe_bp_window: str
    october: str
    of_string: str
    of_the_month: str
    ofc: str
    ofx: str
    ofx_acct_type_cc: str
    ofx_acct_type_checking: str
    ofx_acct_type_lineofcredit: str
    ofx_acct_type_loc: str
    ofx_acct_type_moneymkt: str
    ofx_acct_type_savings: str
    ofx_app_id: str
    ofx_app_version: str
    ofx_bad_pin1: str
    ofx_bad_pin2: str
    ofx_bad_pin3: str
    ofx_bank_fid: str
    ofx_bank_id: str
    ofx_bank_org: str
    ofx_bank_url: str
    ofx_billpayment: str
    ofx_broker_id: str
    ofx_changing_pin: str
    ofx_chg_pin_desc: str
    ofx_getting_fi_prof: str
    ofx_manual_setup_html: str
    ofx_newpass: str
    ofx_newpass2: str
    ofx_olbanking: str
    ofx_oldpass: str
    ofx_pin_mismatch: str
    ofx_realm: str
    ofx_service: str
    ofx_service_desc: str
    ofx_signup_done: str
    ofx_signup_needs_pin_chg: str
    ofx_userid: str
    ofx_win_title: str
    ok: str
    ol_avail_bal: str
    ol_ledger_bal: str
    olb_accept_suggestion: str
    olb_accept_suggestions: str
    olb_acct_not_found: str
    olb_acct_type_mismatch: str
    olb_best_match: str
    olb_by_addr: str
    olb_by_id: str
    olb_change_pin: str
    olb_chg_conn: str
    olb_conn: str
    olb_correction_to: str
    olb_del_connection: str
    olb_delete_txn: str
    olb_disconnect: str
    olb_disconnect_q: str
    olb_enroll_msg1: str
    olb_enroll_web: str
    olb_exact_match: str
    olb_fi_addr: str
    olb_fi_citystate: str
    olb_fi_ctry: str
    olb_fi_cust_svc_phone: str
    olb_fi_dateup: str
    olb_fi_lookup_instruct: str
    olb_fi_lookup_instruct2: str
    olb_fi_name: str
    olb_fi_tech_svc_phone: str
    olb_fi_url: str
    olb_fi_zip: str
    olb_fitable_accesstype: str
    olb_fitable_finame: str
    olb_fitable_fitype: str
    olb_lookup_fi: str
    olb_match_correction: str
    olb_match_deletion: str
    olb_match_option: str
    olb_matched_option: str
    olb_msg_set_not_supported: str
    olb_new_conn_expl: str
    olb_new_connection: str
    olb_new_txn: str
    olb_no_match: str
    olb_payment_description: str
    olb_possible_match: str
    olb_refresh_connection: str
    olb_refresh_fi: str
    olb_reject_suggestion: str
    olb_reject_suggestions: str
    olb_reset_sync: str
    olb_service: str
    olb_setup: str
    olb_signup_wizard: str
    olb_similar_option: str
    olb_similar_prev_txn: str
    olb_wiz_retrieve_fi: str
    olb_wiz_youchose1: str
    olb_wiz_youchose2: str
    olbp_conn: str
    olbp_date_too_early: str
    olbp_disconnect_q: str
    olbp_msg_set_not_supported: str
    olbp_service: str
    olbp_setup: str
    olbp_signup_wizard: str
    olemail_msg_set_not_supported: str
    one: str
    one_line_mode: str
    one_unconfirmed_txn: str
    onlbp_instr: str
    online_acct_bp_not_configured: str
    online_acct_not_configured: str
    online_all_txns_processed: str
    online_amt_sign_overrides_txntype: str
    online_auth: str
    online_auth_anonymous: str
    online_auth_fixed: str
    online_auth_hwtoken: str
    online_auth_onetime: str
    online_auth_type: str
    online_billpay: str
    online_bills_title: str
    online_confirm_sel_txns: str
    online_connect_to: str
    online_connections: str
    online_downloading_txns: str
    online_error_code: str
    online_error_expl: str
    online_error_msg: str
    online_error_start: str
    online_error_title: str
    online_menu: str
    online_payees_title: str
    online_removing_payee: str
    online_retrieve_txns: str
    online_submitting_payee: str
    online_submitting_pmt: str
    online_transfer: str
    online_txn_corrxn: str
    online_txn_delete: str
    online_txn_match_desc: str
    online_txn_new_desc: str
    online_update: str
    online_update_all: str
    online_update_txns_title: str
    online_updating_payee: str
    open: str
    open___: str
    open_archive_description: str
    open_archive_title: str
    open_existing_book: str
    open_file: str
    open_file_expl: str
    open_most_recent: str
    open_new_win: str
    open_other: str
    open_recent: str
    open_script: str
    open_script_title: str
    open_sync_new_local: str
    open_sync_text_dropbox: str
    open_sync_text_folder: str
    open_synced_file: str
    open_this_window: str
    open_website: str
    open_x_in_external_browser: str
    optionSubType_incentive: str
    optionSubType_nonqual: str
    option_price: str
    orig_oltxn_label: str
    original_memo: str
    original_payee: str
    otc: str
    other: str
    otherSubType_gold: str
    otherSubType_oil: str
    otherSubType_realestate: str
    outOfDate: str
    outOfDateTip_format: str
    outbox: str
    outgoing: str
    outgoing_olp: str
    over_mnemonic: str
    over_text: str
    overdue: str
    overdue_items: str
    overwrite_theme_conf_text: str
    overwrite_theme_conf_title: str
    p_b_destroy_msg1: str
    p_b_destroy_msg2: str
    p_b_destroy_u: str
    p_bkup_daily: str
    p_bkup_es: str
    p_bkup_esp: str
    p_bkup_first_open: str
    p_bkup_no: str
    p_bkup_s_l: str
    p_total: str
    page: str
    paid_update_msg: str
    parent_acct: str
    parent_cat: str
    parse_error: str
    password: str
    password_confirm: str
    password_pin: str
    payee: str
    payee_id: str
    payees: str
    payment_plan: str
    pending_txns_msg: str
    period: str
    periodically_autosave: str
    phone: str
    phone_number: str
    plaid_setup_msg: str
    please_confirm: str
    please_wait: str
    pls_enter_passwd: str
    pmt_amount: str
    pmt_balance: str
    pmt_calc: str
    pmt_interest: str
    pmt_num: str
    pmt_or_dep_q: str
    pmt_principal: str
    pmt_total: str
    pmt_total_int: str
    pmt_win: str
    pmt_xtra_princ: str
    pmts_per_year: str
    png_files: str
    pnts_vs_rate: str
    pnts_vs_rate_advice0: str
    pnts_vs_rate_advice1: str
    pnts_vs_rate_advice2: str
    pnts_vs_rate_advice3: str
    pnts_vs_rate_advice4: str
    portion_text: str
    potential_duplicate_txns: str
    potential_duplicate_txns_description: str
    pref_acct_bg_col: str
    pref_acct_fg_col: str
    pref_appearance: str
    pref_autocommit_reminders: str
    pref_backup: str
    pref_cal_overdue_rmdr_col: str
    pref_cal_past_rmdr_col: str
    pref_cal_rmdr_col: str
    pref_checkPrint: str
    pref_col_chooser: str
    pref_colors: str
    pref_general: str
    pref_header: str
    pref_homepage: str
    pref_hp_altbg_col: str
    pref_hp_bg_col: str
    pref_network: str
    pref_print: str
    pref_txn_edit_bg_col: str
    pref_txn_list1_bg_col: str
    pref_txn_list2_bg_col: str
    pref_txn_list2_fut_col: str
    pref_txn_list_fut_col: str
    preferences___: str
    preview_releases: str
    preview_text: str
    previous: str
    primary_currency_type: str
    principal_rem: str
    print_all_checks: str
    print_api: str
    print_cal: str
    print_checks: str
    print_checks___: str
    print_font: str
    print_font_desc: str
    print_graph_title: str
    print_page_setup: str
    print_test_check: str
    print_transactions: str
    printadj_accountX: str
    printadj_accountY: str
    printadj_address_X: str
    printadj_address_Y: str
    printadj_amount1numX: str
    printadj_amount1numY: str
    printadj_amount2numX: str
    printadj_amount2numY: str
    printadj_amtnumlocX: str
    printadj_amtnumlocY: str
    printadj_amttextlocX: str
    printadj_amttextlocY: str
    printadj_botmarg: str
    printadj_categoryX: str
    printadj_categoryY: str
    printadj_datelocX: str
    printadj_datelocY: str
    printadj_leftmarg: str
    printadj_memoX: str
    printadj_memoY: str
    printadj_memolocX: str
    printadj_memolocY: str
    printadj_num_checks: str
    printadj_payeelocX: str
    printadj_payeelocY: str
    printadj_rightmarg: str
    printadj_showaddress: str
    printadj_showbothvouchers: str
    printadj_showmemo: str
    printadj_stub_acct_x: str
    printadj_stub_acct_y: str
    printadj_stub_amt_x: str
    printadj_stub_amt_y: str
    printadj_stub_cat_x: str
    printadj_stub_cat_y: str
    printadj_stub_date_x: str
    printadj_stub_date_y: str
    printadj_stub_memo_x: str
    printadj_stub_memo_y: str
    printadj_stub_payee_x: str
    printadj_stub_payee_y: str
    printadj_stub_size: str
    printadj_topmarg: str
    printadj_v_datelocX: str
    printadj_v_datelocY: str
    printadj_v_p_a_X: str
    printadj_v_p_a_Y: str
    printadj_v_payeelocX: str
    printadj_v_payeelocY: str
    printchk_first_err_error1: str
    printchk_first_err_error2: str
    printchk_first_err_error3: str
    printchk_first_err_num: str
    printchk_first_err_text1: str
    printchk_first_err_text2: str
    printchk_first_err_text3: str
    printchk_print_hdr: str
    printchk_select_checks: str
    printchk_verify: str
    printreg_print_hdr: str
    processed: str
    processing_downloaded_txns: str
    product_info: str
    proxy_host: str
    proxy_port: str
    put: str
    python_snippet: str
    qem_import_title: str
    qem_reading_from: str
    qif: str
    qif_datefmt: str
    qif_datefmt_auto: str
    qif_err_nofilename: str
    qif_export_error: str
    qif_file_source: str
    qif_import_error: str
    quarter_to_date: str
    question: str
    quit: str
    r_add_basic: str
    r_add_txn: str
    r_annually: str
    r_auto_commit_1: str
    r_auto_commit_2: str
    r_b_ack: str
    r_b_defer: str
    r_b_description1: str
    r_b_description2: str
    r_b_msg1: str
    r_b_msg2: str
    r_b_title: str
    r_daily: str
    r_desc: str
    r_e_1: str
    r_e_2: str
    r_e_y: str
    r_edit: str
    r_f: str
    r_gen_editwin: str
    r_l: str
    r_m: str
    r_m_1: str
    r_m_10: str
    r_m_11: str
    r_m_12: str
    r_m_13: str
    r_m_14: str
    r_m_15: str
    r_m_16: str
    r_m_17: str
    r_m_18: str
    r_m_19: str
    r_m_2: str
    r_m_20: str
    r_m_21: str
    r_m_22: str
    r_m_23: str
    r_m_24: str
    r_m_25: str
    r_m_26: str
    r_m_27: str
    r_m_28: str
    r_m_29: str
    r_m_3: str
    r_m_30: str
    r_m_31: str
    r_m_4: str
    r_m_5: str
    r_m_6: str
    r_m_7: str
    r_m_8: str
    r_m_9: str
    r_m_every: str
    r_m_every_fourth: str
    r_m_every_other: str
    r_m_every_sixth: str
    r_m_every_third: str
    r_m_last: str
    r_memo: str
    r_monthly: str
    r_new_b: str
    r_new_t: str
    r_no_overdue: str
    r_no_upcoming: str
    r_not_win: str
    r_remove: str
    r_rpt_yearly: str
    r_t_ack: str
    r_t_defer: str
    r_t_ign: str
    r_txn_editwin: str
    r_txn_err1: str
    r_txn_err2: str
    r_txn_err3: str
    r_txn_primacct: str
    r_txn_secacct: str
    r_w: str
    r_w_every: str
    r_w_fifth: str
    r_w_first: str
    r_w_fourth: str
    r_w_last: str
    r_w_second: str
    r_w_third: str
    r_weekly: str
    rating_no: str
    rating_no_never: str
    rating_no_not_now: str
    rating_no_not_this_version: str
    rating_yes: str
    rec_as_of_desc: str
    rec_begin_balance: str
    rec_cancel: str
    rec_credits: str
    rec_curr_bal: str
    rec_debits: str
    rec_delete_txn: str
    rec_delete_txn_q: str
    rec_diff: str
    rec_done: str
    rec_edit_txn: str
    rec_end_bal: str
    rec_end_balance: str
    rec_new_txn: str
    rec_start_bal: str
    rec_target_bal: str
    rec_txn_functions: str
    received_n_new_txns_for_acct: str
    received_one_new_txn_for_acct: str
    received_sync_data: str
    received_zero_new_txns_for_acct: str
    receiving_sync_data: str
    reconcile: str
    reconcile_header: str
    reconcile_win_title: str
    reconciling: str
    record_next_occurrence: str
    record_txn: str
    redLabel: str
    redo_add_item: str
    redo_add_items: str
    redo_add_txn: str
    redo_add_txns: str
    redo_del_item: str
    redo_del_items: str
    redo_del_txn: str
    redo_del_txns: str
    redo_mod_item: str
    redo_mod_items: str
    redo_mod_txn: str
    redo_mod_txns: str
    refresh: str
    reg_later: str
    reg_message: str
    reg_message2: str
    reg_never: str
    reg_no_response: str
    reg_notice: str
    reg_notice2: str
    reg_now: str
    reg_window: str
    reinvest: str
    reinvested: str
    remember_this_choice: str
    reminders___: str
    remove: str
    remove___: str
    remove_archived_txns: str
    remove_from_sidebar: str
    remove_sidebar_dlg_title: str
    rename___: str
    repair: str
    repeat: str
    repeat_manually: str
    repeat_none: str
    repeat_until_end_of_year: str
    repeat_until_eoy: str
    report: str
    report___: str
    report_account: str
    report_asofdate: str
    report_balances: str
    report_begindate: str
    report_blank_category: str
    report_blank_checknum: str
    report_blank_fee_category: str
    report_blank_payee: str
    report_blank_security: str
    report_budget: str
    report_budget_show_zeroes: str
    report_capital_gains: str
    report_cash_flow: str
    report_cat_transfers: str
    report_cost_basis: str
    report_detailed_cash_flow: str
    report_detailed_income_expenses: str
    report_detailed_transfers: str
    report_done: str
    report_enddate: str
    report_expenses: str
    report_generated: str
    report_ie_total: str
    report_include_allcats: str
    report_include_categories: str
    report_income: str
    report_income_expenses: str
    report_incomes: str
    report_invest_perf: str
    report_invest_portfolio: str
    report_invest_txn: str
    report_landscape: str
    report_memorize: str
    report_memorize_title: str
    report_missingchecks: str
    report_name: str
    report_noncat_transfers: str
    report_other_suffix: str
    report_page_footer: str
    report_print: str
    report_reconciliation: str
    report_save: str
    report_search: str
    report_show_all_acct_types: str
    report_show_all_accts: str
    report_subtotal_cats: str
    report_subtotal_for: str
    report_subtotalby_account: str
    report_subtotalby_action: str
    report_subtotalby_category: str
    report_subtotalby_chknum: str
    report_subtotalby_day: str
    report_subtotalby_fee_category: str
    report_subtotalby_fquarter: str
    report_subtotalby_fyear: str
    report_subtotalby_month: str
    report_subtotalby_none: str
    report_subtotalby_payee: str
    report_subtotalby_quarter: str
    report_subtotalby_security: str
    report_subtotalby_week: str
    report_subtotalby_year: str
    report_subtotallabel: str
    report_total: str
    report_total_suffix: str
    report_transactions: str
    report_transfers: str
    report_txn_search: str
    report_txn_tag: str
    report_type: str
    report_update: str
    report_vat: str
    report_win_title: str
    report_xfer_total: str
    reports: str
    req_field: str
    reset: str
    reset_sync_date: str
    reset_to_default: str
    resource_error: str
    restore_button: str
    restore_keep_sync_settings: str
    restore_keep_sync_settings_desc: str
    restore_message: str
    restore_settings_on_startup: str
    right_panels: str
    rpt_mischcks_0: str
    rpt_mischcks_1: str
    rpt_mischcks_2: str
    run_python_title: str
    run_script: str
    run_snippet: str
    satLabel: str
    sat_s: str
    save: str
    save_as___: str
    save_backup: str
    save_changes: str
    save_changes_question: str
    save_done: str
    save_eq: str
    save_graph_err: str
    save_txn_changes_q: str
    save_txn_title: str
    saving_file: str
    scanning_data: str
    scenario_a: str
    scenario_b: str
    sch_f_d: str
    sch_l_d: str
    scheduled_items: str
    screen_bottom: str
    screen_left: str
    screen_right: str
    screen_top: str
    script_tool: str
    search_this_acct: str
    sec: str
    sec_account: str
    sec_already_created: str
    sec_amount: str
    sec_bankregister_view: str
    sec_bond: str
    sec_broker: str
    sec_buy: str
    sec_buy_txn: str
    sec_buywhenshort_msg: str
    sec_cd: str
    sec_comments: str
    sec_commission: str
    sec_cost_basis: str
    sec_cover_txn: str
    sec_current_price: str
    sec_dayhigh: str
    sec_daylow: str
    sec_del: str
    sec_del_security: str
    sec_divdnd_txn: str
    sec_divreinvest_txn: str
    sec_edit_security: str
    sec_exchange: str
    sec_gain_loss_pcnt: str
    sec_hist: str
    sec_last_trade: str
    sec_misc_inc_exp: str
    sec_miscexp_txn: str
    sec_miscinc_txn: str
    sec_mutual: str
    sec_name: str
    sec_new_price: str
    sec_new_security: str
    sec_news: str
    sec_nothing_to_split: str
    sec_num_shares: str
    sec_option: str
    sec_other: str
    sec_overcover_msg: str
    sec_oversell_msg: str
    sec_perf: str
    sec_phone: str
    sec_portfolio_for: str
    sec_portfolio_view: str
    sec_positivecover_msg: str
    sec_positiveshort_msg: str
    sec_price: str
    sec_price_share: str
    sec_register_view: str
    sec_secdetail_view: str
    sec_sell: str
    sec_sell_txn: str
    sec_shares: str
    sec_shares_in: str
    sec_short_txn: str
    sec_split: str
    sec_split_for: str
    sec_split_in: str
    sec_split_new_price: str
    sec_split_new_shares: str
    sec_split_old_shares: str
    sec_split_out: str
    sec_stk_divdnd_txn: str
    sec_stock: str
    sec_subtype: str
    sec_tickersym: str
    sec_transfer_txn: str
    sec_txn_type: str
    sec_type: str
    sec_unknown_txn: str
    sec_value: str
    sec_vol: str
    sec_xfr_acct: str
    sec_xfr_rate: str
    sec_xfrbuy_txn: str
    sec_xfrdivdnd_txn: str
    sec_xfrin_txn: str
    sec_xfrout_txn: str
    sec_xfrsell_txn: str
    secondary_currency_type: str
    securities: str
    security_id: str
    security_price: str
    security_price_history: str
    seek_to_recorded_txns: str
    sel_accts: str
    sel_categories: str
    selby_acct: str
    selby_acct_both: str
    selby_acct_cat: str
    selby_type: str
    selby_type_both: str
    selby_type_cat: str
    select: str
    select_acct_title: str
    select_acct_type: str
    select_acct_wnum: str
    select_backup_file: str
    select_browser_executable: str
    select_checks: str
    select_currency_type: str
    select_or_add_security: str
    select_or_create_script: str
    select_payee: str
    select_qem_file: str
    selected_checks: str
    selection: str
    selection_details_view: str
    selection_details_view_inwindow: str
    selection_details_view_separate: str
    selector_add: str
    selector_addall: str
    selector_addexcept: str
    selector_advanced: str
    selector_basic: str
    selector_remove: str
    selector_removeall: str
    selector_removeexcept: str
    selector_title: str
    sell_invalid: str
    sell_long_term: str
    sell_short: str
    sell_short_term: str
    send_online_pmt: str
    send_payment: str
    send_pmt_menu: str
    send_pmt_to: str
    seprt_tax_date: str
    september: str
    set_as_default: str
    set_base_currency: str
    set_cleared: str
    set_reconciling: str
    set_uncleared: str
    settings: str
    settingsTitle_text: str
    setup: str
    shared_file_warning_title: str
    shares_allocated: str
    shares_available: str
    shares_available_fmt: str
    shares_remaining: str
    shares_sold: str
    shortcuts: str
    show: str
    showFullCat_text: str
    show_3d: str
    show_all_accounts: str
    show_archive: str
    show_average_doublecat: str
    show_docs_folder: str
    show_file_location: str
    show_full_account_path: str
    show_hint: str
    show_ie_in_popup: str
    show_in_finder: str
    show_legend: str
    show_memo: str
    show_moneybot_console: str
    show_on_hp: str
    show_on_open_label: str
    show_onlbs: str
    show_online_txns: str
    show_onlmail: str
    show_onlpayees: str
    show_other_side: str
    show_python_console: str
    show_source_code: str
    show_source_list: str
    show_splits: str
    show_two_lines: str
    show_txn: str
    show_unrealized: str
    show_upcoming_one_month: str
    show_upcoming_this_month: str
    show_upcoming_two_weeks: str
    show_welcome_screen: str
    show_xml: str
    show_zero_bal_accts: str
    shutting_down: str
    sidebar_balance: str
    similar_txns: str
    similar_txns_description: str
    since_date: str
    since_x: str
    skip_txn: str
    sort_ascending: str
    sort_by: str
    sortby_account: str
    sortby_amount: str
    sortby_checknum: str
    sortby_date: str
    sortby_date_amount: str
    sortby_date_checknum: str
    sortby_date_entered: str
    sortby_date_status: str
    sortby_description: str
    sortby_status: str
    sortby_status_checknum: str
    source_accounts: str
    source_of_funds: str
    specify_manually: str
    specify_pmt: str
    split: str
    split_acct_conflict: str
    split_label: str
    split_label1: str
    split_label2: str
    split_txn: str
    split_win_title: str
    srch: str
    srch_by_acct: str
    srch_by_amt: str
    srch_by_checknum: str
    srch_by_cleared: str
    srch_by_date: str
    srch_by_desc: str
    srch_by_memo: str
    srch_by_tag: str
    srch_op_intersect: str
    srch_op_union: str
    srch_range0: str
    srch_range1: str
    srch_range2: str
    srch_use_tax_date: str
    stable_releases: str
    stacked: str
    standard: str
    start_bal: str
    starting_on_date_x: str
    state: str
    status: str
    stockSubType_growth: str
    stockSubType_largecap: str
    stockSubType_midcap: str
    stockSubType_smallcap: str
    stockSubType_value: str
    stop_script: str
    store_passwords: str
    strike_price: str
    submit: str
    subtype_inuse_tip: str
    summary: str
    summary_page: str
    sun_s: str
    sync_add_device: str
    sync_change_pass: str
    sync_change_pass_msg: str
    sync_enc_pass: str
    sync_enter_pass_msg: str
    sync_enter_pass_title: str
    sync_error_secondary_with_no_sync_method: str
    sync_here_is_your_passwd: str
    sync_method: str
    sync_method_dropbox_api: str
    sync_method_dropbox_folder: str
    sync_method_iclouddrive: str
    sync_method_none: str
    sync_method_select_shared_folder: str
    sync_method_shared_folder: str
    sync_pass_label: str
    sync_pass_show: str
    sync_password_entry_msg: str
    sync_remove_device: str
    sync_start: str
    sync_stop: str
    sync_tax_date: str
    sync_window_title: str
    synced_as_of_x: str
    syncing___: str
    table_column_account: str
    table_column_account_action: str
    table_column_action: str
    table_column_amount: str
    table_column_annual_return: str
    table_column_balance: str
    table_column_balance_due: str
    table_column_buys: str
    table_column_cashbal: str
    table_column_category: str
    table_column_cc_charge: str
    table_column_cc_pmt: str
    table_column_checknum: str
    table_column_clearedchar: str
    table_column_cost_basis: str
    table_column_credit: str
    table_column_date: str
    table_column_debit: str
    table_column_decrease: str
    table_column_description: str
    table_column_fee: str
    table_column_feecat: str
    table_column_feerate: str
    table_column_gains: str
    table_column_gross: str
    table_column_increase: str
    table_column_interval: str
    table_column_memo: str
    table_column_net: str
    table_column_price: str
    table_column_rate: str
    table_column_return_period: str
    table_column_return_rate: str
    table_column_roi_1yr: str
    table_column_roi_3yr: str
    table_column_roi_5yr: str
    table_column_roi_all: str
    table_column_running_total: str
    table_column_sale_curr_value: str
    table_column_sales: str
    table_column_shares: str
    table_column_source: str
    table_column_source_dest: str
    table_column_splitratio: str
    table_column_tags: str
    table_column_target: str
    table_column_taxdate: str
    table_column_ticker: str
    table_column_vat: str
    table_payment_number: str
    tag: str
    tag_in_use_msg: str
    tag_inuse_tip: str
    target_accounts: str
    tax_related: str
    text_snippet: str
    tfr_from_loan: str
    theme_change_msg: str
    theme_name: str
    theme_name_classic: str
    theme_name_custom: str
    theme_name_darcula: str
    theme_name_dark: str
    theme_name_default: str
    theme_name_high_contrast: str
    theme_name_light: str
    theme_name_mac_dark_mode: str
    theme_name_solarized_dark: str
    theme_name_solarized_light: str
    this_fiscal_year: str
    this_month: str
    this_quarter: str
    this_week: str
    this_year: str
    three: str
    thu_s: str
    time_format: str
    title_text: str
    tkr_location: str
    tkr_nowhere: str
    to_acct: str
    to_be_printed: str
    to_currency: str
    to_file: str
    to_payee: str
    today: str
    too_many_accts_wtype: str
    tools: str
    tools_address_book: str
    tools_calc: str
    tools_exp_vat_editor: str
    tools_loan_calc: str
    tools_normal_calc: str
    tot_pmt: str
    total: str
    total_expenses: str
    total_from: str
    total_income: str
    total_to: str
    transfers_in: str
    transfers_out: str
    translate_currencies___: str
    translate_currency_win_title: str
    try_again: str
    tue_s: str
    two: str
    two_line_mode: str
    txn_account: str
    txn_amount: str
    txn_checknum: str
    txn_credit: str
    txn_date: str
    txn_date_match_window_0: str
    txn_date_match_window_1: str
    txn_debit: str
    txn_details: str
    txn_filter_all: str
    txn_filter_cleared: str
    txn_filter_combined: str
    txn_filter_confirmed: str
    txn_filter_divided: str
    txn_filter_last30days: str
    txn_filter_last60days: str
    txn_filter_new: str
    txn_filter_none: str
    txn_filter_thismonth: str
    txn_filter_thisyear: str
    txn_filter_uncleared: str
    txn_limit_info_msg: str
    txn_limit_msg2: str
    txn_memo: str
    txn_numsplits: str
    txn_originally: str
    txn_payee: str
    txn_rate: str
    txn_split_error_a: str
    txn_status: str
    txn_tax_date: str
    type: str
    unable_to_read_file: str
    unable_to_set_laf: str
    unable_to_update_extension_info: str
    unable_to_update_passphrase: str
    unclear_all: str
    uncleared: str
    unconfirmed_total: str
    unconfirmed_txns: str
    under_mnemonic: str
    under_text: str
    undo_add_item: str
    undo_add_items: str
    undo_add_txn: str
    undo_add_txns: str
    undo_del_item: str
    undo_del_items: str
    undo_del_txn: str
    undo_del_txns: str
    undo_mod_item: str
    undo_mod_items: str
    undo_mod_txn: str
    undo_mod_txns: str
    unknown: str
    unknown_file_type: str
    unknown_txn_correction: str
    unknown_txn_type: str
    unmerge_txn: str
    unmerge_txn_desc: str
    unmerge_txns_desc: str
    unregistered: str
    unsigned_ext_uninstall: str
    unsigned_ext_warning_short: str
    untitled: str
    up: str
    up_to_date_msg: str
    upcoming: str
    upcoming_items: str
    upcoming_pmt: str
    update: str
    update_all: str
    update_available_msg: str
    update_dont_check: str
    update_ext_msg: str
    update_from: str
    update_graph_tip: str
    update_report_tip: str
    updateable_extensions: str
    updater: str
    upgrade_win_title: str
    upgrading_data___: str
    url: str
    use_bank_clearance_dates: str
    use_default_settings: str
    use_proxy: str
    use_tax_related: str
    use_vat: str
    username: str
    vat_acct: str
    vat_config_exp: str
    vat_pct: str
    vat_txns_editor: str
    vat_txns_exp: str
    vendor: str
    vendor_url: str
    version: str
    view: str
    voucher_checks: str
    waiting_for_authorization: str
    warning: str
    warning_mnemonic: str
    warning_text: str
    web_browser: str
    web_view: str
    wed_s: str
    week: str
    welcome_create_file: str
    welcome_create_file_desc: str
    welcome_get_help: str
    welcome_get_help_desc: str
    welcome_import_file: str
    welcome_import_file_desc: str
    welcome_import_qem: str
    welcome_import_qem_desc: str
    welcome_subscribe: str
    welcome_subscribe_desc: str
    welcome_to_xxx: str
    welcome_version: str
    will_process: str
    window: str
    window_menu: str
    windows_laf: str
    wrong_encryption_password_or_data_version: str
    xtnsns: str
    year: str
    year_to_date: str
    yes: str
    yes_emails: str
    zero_bal_asof_tip: str
    zero_bal_preview_clear_tip: str
    zero_bal_preview_tip: str
    zero_bond: str
    zero_value: str
    zip: str
    
    def __init__(self) -> None: ...
    
    def getKeys(self) -> typing.Set[str]: ...
    
    @staticmethod
    def getSingleton() -> 'MDStrings': ...
    
    def getString(self, s: str, s2: str) -> str: ...
    
    def loadFromInfo(self, c: com.infinitekind.util.StreamTable) -> None: ...
    
    def loadFromStream(self, j: java.io.InputStream) -> None: ...
    
    @staticmethod
    def main(t: typing.List[str]) -> None: ...
    
    @staticmethod
    def mainPrintCodeForStrings(t: typing.List[str]) -> None: ...
    
    
class MDURLUtil:
    def __init__(self) -> None: ...
    
    @staticmethod
    def getBoolean(d: dict, s: str, b: bool) -> bool: ...
    
    @staticmethod
    def getDate(d: dict, s: str, i: int) -> int: ...
    
    @staticmethod
    def getInt(d: dict, s: str, i: int) -> int: ...
    
    @staticmethod
    def makeLink(j: javax.swing.JLabel, j2: javax.swing.Action) -> javax.swing.JLabel: ...
    
    @staticmethod
    def parseParams(s: str) -> com.infinitekind.tiksync.SyncRecord: ...
    
    @staticmethod
    def putDate(d: dict, s: str, i: int) -> None: ...
    
    
class MDUndoManager(javax.swing.undo.UndoManager, com.infinitekind.moneydance.model.UndoManagerInterface):
    def __init__(self, moneydanceGUI: 'MoneydanceGUI') -> None: ...
    
    def addEdit(self, j: javax.swing.undo.UndoableEdit) -> bool: ...
    
    def addItem(self, c: com.infinitekind.moneydance.model.MoneydanceSyncableItem) -> com.infinitekind.moneydance.model.MoneydanceSyncableItem: ...
    
    def addItems(self, t: typing.List[com.infinitekind.moneydance.model.MoneydanceSyncableItem]) -> typing.List[com.infinitekind.moneydance.model.MoneydanceSyncableItem]: ...
    
    def deleteItem(self, c: com.infinitekind.moneydance.model.MoneydanceSyncableItem) -> None: ...
    
    def deleteItems(self, t: typing.List[com.infinitekind.moneydance.model.MoneydanceSyncableItem]) -> None: ...
    
    def modifyItem(self, c: com.infinitekind.moneydance.model.MoneydanceSyncableItem, c2: com.infinitekind.moneydance.model.MoneydanceSyncableItem) -> None: ...
    
    def modifyItems(self, t: typing.List[com.infinitekind.moneydance.model.MoneydanceSyncableItem], t2: typing.List[com.infinitekind.moneydance.model.MoneydanceSyncableItem]) -> None: ...
    
    
class MDWindowListener:
    def __init__(self) -> None: ...
    
    def windowAdded(self, secondaryWindow: SecondaryWindow) -> None: ...
    
    def windowRemoved(self, secondaryWindow: SecondaryWindow) -> None: ...
    
    
class MainFrame(SecondaryFrame, com.infinitekind.moneydance.model.MDFileListener):
    pass
    
class MainMenu('java.awt.event.ActionListener', com.moneydance.apps.md.controller.PreferencesListener, com.moneydance.apps.md.controller.ModuleListener):
    acctDeleteAction: MDAction
    acctEditAction: MDAction
    acctNewAction: MDAction
    clearRecentFilesAction: MDAction
    confirmSelectedTxnsAction: MDAction
    debugResetMenu: MDAction
    downloadAllAction: MDAction
    downloadTxnsAction: MDAction
    editAdvancedFindAction: MDAction
    editCopyAction: javax.swing.Action
    editCutAction: javax.swing.Action
    editFindAction: MDAction
    editPasteAction: javax.swing.Action
    editSelectAllAction: javax.swing.Action
    fileArchiveAction: MDAction
    fileEncryptionAction: MDAction
    fileExportAction: MDAction
    fileImportBackupAction: MDAction
    fileImportMDAction: MDAction
    fileNewAction: MDAction
    fileOpenOtherAction: MDAction
    filePreferencesAction: MDAction
    fileQuitAction: MDAction
    fileSaveAction: MDAction
    fileSaveBackupAction: MDAction
    fileSyncingAction: MDAction
    forgetPasswdsAction: MDAction
    helpAboutAction: MDAction
    helpCheckForUpdatesAction: MDAction
    helpConsoleAction: MDAction
    helpLicenseAction: MDAction
    helpRegisterAction: MDAction
    helpShowArchiveAction: MDAction
    helpShowDocsFolderAction: MDAction
    helpSupportAction: MDAction
    manageExtsAction: MDAction
    minimizeWindowAction: MDAction
    moneybotAction: MDAction
    moneybotKeystrokeAction: MDAction
    newTxnAction: MDAction
    onlineMDPlusAction: MDAction
    openWebsiteAction: MDAction
    printChecksAction: MDAction
    printSetupAction: MDAction
    printTxnsAction: MDAction
    reconcileAction: MDAction
    redoAction: MDAction
    sendOnlineBPAction: MDAction
    setupOnlineAccountMapAction: MDAction
    setupOnlineAction: MDAction
    setupOnlineBPAction: MDAction
    showOnlineBPAction: MDAction
    showWelcomeScreenAction: MDAction
    toggleSourceListAction: MDAction
    toolsAddressBookAction: MDAction
    toolsBudgetAction: MDAction
    toolsCOAAction: MDAction
    toolsCategoriesAction: MDAction
    toolsCurrencyAction: MDAction
    toolsExpensesVATEditorAction: MDAction
    toolsLoanCalcAction: MDAction
    toolsNormalCalcAction: MDAction
    toolsRemindersAction: MDAction
    toolsReportsAction: MDAction
    toolsSecuritiesAction: MDAction
    toolsTranslateCurrencyAction: MDAction
    toolsVATTxnsAction: MDAction
    undoAction: MDAction
    viewDBBudget: MDAction
    viewDBNetWorth: MDAction
    viewDBNothing: MDAction
    viewHomeAction: MDAction
    viewSourceListItem: javax.swing.JMenuItem
    
    def __init__(self, moneydanceGUI: 'MoneydanceGUI', secondaryFrame: SecondaryFrame) -> None: ...
    
    def actionPerformed(self, j: 'java.awt.event.ActionEvent') -> None: ...
    
    def createAccount(self) -> None: ...
    
    def deleteAccount(self) -> None: ...
    
    def editAccount(self) -> None: ...
    
    def goneAway(self) -> None: ...
    
    def moduleListUpdated(self) -> None: ...
    
    def preferencesUpdated(self) -> None: ...
    
    def updateOpenFilesMenu(self) -> None: ...
    
    def updateWindows(self) -> None: ...
    
    def windowAdded(self, secondaryWindow: SecondaryWindow) -> None: ...
    
    def windowRemoved(self, secondaryWindow: SecondaryWindow) -> None: ...
    
    
class MigrateFileWindow(SecondaryDialog):
    pass
    
class ModuleInfoWindow(SecondaryDialog, OKButtonListener):
    pass
    
class MoneydanceGUI(com.moneydance.apps.md.view.MoneydanceUI, com.moneydance.apps.md.controller.PreferencesListener, java.lang.Runnable, com.moneydance.security.SecretKeyCallback):
    ACCELERATOR_MASK = 4
    ACCELERATOR_MASK_STR = u'\u2318'
    drawMacNative = True
    isLinux = False
    isMac = True
    isWindows = False
    javaVersion = 0
    
    def __init__(self, c: com.moneydance.apps.md.controller.Main) -> None: ...
    
    def addWindowListener(self, mDWindowListener: MDWindowListener) -> None: ...
    
    def adjustWindow(self, j: java.awt.Window, j2: java.awt.Component, j3: java.awt.Dimension, s: str, j4: java.awt.Dimension) -> None: ...
    
    def applyButtonBarProperties(self, j: javax.swing.AbstractButton) -> None: ...
    
    def applyFilterBarProperties(self, j: javax.swing.AbstractButton) -> None: ...
    
    def applyToolbarButtonProperties(self, j: javax.swing.AbstractButton) -> None: ...
    
    def archiveFile(self, j: java.awt.Frame) -> None: ...
    
    def askForAccountBookNameToSave(self) -> java.io.File: ...
    
    def askForAccountFileToLoad(self, j: java.awt.Frame) -> java.io.File: ...
    
    def askForAccountFileToSave(self) -> java.io.File: ...
    
    def askForInput(self, s: str, s2: str, s3: str, b: bool) -> str: ...
    
    def askQuestion(self, s: str) -> bool: ...
    
    def autocommitReminders(self) -> None: ...
    
    def beep(self) -> None: ...
    
    def calculateFontScale(self, j: java.awt.Graphics2D) -> float: ...
    
    def closeBotInterface(self) -> None: ...
    
    def createAccount(self, c: com.infinitekind.moneydance.model.Account, j: java.awt.Component) -> None: ...
    
    def dataFileOpened(self, c: com.moneydance.apps.md.controller.AccountBookWrapper) -> bool: ...
    
    def deleteAccount(self, c: com.infinitekind.moneydance.model.Account, j: java.awt.Frame) -> bool: ...
    
    def deleteAccountAndAllReferences(self, c: com.infinitekind.moneydance.model.Account) -> None: ...
    
    def displayReferenceObject(self, o: object) -> None: ...
    
    def doImport(self, c: com.moneydance.apps.md.controller.fileimport.FileImporter, j: java.io.InputStream) -> bool: ...
    
    def doNetSync(self) -> None: ...
    
    def editAccount(self, c: com.infinitekind.moneydance.model.Account) -> None: ...
    
    def editCurrencies(self, j: java.awt.Frame) -> None: ...
    
    def editCurrency(self, c: com.infinitekind.moneydance.model.CurrencyType) -> None: ...
    
    def editPreferences(self) -> None: ...
    
    def editSecurities(self, j: java.awt.Frame) -> None: ...
    
    def exit(self) -> None: ...
    
    def exportFile(self, j: java.awt.Frame) -> None: ...
    
    def getAlertController(self) -> AlertController: ...
    
    def getBotInterface(self) -> bot.PythonInterface: ...
    
    def getColors(self) -> MDColors: ...
    
    def getCurrentAccount(self) -> com.infinitekind.moneydance.model.Account: ...
    
    def getCurrentAccounts(self) -> com.moneydance.apps.md.controller.AccountBookWrapper: ...
    
    def getCurrentBook(self) -> com.infinitekind.moneydance.model.AccountBook: ...
    
    def getCurrentTheme(self) -> theme.ThemeInfo: ...
    
    def getFileChooser(self, j: java.awt.Frame, s: str, i: int, j2: java.io.FilenameFilter, t: typing.List[str]) -> java.awt.FileDialog: ...
    
    def getFileImporter(self, j: java.io.File) -> com.moneydance.apps.md.controller.fileimport.FileImporter: ...
    
    def getFileToSave(self, j: java.awt.Frame, s: str, s2: str, b: bool) -> java.io.File: ...
    
    @staticmethod
    def getFileWithMDExtension(j: java.io.File) -> java.io.File: ...
    
    def getFirstMainFrame(self) -> MainFrame: ...
    
    def getFonts(self) -> MDFonts: ...
    
    def getHTMLForTxn(self, c: com.infinitekind.moneydance.model.AbstractTxn) -> str: ...
    
    def getIcon(self, s: str) -> javax.swing.Icon: ...
    
    def getImage(self, s: str) -> java.awt.Image: ...
    
    def getImages(self) -> MDImages: ...
    
    def getMainFrameCount(self) -> int: ...
    
    def getMostActiveAccountPanel(self) -> AccountPanel: ...
    
    def getOnlineManager(self) -> 'OnlineManager': ...
    
    def getPassphrase(self, s: str) -> str: ...
    
    def getPlusController(self) -> MDPlusController: ...
    
    def getPopUpProgressMonitor(self, s: str) -> com.moneydance.apps.md.controller.StatusMonitor: ...
    
    def getPreferences(self) -> com.moneydance.apps.md.controller.UserPreferences: ...
    
    def getResources(self) -> com.moneydance.apps.md.view.resources.Resources: ...
    
    def getSecondaryWindows(self) -> typing.List[SecondaryWindow]: ...
    
    def getSecretKeyCallback(self, c: com.moneydance.apps.md.controller.AccountBookWrapper) -> com.moneydance.security.SecretKeyCallback: ...
    
    def getSounds(self) -> MDSounds: ...
    
    def getStr(self, s: str) -> str: ...
    
    def getStrings(self) -> MDStrings: ...
    
    def getSuspendRefreshes(self) -> bool: ...
    
    def getSyncManager(self) -> com.moneydance.apps.md.controller.sync.SyncManager: ...
    
    def getTopLevelFrame(self) -> javax.swing.JFrame: ...
    
    def getUndoManager(self) -> MDUndoManager: ...
    
    def go(self) -> None: ...
    
    def importFile(self, s: str) -> None: ...
    
    def importFiles(self, t: typing.List[java.io.File]) -> None: ...
    
    def initializePythonInterpreter(self, o: 'org.python.util.PythonInterpreter') -> None: ...
    
    def makeButtonBarButton(self, j: javax.swing.AbstractAction) -> javax.swing.JButton: ...
    
    def makeToolbarButton(self, mDAction: MDAction) -> javax.swing.JButton: ...
    
    def moveTransaction(self, c: com.infinitekind.moneydance.model.AbstractTxn, j: java.awt.Component) -> None: ...
    
    def newFile(self, j: java.awt.Frame) -> None: ...
    
    def openAccountBook(self, c: com.moneydance.apps.md.controller.AccountBookWrapper) -> bool: ...
    
    def openBackup(self, j: java.awt.Frame) -> bool: ...
    
    def openExternalFile(self, j: java.awt.Frame) -> bool: ...
    
    def openFile(self, j: java.io.File) -> bool: ...
    
    def payBillsOnline(self, accountDetailPanel: AccountDetailPanel) -> None: ...
    
    def preferencesUpdated(self) -> None: ...
    
    def prepareToOpenData(self, c: com.moneydance.apps.md.controller.AccountBookWrapper) -> com.moneydance.apps.md.controller.AccountBookWrapper: ...
    
    def registerSecondaryWindow(self, secondaryWindow: SecondaryWindow) -> None: ...
    
    def removeWindowListener(self, mDWindowListener: MDWindowListener) -> None: ...
    
    def reportError(self, j: java.lang.Throwable) -> None: ...
    
    def resetPythonInterpreter(self, o: 'org.python.util.PythonInterpreter') -> None: ...
    
    def run(self) -> None: ...
    
    def saveCurrentAccount(self) -> bool: ...
    
    def saveToBackup(self, secondaryFrame: SecondaryFrame) -> None: ...
    
    def secondaryWindowFinished(self, secondaryWindow: SecondaryWindow) -> None: ...
    
    def selectAccount(self, c: com.infinitekind.moneydance.model.Account) -> bool: ...
    
    def selectAccountNewWindow(self, c: com.infinitekind.moneydance.model.Account) -> None: ...
    
    def setDefaultCursor(self, j: java.awt.Frame) -> None: ...
    
    def setStatus(self, s: str, f: float) -> None: ...
    
    def setSuspendRefresh(self, b: bool) -> None: ...
    
    def setVerifier(self, c: com.moneydance.security.SecretKeyVerifier) -> None: ...
    
    def setWaitCursor(self, j: java.awt.Frame) -> None: ...
    
    def setupOnlineBanking(self, accountDetailPanel: AccountDetailPanel) -> None: ...
    
    def setupOnlineBillpay(self, accountDetailPanel: AccountDetailPanel) -> None: ...
    
    def setupScreenshots(self) -> None: ...
    
    def showAbout(self) -> None: ...
    
    def showAccount(self, c: com.infinitekind.moneydance.model.Account) -> AccountDetailPanel: ...
    
    def showAccountWebsite(self, accountDetailPanel: AccountDetailPanel) -> None: ...
    
    def showAddressBook(self, j: java.awt.Frame) -> None: ...
    
    def showBudget(self, s: str) -> None: ...
    
    def showBudgetTool(self) -> None: ...
    
    def showCOA(self) -> None: ...
    
    def showCalculator(self, j: java.awt.Frame) -> None: ...
    
    def showCategories(self) -> None: ...
    
    def showDebugOFXWindow(self) -> None: ...
    
    def showDownloadedTxns(self, c: com.infinitekind.moneydance.model.Account) -> None: ...
    
    def showErrorMessage(self, s: str) -> None: ...
    
    def showHelp(self) -> None: ...
    
    def showImportUI(self, s: str, c: com.infinitekind.moneydance.model.Account) -> None: ...
    
    def showInfoMessage(self, s: str) -> None: ...
    
    def showInternetURL(self, s: str) -> None: ...
    
    def showLoanTools(self) -> None: ...
    
    def showMainView(self) -> None: ...
    
    def showMoneydancePlus(self, secondaryFrame: SecondaryFrame, b: bool) -> None: ...
    
    def showObject(self, c: com.infinitekind.moneydance.model.MoneydanceSyncableItem) -> None: ...
    
    def showOnlineBills(self, accountDetailPanel: AccountDetailPanel) -> None: ...
    
    def showOnlineMail(self, c: com.infinitekind.moneydance.model.OnlineService, c2: com.infinitekind.moneydance.model.Account) -> None: ...
    
    def showOnlinePayees(self, accountDetailPanel: AccountDetailPanel) -> None: ...
    
    def showOtherSideOfTxn(self, c: com.infinitekind.moneydance.model.AbstractTxn) -> None: ...
    
    def showPreferences(self) -> None: ...
    
    def showPrintChecksWindow(self, j: java.awt.Frame, c: com.infinitekind.moneydance.model.Account) -> None: ...
    
    def showPythonConsole(self) -> None: ...
    
    def showRawItemDetails(self, c: com.infinitekind.moneydance.model.MoneydanceSyncableItem, j: java.awt.Component) -> None: ...
    
    def showReminders(self) -> None: ...
    
    def showReport(self, c: com.infinitekind.moneydance.model.ReportSpec) -> None: ...
    
    def showReports(self) -> None: ...
    
    def showRestoreFromBackupOptions(self, c: com.infinitekind.moneydance.model.AccountBook) -> java.io.File: ...
    
    def showSearch(self) -> None: ...
    
    def showSupport(self) -> None: ...
    
    def showTxn(self, c: com.infinitekind.moneydance.model.AbstractTxn) -> None: ...
    
    def showTxnFromURI(self, s: str) -> None: ...
    
    def showTxnInNewWindow(self, c: com.infinitekind.moneydance.model.AbstractTxn) -> None: ...
    
    def showTxnSearch(self) -> None: ...
    
    def showTxnXML(self, c: com.infinitekind.moneydance.model.AbstractTxn, j: java.awt.Component) -> None: ...
    
    def showUpcomingReminders(self) -> None: ...
    
    def showVATConfig(self, j: java.awt.Frame) -> None: ...
    
    def showVATTxns(self, j: java.awt.Frame) -> None: ...
    
    def shutdownApp(self, b: bool) -> bool: ...
    
    def shutdownCompleted(self) -> None: ...
    
    def storeWindowSettings(self, j: java.awt.Window, s: str) -> None: ...
    
    def strings(self) -> MDStrings: ...
    
    def translateCurrencies(self, j: java.awt.Frame) -> None: ...
    
    def unshowHelp(self) -> None: ...
    
    def updateOnline(self, accountDetailPanel: AccountDetailPanel) -> None: ...
    
    def updateOpenFilesMenus(self) -> None: ...
    
    def updateUndoMenus(self) -> None: ...
    
    
    class FileExtensionFilter:
        def __init__(self) -> None: ...
        
        def accept(self, j: java.io.File) -> bool: ...
        
        def getDescription(self) -> str: ...
        
        
    
class MoneydanceLAF:
    debugBorder = 'javax.swing.border.LineBorder'
    emptyBorder = 'javax.swing.border.EmptyBorder'
    filterBarButtonUIBoth = 'com.moneydance.apps.md.view.gui.FlatButtonUI'
    filterBarButtonUILeft = 'com.moneydance.apps.md.view.gui.FlatButtonUI'
    filterBarButtonUIMiddle = 'com.moneydance.apps.md.view.gui.FlatButtonUI'
    filterBarButtonUIRight = 'com.moneydance.apps.md.view.gui.FlatButtonUI'
    homePageBorder = 'com.moneydance.apps.md.view.gui.HomePageBorder'
    homePageInsetBorder = 'com.moneydance.apps.md.view.gui.HomePageBorder'
    lineBorder = 'com.moneydance.awt.FlexLineBorder'
    ovalBorder = 'com.moneydance.apps.md.view.gui.OvalBorder'
    zeroBorder = 'javax.swing.border.EmptyBorder'
    
    def __init__(self) -> None: ...
    
    @staticmethod
    def applyButtonBarProperties(j: javax.swing.AbstractButton) -> None: ...
    
    @staticmethod
    def applyDebugBorder(j: javax.swing.JComponent) -> javax.swing.JComponent: ...
    
    @staticmethod
    def applyFilterBarProperties(j: javax.swing.AbstractButton) -> None: ...
    
    @staticmethod
    def applyRegisterUI(j: javax.swing.JComponent) -> None: ...
    
    @staticmethod
    def applyToolbarButtonProperties(j: javax.swing.AbstractButton) -> None: ...
    
    @staticmethod
    def containsComboBox(j: javax.swing.JComponent) -> bool: ...
    
    @staticmethod
    def fixForMac(j: javax.swing.JButton) -> javax.swing.JButton: ...
    
    @staticmethod
    def fixForMacRecursive(j: javax.swing.JComponent) -> None: ...
    
    @staticmethod
    def getPopupDisplayPoint(j: java.awt.Dimension, j2: java.awt.Component) -> java.awt.Point: ...
    
    @staticmethod
    def installUIRecursive(j: javax.swing.JComponent) -> None: ...
    
    @staticmethod
    def makeBackgroundsClear(j: javax.swing.JComponent) -> javax.swing.JComponent: ...
    
    @staticmethod
    def makeButtonBarButton(j: javax.swing.AbstractAction) -> javax.swing.JButton: ...
    
    @staticmethod
    def makeCloseButton(mDImages: MDImages) -> javax.swing.JButton: ...
    
    @staticmethod
    def makePlainButton(j: javax.swing.Action) -> javax.swing.JButton: ...
    
    @staticmethod
    def makeToolbarButton(mDAction: MDAction) -> javax.swing.JButton: ...
    
    @staticmethod
    def makeWelcomeButton(mDAction: MDAction) -> javax.swing.JButton: ...
    
    @staticmethod
    def paintPlaceholder(j: java.awt.Graphics, s: str, j2: javax.swing.JTextField) -> None: ...
    
    @staticmethod
    def updateLAFItems(moneydanceGUI: MoneydanceGUI) -> None: ...
    
    
class MonthView(javax.swing.JPanel, com.infinitekind.moneydance.model.ReminderListener):
    pass
    
class NewCheckNumWindow(SecondaryDialog, OKButtonListener, 'java.awt.event.ActionListener'):
    pass
    
class NewFileWizard:
    def __init__(self, j: java.awt.Frame, moneydanceGUI: MoneydanceGUI) -> None: ...
    
    def doIt(self) -> None: ...
    
    
    class SyncFolderType:
        DROPBOX_API = 'Dropbox Connection'
        DROPBOX_FOLDER = 'Dropbox Folder'
        FOLDER = 'Shared Folder'
        ICLOUD_FOLDER = 'iCloud Drive'
        NONE = 'None'
        
        def __init__(self) -> None: ...
        
        def syncMethodID(self) -> str: ...
        
        def toString(self) -> str: ...
        
        @staticmethod
        def valueOf(s: str) -> str: ...
        
        @staticmethod
        def values() -> typing.List[str]: ...
        
        
    
class NewStockSplitWin(SecondaryDialog, OKButtonListener):
    pass
    
class OFXAuthPanel(javax.swing.JPanel):
    pass
    
class OFXChangePINWindow(SecondaryDialog, OKButtonListener):
    pass
    
class OFXConnectionInfoPanel(javax.swing.JPanel):
    pass
    
class OFXFIInfoWindow(SecondaryDialog, 'java.awt.event.ActionListener'):
    pass
    
class OFXTransferPanel(javax.swing.JPanel):
    pass
    
class OKButtonPanel(javax.swing.JPanel):
    pass
    
class OKButtonWindow(SecondaryDialog, OKButtonListener):
    pass
    
class OLBAuthWin(SecondaryDialog, OKButtonListener):
    pass
    
class OnlineAccountMapPanel(javax.swing.JPanel):
    pass
    
class OnlineManager:
    AUTHENTICATION_CACHE_PREFIX = u''
    
    def __init__(self, moneydanceGUI: MoneydanceGUI) -> None: ...
    
    def canDownloadAccount(self, c: com.infinitekind.moneydance.model.Account) -> bool: ...
    
    def changePIN(self, c: com.infinitekind.moneydance.model.OnlineService, c2: com.infinitekind.moneydance.online.OFXAuthInfo, s: str) -> bool: ...
    
    def clearAuthenticationCache(self) -> None: ...
    
    def completelyDestroyOldDownloadedTxns(self, c: com.infinitekind.moneydance.model.AccountBook) -> None: ...
    
    @staticmethod
    def defaultMessageSetForAccount(c: com.infinitekind.moneydance.model.Account) -> int: ...
    
    def downloadAllTxns(self, accountPanel: AccountPanel, c: com.infinitekind.moneydance.model.Account) -> None: ...
    
    def downloadTransactions(self, c: com.infinitekind.moneydance.model.Account) -> None: ...
    
    def editPayment(self, c: com.infinitekind.moneydance.model.Account, c2: com.infinitekind.moneydance.model.OnlinePayment) -> com.infinitekind.moneydance.model.OnlinePayment: ...
    
    def getConnection(self, c: com.infinitekind.moneydance.model.OnlineService) -> com.moneydance.apps.md.controller.olb.OLBConnection: ...
    
    def getTxnMerger(self, c: com.infinitekind.moneydance.model.Account) -> com.infinitekind.moneydance.online.OnlineTxnMerger: ...
    
    def getUIProxy(self, accountPanel: AccountPanel) -> DefaultOnlineUIProxy: ...
    
    def mergeOldDownloadedTxns(self, c: com.infinitekind.moneydance.model.AccountBook) -> None: ...
    
    def payBillsOnline(self, c: com.infinitekind.moneydance.model.Account, j: java.awt.Frame) -> None: ...
    
    def processDownloadedTxns(self, c: com.infinitekind.moneydance.model.Account) -> None: ...
    
    def refreshBills(self, c: com.infinitekind.moneydance.model.OnlineService, c2: com.infinitekind.moneydance.model.Account) -> None: ...
    
    def refreshMail(self, c: com.infinitekind.moneydance.model.OnlineService, c2: com.infinitekind.moneydance.model.Account) -> None: ...
    
    def removePayee(self, c: com.infinitekind.moneydance.model.Account, c2: com.infinitekind.moneydance.model.OnlinePayee) -> bool: ...
    
    def removePayment(self, c: com.infinitekind.moneydance.model.Account, c2: com.infinitekind.moneydance.model.OnlinePayment) -> None: ...
    
    def showBillsOnline(self, c: com.infinitekind.moneydance.model.Account) -> None: ...
    
    def showOnlineMail(self, c: com.infinitekind.moneydance.model.OnlineService, c2: com.infinitekind.moneydance.model.Account) -> None: ...
    
    def showPayeesOnline(self, c: com.infinitekind.moneydance.model.Account) -> None: ...
    
    def submitNewMail(self, c: com.infinitekind.moneydance.model.OnlineService, c2: com.infinitekind.moneydance.model.Account, c3: com.infinitekind.moneydance.model.OnlineMail) -> bool: ...
    
    def submitNewPayee(self, c: com.infinitekind.moneydance.model.Account, c2: com.infinitekind.moneydance.model.OnlinePayee) -> bool: ...
    
    def submitNewPayment(self, c: com.infinitekind.moneydance.model.Account, c2: com.infinitekind.moneydance.model.OnlinePayment, c3: com.infinitekind.moneydance.model.OnlinePayee) -> com.infinitekind.moneydance.model.OnlinePayment: ...
    
    def syncPayments(self, c: com.infinitekind.moneydance.model.OnlineService, mDAccountProxy: MDAccountProxy) -> bool: ...
    
    def updateAvailableAccounts(self, c: com.infinitekind.moneydance.model.OnlineService) -> bool: ...
    
    def updatePayee(self, c: com.infinitekind.moneydance.model.Account, c2: com.infinitekind.moneydance.model.OnlinePayee) -> bool: ...
    
    def updateServiceInfo(self, c: com.infinitekind.moneydance.model.OnlineService) -> None: ...
    
    
class OnlineTxnListModel(javax.swing.AbstractListModel, com.infinitekind.moneydance.model.OnlineTxnListener):
    pass
    
class OnlineUpdateTxnsWindow(SecondaryDialog, 'java.awt.event.ActionListener', javax.swing.event.ListSelectionListener):
    pass
    
class OpenArchiveWindow(SecondaryDialog):
    pass
    
class OpenFileAction(MDAction):
    pass
    
class OvalBorder(javax.swing.border.Border):
    def __init__(self) -> None: ...
    
    def getBackgroundColor(self) -> java.awt.Color: ...
    
    def getBorderInsets(self, j: java.awt.Component) -> java.awt.Insets: ...
    
    def getOvalColor(self) -> java.awt.Color: ...
    
    def isBorderOpaque(self) -> bool: ...
    
    def paintBorder(self, j: java.awt.Component, j2: java.awt.Graphics, i: int, i2: int, i3: int, i4: int) -> None: ...
    
    def setOvalColor(self, j: java.awt.Color, j2: java.awt.Color) -> None: ...
    
    
class PassphraseCallbackProxy(com.moneydance.security.SecretKeyCallback):
    def __init__(self) -> None: ...
    
    def getPassphrase(self, s: str) -> str: ...
    
    def setVerifier(self, c: com.moneydance.security.SecretKeyVerifier) -> None: ...
    
    
class PasswordDialog(SecondaryDialog, OKButtonListener, 'java.awt.event.ActionListener'):
    pass
    
class PercentGraphLabeler(com.moneydance.awt.graph.ValueLabeler):
    def __init__(self, moneydanceGUI: MoneydanceGUI) -> None: ...
    
    def getLabelForValue(self, f: float, i: int) -> str: ...
    
    def preferencesUpdated(self) -> None: ...
    
    
class PlainButton(javax.swing.JButton):
    pass
    
class PointsVsRate(javax.swing.JPanel, 'java.awt.event.ActionListener', 'java.awt.event.FocusListener'):
    pass
    
class PopUpStatusMonitor(com.moneydance.apps.md.controller.StatusMonitor):
    def __init__(self, j: java.awt.Component, s: str) -> None: ...
    
    def isCanceled(self) -> bool: ...
    
    def setPercentComplete(self, f: float) -> None: ...
    
    def setStatus(self, s: str) -> None: ...
    
    
class Popover:
    def __init__(self, moneydanceGUI: MoneydanceGUI, j: java.awt.Window, j2: javax.swing.JComponent) -> None: ...
    
    def getPopupComponent(self) -> str: ...
    
    def goAway(self) -> bool: ...
    
    def goingAway(self) -> bool: ...
    
    def goneAway(self) -> None: ...
    
    def isDontShowAnchor(self) -> bool: ...
    
    def isNowVisible(self) -> None: ...
    
    def isVisible(self) -> bool: ...
    
    def setAllowFocusing(self, b: bool) -> None: ...
    
    def setAllowMoving(self, b: bool) -> None: ...
    
    def setAnchorPosition(self, s: str) -> None: ...
    
    def setContentPane(self, j: javax.swing.JComponent) -> None: ...
    
    def setDontShowAnchor(self, b: bool) -> None: ...
    
    def setSticky(self, b: bool) -> None: ...
    
    def showFromComponent(self, j: javax.swing.JComponent) -> None: ...
    
    def showFromRect(self, j: java.awt.Rectangle) -> None: ...
    
    
    class PopoverAnchorPosition:
        ANY = 'ANY'
        EAST = 'EAST'
        NORTH = 'NORTH'
        SOUTH = 'SOUTH'
        WEST = 'WEST'
        
        def __init__(self) -> None: ...
        
        def getSwingConstant(self) -> int: ...
        
        @staticmethod
        def valueOf(s: str) -> str: ...
        
        @staticmethod
        def values() -> typing.List[str]: ...
        
        
    class PopupDialog:
        pass
        
    class Type:
        DIALOG = 'DIALOG'
        POPUP = 'POPUP'
        WINDOW = 'WINDOW'
        
        def __init__(self) -> None: ...
        
        @staticmethod
        def valueOf(s: str) -> str: ...
        
        @staticmethod
        def values() -> typing.List[str]: ...
        
        
    
class PopoverBorder(javax.swing.border.Border):
    def __init__(self, moneydanceGUI: MoneydanceGUI) -> None: ...
    
    def getBorderInsets(self, j: java.awt.Component) -> java.awt.Insets: ...
    
    def isBorderOpaque(self) -> bool: ...
    
    def paintBorder(self, j: java.awt.Component, j2: java.awt.Graphics, i: int, i2: int, i3: int, i4: int) -> None: ...
    
    def setAnchorPosition(self, i: int) -> None: ...
    
    
class PopupWindow(javax.swing.JDialog):
    pass
    
class PortfolioPanel(AccountDetailPanel, com.infinitekind.moneydance.model.TransactionListener, com.infinitekind.moneydance.model.AccountListener, com.infinitekind.moneydance.model.CurrencyListener, com.moneydance.awt.JLinkListener):
    pass
    
class PreReconcilerWindow(SecondaryDialog, OKButtonListener, 'java.awt.event.ActionListener'):
    pass
    
class PreferencesWindow(SecondaryDialog, OKButtonListener, 'java.awt.event.ActionListener', javax.swing.event.ChangeListener, 'java.awt.event.ItemListener', checks.CheckListener):
    pass
    
class PrintChecksWindow(SecondaryDialog, 'java.awt.event.ActionListener', 'java.awt.event.ItemListener'):
    pass
    
class ProcessIndicator:
    def __init__(self, moneydanceGUI: MoneydanceGUI) -> None: ...
    
    def invokeTask(self, j: java.lang.Runnable, s: str) -> None: ...
    
    
class QIFImportSettingsWindow(SecondaryDialog, OKButtonListener):
    pass
    
class QuestionDialog(SecondaryDialog, OKButtonListener):
    pass
    
class RateEditor(javax.swing.JPanel, 'java.awt.event.ItemListener'):
    pass
    
class RateGraphLabeler(com.moneydance.awt.graph.ValueLabeler):
    def __init__(self, moneydanceGUI: MoneydanceGUI) -> None: ...
    
    def getLabelForValue(self, f: float, i: int) -> str: ...
    
    def preferencesUpdated(self) -> None: ...
    
    
class RatingInfo:
    def __init__(self, c: com.moneydance.apps.md.controller.Main) -> None: ...
    
    def rate(self) -> None: ...
    
    def ratingInfoWasUpdated(self) -> None: ...
    
    def reload(self) -> None: ...
    
    def shouldPrompt(self) -> bool: ...
    
    def stopRemindingMe(self) -> None: ...
    
    def stopRemindingMeForThisVersion(self) -> None: ...
    
    def stopRemindingMeUntilDate(self, i: int) -> None: ...
    
    
    class StopBothering:
        EVER = 'EVER'
        FOR_NOW = 'FOR_NOW'
        THIS_BUILD = 'THIS_BUILD'
        
        def __init__(self) -> None: ...
        
        def code(self) -> int: ...
        
        @staticmethod
        def fromCode(i: int) -> str: ...
        
        @staticmethod
        def valueOf(s: str) -> str: ...
        
        @staticmethod
        def values() -> typing.List[str]: ...
        
        
    
class RecTxnRenderer(AbstractTxnRenderer):
    pass
    
class ReconcilerWindow(SecondaryFrame, AccountInfoListener, 'java.awt.event.ActionListener', com.infinitekind.moneydance.model.TransactionListener, java.lang.Runnable):
    pass
    
class RegTxnRenderer(AbstractTxnRenderer):
    pass
    
class RegisterPrinter(print.MDPrintable):
    def __init__(self, moneydanceGUI: MoneydanceGUI, j: javax.swing.JList, j2: javax.swing.JComponent, s: str) -> None: ...
    
    def doPrintJob(self) -> None: ...
    
    def getSettingsKey(self) -> str: ...
    
    def getTitle(self) -> str: ...
    
    def isLandscape(self) -> bool: ...
    
    def printPage(self, j: java.awt.Graphics2D, i: int, f: float, f2: float, i2: int) -> bool: ...
    
    def usesWholePage(self) -> bool: ...
    
    
class RegisterWindow(SecondaryDialog, OKButtonListener):
    pass
    
class RegistrationNotificationWindow(SecondaryDialog):
    pass
    
class ReminderListModel(javax.swing.AbstractListModel, com.infinitekind.moneydance.model.ReminderListener):
    pass
    
class ReminderTxnEditPanel(javax.swing.JPanel):
    pass
    
class TitledDetailPanel(DisposablePanel, 'java.awt.event.ActionListener'):
    pass
    
class RemindersDetailPanel(TitledDetailPanel, print.MDPrintable):
    pass
    
class RestoreBackupWindow(SecondaryDialog):
    pass
    
class RootAccountDetailPanel(AccountDetailPanel, com.moneydance.apps.md.controller.ViewListener, com.moneydance.apps.md.controller.AppEventListener, com.moneydance.apps.md.controller.ModuleListener):
    pass
    
class RootAccountInfoPanel(AccountInfoPanel):
    pass
    
class ScheduleInfoPanel(javax.swing.JPanel, 'java.awt.event.ActionListener'):
    pass
    
class SearchField(javax.swing.JPanel, 'java.awt.event.ActionListener', javax.swing.event.DocumentListener):
    pass
    
class SearchFieldBorder(javax.swing.border.AbstractBorder):
    def __init__(self) -> None: ...
    
    def getOuterColor(self) -> java.awt.Color: ...
    
    def isBorderOpaque(self) -> bool: ...
    
    def isCancelIconPressed(self) -> bool: ...
    
    def isCancelVisible(self) -> bool: ...
    
    def isOverCancel(self, j: java.awt.Point, j2: java.awt.Component) -> bool: ...
    
    def isOverSearch(self, j: java.awt.Point, j2: java.awt.Component) -> bool: ...
    
    def isSearchIconPressed(self) -> bool: ...
    
    def paintBorder(self, j: java.awt.Component, j2: java.awt.Graphics, i: int, i2: int, i3: int, i4: int) -> None: ...
    
    def setCancelIconPressed(self, b: bool) -> None: ...
    
    def setCancelVisible(self, b: bool) -> None: ...
    
    def setOuterColor(self, j: java.awt.Color) -> None: ...
    
    def setSearchIconPressed(self, b: bool) -> None: ...
    
    
class SearchListener:
    def __init__(self) -> None: ...
    
    def searchUpdated(self, c: com.infinitekind.moneydance.model.TxnSearch) -> None: ...
    
    
class SearchRegTxnListModel(TxnListModel):
    pass
    
class SecurityAccountInfoPanel(AccountInfoPanel, 'java.awt.event.ActionListener'):
    pass
    
class SecurityDetailPanel(AccountDetailPanel, com.infinitekind.moneydance.model.TransactionListener, com.infinitekind.moneydance.model.CurrencyListener, 'java.awt.event.ActionListener', com.infinitekind.moneydance.model.AccountListener, java.lang.Runnable):
    pass
    
class SecurityRenderer(javax.swing.JComponent, javax.swing.ListCellRenderer):
    pass
    
class SecurityTxnRenderer(AbstractTxnRenderer):
    pass
    
class SelectChecksWindow(SecondaryDialog, OKButtonListener):
    pass
    
class ShowUpcomingRemindersWindow(SecondaryDialog, com.infinitekind.moneydance.model.ReminderListener, com.moneydance.awt.JLinkListener):
    pass
    
class TotalListener:
    def __init__(self) -> None: ...
    
    def totalUpdated(self) -> None: ...
    
    
class SplitEditor(SecondaryDialog, TotalListener, 'java.awt.event.ActionListener', java.lang.Runnable):
    pass
    
class SplitPanel(javax.swing.JPanel, 'java.awt.event.KeyListener'):
    pass
    
class TxnEditorInterface:
    def __init__(self) -> None: ...
    
    def getTransactionAmount(self) -> int: ...
    
    def goingAway(self) -> bool: ...
    
    def setCheckNumber(self, s: str) -> None: ...
    
    def setDate(self, i: int) -> None: ...
    
    def setMemo(self, s: str) -> None: ...
    
    def setPayee(self, s: str) -> None: ...
    
    def setTaxDate(self, i: int) -> None: ...
    
    def setValue(self, i: int) -> None: ...
    
    def transactionModified(self) -> bool: ...
    
    
class SplitTxnEditor(AutoCompletable, TxnEditorInterface, javax.swing.JPanel, 'java.awt.event.KeyListener', 'java.awt.event.FocusListener', java.lang.Runnable):
    pass
    
class StatusButton(javax.swing.JComponent, 'java.awt.event.MouseListener', 'java.awt.event.KeyListener', 'java.awt.event.FocusListener', 'java.awt.event.ActionListener'):
    pass
    
class StatusPanel(javax.swing.JPanel):
    pass
    
class StretchableImage:
    def __init__(self, j: java.awt.Image, j2: java.awt.Insets) -> None: ...
    
    def setInsets(self, j: java.awt.Insets) -> None: ...
    
    
class SubAcctSearch(com.infinitekind.moneydance.model.AcctFilter):
    ACTIVE_ACCOUNTS_FILTER = 'com.infinitekind.moneydance.model.AcctFilter$2'
    ACTIVE_CATEGORY_CHOICE_FILTER = 'com.infinitekind.moneydance.model.AcctFilter$9'
    ALL_ACCOUNTS_FILTER = 'com.infinitekind.moneydance.model.AcctFilter$7'
    CATEGORY_CHOICE_FILTER = 'com.infinitekind.moneydance.model.AcctFilter$8'
    CATEGORY_FILTER = 'com.infinitekind.moneydance.model.AcctFilter$6'
    EDITABLE_ACCOUNTS_FILTER = 'com.infinitekind.moneydance.model.AcctFilter$5'
    INACTIVE_ACCOUNTS_FILTER = 'com.infinitekind.moneydance.model.AcctFilter$3'
    NON_CATEGORY_FILTER = 'com.infinitekind.moneydance.model.AcctFilter$1'
    VIEWABLE_ACCOUNTS_FILTER = 'com.infinitekind.moneydance.model.AcctFilter$4'
    
    def __init__(self, c: com.infinitekind.moneydance.model.Account) -> None: ...
    
    def format(self, c: com.infinitekind.moneydance.model.Account) -> str: ...
    
    def getAccount(self) -> com.infinitekind.moneydance.model.Account: ...
    
    def matches(self, c: com.infinitekind.moneydance.model.Account) -> bool: ...
    
    def setAccount(self, c: com.infinitekind.moneydance.model.Account) -> None: ...
    
    
class TagLogic(java.lang.Enum):
    AND = 'AND'
    EXACT = 'EXACT'
    OR = 'OR'
    
    def __init__(self) -> None: ...
    
    @staticmethod
    def fromString(s: str) -> 'TagLogic': ...
    
    def getConfigKey(self) -> str: ...
    
    @staticmethod
    def valueOf(s: str) -> 'TagLogic': ...
    
    @staticmethod
    def values() -> typing.List['TagLogic']: ...
    
    
class TaskIndicator(SecondaryDialog, java.lang.Runnable):
    pass
    
class ToolbarLabel(javax.swing.JLabel):
    pass
    
class TransactionPopup(PopupWindow, AttachmentHolder):
    pass
    
class TransactionSortListener:
    def __init__(self) -> None: ...
    
    def setSortKey(self, c: com.infinitekind.moneydance.model.TxnSortOrder, b: bool) -> None: ...
    
    
class TransferWindow(SecondaryDialog, OKButtonListener):
    pass
    
class TranslateCurrencyWindow(SecondaryDialog, 'java.awt.event.ItemListener', com.infinitekind.moneydance.model.CurrencyListener):
    pass
    
class TxnAccountSearch(com.infinitekind.moneydance.model.TxnSearch):
    def __init__(self, c: com.infinitekind.moneydance.model.Account) -> None: ...
    
    def matches(self, c: com.infinitekind.moneydance.model.Txn) -> bool: ...
    
    def matchesAll(self) -> bool: ...
    
    
class TxnAmountSearch(com.infinitekind.moneydance.model.TxnSearch):
    def __init__(self, f: float) -> None: ...
    
    def matches(self, c: com.infinitekind.moneydance.model.Txn) -> bool: ...
    
    def matchesAll(self) -> bool: ...
    
    
class TxnClearedSearch(com.infinitekind.moneydance.model.TxnSearch):
    def __init__(self, b: bool, b2: bool, b3: bool) -> None: ...
    
    def matches(self, c: com.infinitekind.moneydance.model.Txn) -> bool: ...
    
    def matchesAll(self) -> bool: ...
    
    
class TxnDateSearch(com.infinitekind.moneydance.model.TxnSearch):
    def __init__(self, i: int) -> None: ...
    
    def matches(self, c: com.infinitekind.moneydance.model.Txn) -> bool: ...
    
    def matchesAll(self) -> bool: ...
    
    
class TxnDetailsView:
    def __init__(self, moneydanceGUI: MoneydanceGUI, t: txnreg.TxnRegister) -> None: ...
    
    def dismiss(self) -> bool: ...
    
    def isShowing(self) -> bool: ...
    
    def selectionWasUpdated(self, t: typing.List[com.infinitekind.moneydance.model.AbstractTxn]) -> txnreg.TxnInfoPanel: ...
    
    def setInfoPanels(self, t: typing.List[txnreg.TxnInfoPanel]) -> None: ...
    
    def showDetails(self, j: javax.swing.JComponent, j2: java.awt.Rectangle, t: txnreg.TxnInfoPanel) -> None: ...
    
    def showDetailsInPanel(self, j: javax.swing.JPanel, t: txnreg.TxnInfoPanel) -> None: ...
    
    
class TxnEditor(AutoCompletable, TxnEditorInterface, javax.swing.JPanel, 'java.awt.event.ActionListener', 'java.awt.event.KeyListener', 'java.awt.event.FocusListener'):
    pass
    
class TxnEditorWrapper(javax.swing.JPanel):
    pass
    
class TxnModifier:
    def __init__(self) -> None: ...
    
    def modifyTxn(self, c: com.infinitekind.moneydance.model.AbstractTxn) -> None: ...
    
    
class TxnReminderInfoWindow(SecondaryDialog, OKButtonListener):
    pass
    
class TxnReminderNotificationWindow(SecondaryDialog, 'java.awt.event.ActionListener'):
    pass
    
class TxnSearchConfigPanel(MDFieldPanel, javax.swing.event.DocumentListener, java.beans.PropertyChangeListener):
    pass
    
class TxnSearchWindow(SecondaryFrame, 'java.awt.event.ActionListener'):
    pass
    
class TxnSearcher(java.lang.Runnable):
    def __init__(self, accountRegTxnListModel: AccountRegTxnListModel) -> None: ...
    
    def run(self) -> None: ...
    
    def setSearch(self, c: com.infinitekind.moneydance.model.TxnSearch) -> None: ...
    
    
class TxnTagsSearch(com.infinitekind.moneydance.model.TxnSearch):
    def __init__(self, t: typing.List[str], tagLogic: TagLogic) -> None: ...
    
    def matches(self, c: com.infinitekind.moneydance.model.Txn) -> bool: ...
    
    def matchesAll(self) -> bool: ...
    
    
class TxnWrapper:
    attachment: object
    balance: int
    decorator: txnreg.TxnDecorator
    isFocused: bool
    isSelected: bool
    row: int
    txn: com.infinitekind.moneydance.model.AbstractTxn
    
    def __init__(self) -> None: ...
    
    def hasAttachments(self) -> bool: ...
    
    
class WelcomeWindow(javax.swing.JFrame):
    pass
    
class Wizard(SecondaryDialog):
    pass
    
class WizardPane:
    def __init__(self) -> None: ...
    
    def activated(self, wizard: Wizard) -> None: ...
    
    def getPanel(self) -> javax.swing.JComponent: ...
    
    def goneAway(self) -> None: ...
    
    def isLastPane(self) -> bool: ...
    
    def storeValues(self) -> 'WizardPane': ...
    
    
