import typing
import com.infinitekind.moneydance.model
import com.moneydance.apps.md.controller
import com.moneydance.apps.md.view.gui.moneyforesight.forecast.accountmarker
import com.moneydance.apps.md.view.gui.moneyforesight.forecast.ccreminder
import java.awt
import java.util


class AccountHelper:
    def __init__(self, c: com.moneydance.apps.md.controller.FeatureModuleContext) -> None: ...
    
    def addCreditCardReminderUpdateListener(self, s: str) -> None: ...
    
    def addMarkerToAccount(self, c: com.moneydance.apps.md.view.gui.moneyforesight.forecast.accountmarker.AccountMarkerInfo, c2: com.infinitekind.moneydance.model.Account) -> None: ...
    
    def addMarkerUpdateListener(self, s: str) -> None: ...
    
    def applyDefaultAccountColors(self) -> None: ...
    
    def getAccountByUUID(self, s: str) -> typing.Any: ...
    
    def getAccountByUuid(self, s: str) -> typing.Any: ...
    
    def getAccountStream(self, t: typing.Any) -> typing.Any: ...
    
    def getAccounts(self, t: typing.Any) -> typing.List[com.infinitekind.moneydance.model.Account]: ...
    
    def getAccountsForUUIDs(self, t: typing.List[str]) -> typing.List[com.infinitekind.moneydance.model.Account]: ...
    
    def getActiveBankAccounts(self) -> typing.List[com.infinitekind.moneydance.model.Account]: ...
    
    def getActiveCreditCardAccounts(self) -> typing.List[com.infinitekind.moneydance.model.Account]: ...
    
    def getAllAccounts(self) -> typing.List[com.infinitekind.moneydance.model.Account]: ...
    
    @staticmethod
    def getColorFor(c: com.infinitekind.moneydance.model.Account) -> typing.Any: ...
    
    def getColorForAccountUuid(self, s: str) -> typing.Any: ...
    
    def getCreditCardReminderInfo(self, c: com.infinitekind.moneydance.model.Account) -> com.moneydance.apps.md.view.gui.moneyforesight.forecast.ccreminder.CreditCardReminderInfo: ...
    
    def getCurrentAccountBook(self) -> com.infinitekind.moneydance.model.AccountBook: ...
    
    @staticmethod
    def getDisplayNameFor(s: str) -> str: ...
    
    def getForecastableAccounts(self) -> typing.List[com.infinitekind.moneydance.model.Account]: ...
    
    def getMarkersForAccount(self, c: com.infinitekind.moneydance.model.Account) -> typing.List[com.moneydance.apps.md.view.gui.moneyforesight.forecast.accountmarker.AccountMarkerInfo]: ...
    
    @staticmethod
    def getUUIDsFrom(t: typing.Sequence[com.infinitekind.moneydance.model.Account]) -> typing.Set[str]: ...
    
    @staticmethod
    def setAccountColor(c: com.infinitekind.moneydance.model.Account, j: java.awt.Color) -> None: ...
    
    def updateAccountMarkers(self, c: com.infinitekind.moneydance.model.Account, t: typing.List[com.moneydance.apps.md.view.gui.moneyforesight.forecast.accountmarker.AccountMarkerInfo]) -> None: ...
    
    def updateCreditCardReminder(self, c: com.infinitekind.moneydance.model.Account, c2: com.moneydance.apps.md.view.gui.moneyforesight.forecast.ccreminder.CreditCardReminderInfo) -> None: ...
    
    
    class CreditCardReminderUpdateListener:
        def __init__(self) -> None: ...
        
        def reminderUpdated(self, c: com.infinitekind.moneydance.model.Account) -> None: ...
        
        
    class MarkerUpdateListener:
        def __init__(self) -> None: ...
        
        def accountMarkersUpdated(self, c: com.infinitekind.moneydance.model.Account) -> None: ...
        
        
    
class AccountNameComparator(java.util.Comparator):
    def __init__(self) -> None: ...
    
    def compare(self, c: com.infinitekind.moneydance.model.Account, c2: com.infinitekind.moneydance.model.Account) -> int: ...
    
    
class CategoryComparator(java.util.Comparator):
    def __init__(self) -> None: ...
    
    def compare(self, c: com.infinitekind.moneydance.model.Account, c2: com.infinitekind.moneydance.model.Account) -> int: ...
    
    
