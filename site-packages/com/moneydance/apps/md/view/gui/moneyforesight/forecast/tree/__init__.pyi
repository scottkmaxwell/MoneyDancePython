import typing
import com.infinitekind.moneydance.model
import com.moneydance.apps.md.view.gui.moneyforesight.transactions
import javax.swing.tree
import org.netbeans.swing.outline


class ForecastCategoryRowModel(org.netbeans.swing.outline.RowModel):
    def __init__(self, c: com.infinitekind.moneydance.model.CurrencyType) -> None: ...
    
    def configure(self, o: org.netbeans.swing.outline.Outline) -> None: ...
    
    def getColumnClass(self, i: int) -> typing.Any: ...
    
    def getColumnCount(self) -> int: ...
    
    def getColumnName(self, i: int) -> str: ...
    
    def getValueFor(self, o: object, i: int) -> object: ...
    
    def isCellEditable(self, o: object, i: int) -> bool: ...
    
    def setValueFor(self, o: object, i: int, o2: object) -> None: ...
    
    
class ForecastCategoryTreeModel(javax.swing.tree.TreeModel):
    pass
    
class ForecastCategoryTreeNode:
    def __init__(self, c: com.infinitekind.moneydance.model.Account, t: typing.Dict[str,com.moneydance.apps.md.view.gui.moneyforesight.transactions.AmountAndCount]) -> None: ...
    
    def equals(self, o: object) -> bool: ...
    
    def getChild(self, i: int) -> object: ...
    
    def getChildCount(self) -> int: ...
    
    def getIndexOfChild(self, forecastCategoryTreeNode: 'ForecastCategoryTreeNode') -> int: ...
    
    def getTxnSumInBaseCurrency(self) -> float: ...
    
    def getTxnSumWithSubAccountsInBaseCurrency(self) -> float: ...
    
    def hashCode(self) -> int: ...
    
    def toString(self) -> str: ...
    
    
