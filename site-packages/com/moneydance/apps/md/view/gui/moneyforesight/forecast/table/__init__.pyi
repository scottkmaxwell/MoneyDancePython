import typing
import com.infinitekind.moneydance.model
import java.time
import javax.swing.table


class ForecastTableRow:
    def __init__(self, s: str, s2: str, s3: str, s4: str, c: com.infinitekind.moneydance.model.CurrencyType, t: typing.Any, f: float, j: java.time.LocalDate, b: bool) -> None: ...
    
    def getAccountBalanceInAccountCurrency(self) -> float: ...
    
    def getAccountBalanceInAccountCurrencyFormatted(self) -> str: ...
    
    def getAccountName(self) -> str: ...
    
    def getCategoryName(self) -> str: ...
    
    def getFormattedAmount(self) -> str: ...
    
    def getTxnAmount(self) -> typing.Any: ...
    
    def getTxnDate(self) -> java.time.LocalDate: ...
    
    def getTxnDescription(self) -> str: ...
    
    def getType(self) -> str: ...
    
    def isOverdueReminderTxn(self) -> bool: ...
    
    
    class Type:
        BAL = 'BAL'
        CRED = 'CRED'
        REM = 'REM'
        TXN = 'TXN'
        
        def __init__(self) -> None: ...
        
        @staticmethod
        def valueOf(s: str) -> str: ...
        
        @staticmethod
        def values() -> typing.List[str]: ...
        
        
    
class ForecastTableRowFactory:
    def __init__(self) -> None: ...
    
    @staticmethod
    def currentBalanceRow(c: com.infinitekind.moneydance.model.Account, j: java.time.LocalDate, s: str) -> ForecastTableRow: ...
    
    @staticmethod
    def futureReminderRow(c: com.infinitekind.moneydance.model.Account, s: str, s2: str, s3: str, i: int, f: float, j: java.time.LocalDate) -> ForecastTableRow: ...
    
    @staticmethod
    def overdueReminderRow(c: com.infinitekind.moneydance.model.Account, s: str, s2: str, s3: str, i: int, i2: int, j: java.time.LocalDate) -> ForecastTableRow: ...
    
    
class ForecastTransactionsTableModel(javax.swing.table.AbstractTableModel):
    pass
    
