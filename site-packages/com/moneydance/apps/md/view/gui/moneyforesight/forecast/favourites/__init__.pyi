import typing
import com.moneydance.apps.md.controller
import com.moneydance.apps.md.view.gui.moneyforesight
import java.util
import javax.swing


class FavouritesRepository:
    def __init__(self, c: com.moneydance.apps.md.controller.FeatureModuleContext) -> None: ...
    
    def addFavourite(self, c: com.moneydance.apps.md.view.gui.moneyforesight.SavedForecastInfo) -> None: ...
    
    def favouriteNameExists(self, s: str) -> bool: ...
    
    def findById(self, j: java.util.UUID) -> typing.Any: ...
    
    def getExplicitFavourites(self) -> typing.List[com.moneydance.apps.md.view.gui.moneyforesight.SavedForecastInfo]: ...
    
    def getFavourites(self) -> typing.List[com.moneydance.apps.md.view.gui.moneyforesight.SavedForecastInfo]: ...
    
    def onAccountBookOpened(self) -> None: ...
    
    def removeFavourite(self, c: com.moneydance.apps.md.view.gui.moneyforesight.SavedForecastInfo) -> None: ...
    
    
class ManageFavouritesDialog:
    def __init__(self, j: javax.swing.JFrame, j2: javax.swing.Action, j3: javax.swing.Action) -> None: ...
    
    def close(self) -> None: ...
    
    def getSelectedFavourite(self) -> com.moneydance.apps.md.view.gui.moneyforesight.SavedForecastInfo: ...
    
    def removeFavourite(self, c: com.moneydance.apps.md.view.gui.moneyforesight.SavedForecastInfo) -> None: ...
    
    def show(self, t: typing.Sequence[com.moneydance.apps.md.view.gui.moneyforesight.SavedForecastInfo]) -> None: ...
    
    
class SaveFavouriteDialog:
    def __init__(self, j: javax.swing.JFrame, j2: javax.swing.Action) -> None: ...
    
    def close(self) -> None: ...
    
    def getFavouriteName(self) -> str: ...
    
    def overwriteIfNameExists(self) -> bool: ...
    
    def show(self) -> None: ...
    
    
