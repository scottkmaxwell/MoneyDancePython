import typing
import com.infinitekind.moneydance.model
import com.moneydance.apps.md.controller
import com.moneydance.apps.md.view
import com.moneydance.apps.md.view.gui.moneyforesight.account
import com.moneydance.apps.md.view.gui.moneyforesight.prefs
import com.moneydance.apps.md.view.gui.moneyforesight.transactions
import com.moneydance.awt
import java.awt
import java.lang
import java.time
import javax.swing
import org.jfree.chart


class CategoryCentric(java.lang.Enum):
    EXPENSE = 'EXPENSE'
    INCOME = 'INCOME'
    
    def __init__(self) -> None: ...
    
    @staticmethod
    def valueOf(s: str) -> 'CategoryCentric': ...
    
    @staticmethod
    def values() -> typing.List['CategoryCentric']: ...
    
    
class CategoryCentricSelectionComponents:
    def __init__(self) -> None: ...
    
    def getPanel(self) -> javax.swing.JPanel: ...
    
    def getSelectedCategoryCentric(self) -> CategoryCentric: ...
    
    def setCategoryCentric(self, categoryCentric: CategoryCentric) -> None: ...
    
    
class GenerateRemindersDialog:
    def __init__(self, j: javax.swing.JFrame, j2: javax.swing.Action) -> None: ...
    
    def close(self) -> None: ...
    
    def show(self) -> None: ...
    
    
class PastReminderProcessor:
    def __init__(self) -> None: ...
    
    @staticmethod
    def processPastReminders(c: com.infinitekind.moneydance.model.ReminderSet, j: java.time.LocalDate, j2: java.time.LocalDate, c2: com.moneydance.apps.md.view.gui.moneyforesight.transactions.TransactionSumAccumulator) -> None: ...
    
    
class ReminderReviewChart:
    def __init__(self, c: com.infinitekind.moneydance.model.CurrencyType, reminderReviewTimeSeriesCollection: 'ReminderReviewTimeSeriesCollection', c2: com.moneydance.apps.md.view.gui.moneyforesight.prefs.MoneydanceDateFormatter) -> None: ...
    
    def getChartPanel(self) -> org.jfree.chart.ChartPanel: ...
    
    def setChartTitle(self, s: str) -> None: ...
    
    def updateChartTitle(self, j: java.time.LocalDate) -> None: ...
    
    def updateDisplayCurrency(self, c: com.infinitekind.moneydance.model.CurrencyType) -> None: ...
    
    
class ReminderReviewController:
    def __init__(self, c: com.moneydance.apps.md.controller.FeatureModuleContext, c2: com.moneydance.apps.md.view.gui.moneyforesight.prefs.MoneydanceDateFormatter, c3: com.moneydance.apps.md.view.gui.moneyforesight.account.AccountHelper, s: str) -> None: ...
    
    def cleanup(self) -> None: ...
    
    def onAccountBookClosing(self) -> None: ...
    
    def reset(self) -> None: ...
    
    def show(self) -> None: ...
    
    def toFront(self, s: str) -> None: ...
    
    
    class ShutdownCallback:
        def __init__(self) -> None: ...
        
        def onShutdown(self) -> None: ...
        
        
    
class ReminderReviewHomePage(com.moneydance.apps.md.view.HomePageView):
    def __init__(self, c: com.moneydance.apps.md.view.gui.moneyforesight.prefs.MoneydanceDateFormatter, c2: com.moneydance.apps.md.view.gui.moneyforesight.account.AccountHelper) -> None: ...
    
    def getGUIView(self, c: com.infinitekind.moneydance.model.AccountBook) -> javax.swing.JComponent: ...
    
    def getID(self) -> str: ...
    
    def onAccountBookOpened(self) -> None: ...
    
    def refresh(self) -> None: ...
    
    def reset(self) -> None: ...
    
    def setActive(self, b: bool) -> None: ...
    
    def toString(self) -> str: ...
    
    
class ReminderReviewHomePageSettingsDialog:
    def __init__(self, c: com.moneydance.apps.md.view.gui.moneyforesight.prefs.MoneydanceDateFormatter, j: javax.swing.Action, j2: javax.swing.Action, j3: javax.swing.Action, j4: 'java.awt.event.WindowListener') -> None: ...
    
    def dispose(self) -> None: ...
    
    def getCategoryCentric(self) -> CategoryCentric: ...
    
    def getEndDate(self) -> java.time.LocalDate: ...
    
    def getSelectedCategoryIds(self) -> typing.Set[str]: ...
    
    def getStartDate(self) -> java.time.LocalDate: ...
    
    def requestFocus(self) -> None: ...
    
    def setCategoryCentric(self, categoryCentric: CategoryCentric) -> None: ...
    
    def show(self, t: typing.List[com.infinitekind.moneydance.model.Account], t2: typing.List[com.infinitekind.moneydance.model.Account]) -> None: ...
    
    
class ReminderReviewMemento:
    def __init__(self, reminderReviewPeriod: 'ReminderReviewPeriod', j: java.time.LocalDate, j2: java.time.LocalDate) -> None: ...
    
    def getEndDate(self) -> java.time.LocalDate: ...
    
    def getEndDateForReview(self) -> java.time.LocalDate: ...
    
    def getReviewPeriod(self) -> 'ReminderReviewPeriod': ...
    
    def getStartDate(self) -> java.time.LocalDate: ...
    
    def getStartDateForReview(self) -> java.time.LocalDate: ...
    
    
class ReminderReviewPeriod(java.lang.Enum):
    CUSTOM_DATES = 'Custom dates'
    LAST_MONTH = 'Last month'
    LAST_WEEK = 'Last week'
    LAST_YEAR = 'Last year'
    MONTH_TO_DATE = 'Month to date'
    ONE_MONTH_AGO = '1 month ago'
    ONE_WEEK_AGO = '1 week ago'
    SIX_MONTHS_AGO = '6 months ago'
    THREE_MONTHS_AGO = '3 months ago'
    TWELVE_MONTHS_AGO = '12 months ago'
    YEAR_TO_DATE = 'Year to date'
    
    def __init__(self) -> None: ...
    
    def getDefaultPeriod(self) -> 'ReminderReviewPeriod': ...
    
    def getEndDate(self) -> java.time.LocalDate: ...
    
    def getStartDate(self) -> java.time.LocalDate: ...
    
    def toString(self) -> str: ...
    
    @staticmethod
    def valueOf(s: str) -> 'ReminderReviewPeriod': ...
    
    @staticmethod
    def values() -> typing.List['ReminderReviewPeriod']: ...
    
    
class ReminderReviewTimeSeriesCollection:
    pass
    
class ReminderReviewTreeNode:
    def __init__(self, c: com.infinitekind.moneydance.model.Account, c2: com.moneydance.apps.md.view.gui.moneyforesight.transactions.TransactionSumResult, c3: com.moneydance.apps.md.view.gui.moneyforesight.transactions.TransactionSumResult, t: typing.Set[str]) -> None: ...
    
    def equals(self, o: object) -> bool: ...
    
    def getAccountUuid(self) -> str: ...
    
    def getAccountUuidsIncludingDescendants(self) -> typing.Set[str]: ...
    
    def getBaseCurrency(self) -> com.infinitekind.moneydance.model.CurrencyType: ...
    
    def getChild(self, i: int) -> object: ...
    
    def getChildCount(self) -> int: ...
    
    def getChildren(self) -> typing.List['ReminderReviewTreeNode']: ...
    
    def getDiffInBaseCurrency(self) -> float: ...
    
    def getDiffWithSubAccountsInBaseCurrency(self) -> float: ...
    
    def getIndexOfChild(self, reminderReviewTreeNode: 'ReminderReviewTreeNode') -> int: ...
    
    def getReminderSumInBaseCurrency(self) -> float: ...
    
    def getReminderSumWithSubAccountsInBaseCurrency(self) -> float: ...
    
    def getTxnCount(self) -> int: ...
    
    def getTxnSumInBaseCurrency(self) -> float: ...
    
    def getTxnSumWithSubAccountsInBaseCurrency(self) -> float: ...
    
    def hashCode(self) -> int: ...
    
    def toString(self) -> str: ...
    
    def visitChildren(self, t: typing.Any) -> None: ...
    
    
class ReminderReviewTreeNodes:
    def __init__(self) -> None: ...
    
    def getBaseCurrency(self) -> com.infinitekind.moneydance.model.CurrencyType: ...
    
    def getRootNode(self) -> ReminderReviewTreeNode: ...
    
    
class ReviewPeriodSelectionComponents:
    def __init__(self, c: com.moneydance.apps.md.view.gui.moneyforesight.prefs.MoneydanceDateFormatter) -> None: ...
    
    def getEndDate(self) -> java.time.LocalDate: ...
    
    def getEndDateField(self) -> com.moneydance.awt.JDateField: ...
    
    def getReviewPeriodCombo(self) -> typing.Any: ...
    
    def getSelectedPeriod(self) -> ReminderReviewPeriod: ...
    
    def getStartDate(self) -> java.time.LocalDate: ...
    
    def getStartDateField(self) -> com.moneydance.awt.JDateField: ...
    
    def reset(self, reminderReviewPeriod: ReminderReviewPeriod, j: java.time.LocalDate, j2: java.time.LocalDate) -> None: ...
    
    def resetDateFormatter(self) -> None: ...
    
    def setEnabled(self, b: bool) -> None: ...
    
    def setPeriod(self, reminderReviewPeriod: ReminderReviewPeriod) -> None: ...
    
    
class SavedReminderReviewInfo(java.lang.Comparable):
    def __init__(self, s: str, reminderReviewPeriod: ReminderReviewPeriod, j: java.time.LocalDate, j2: java.time.LocalDate, t: typing.List[str], categoryCentric: CategoryCentric) -> None: ...
    
    def compareTo(self, savedReminderReviewInfo: 'SavedReminderReviewInfo') -> int: ...
    
    @staticmethod
    def createFromMemento(savedReminderReviewInfoMemento: 'SavedReminderReviewInfoMemento') -> 'SavedReminderReviewInfo': ...
    
    def equals(self, o: object) -> bool: ...
    
    def getCategoryCentric(self) -> CategoryCentric: ...
    
    def getEndDate(self) -> java.time.LocalDate: ...
    
    def getEndDateForReview(self) -> java.time.LocalDate: ...
    
    def getIncludedCategoryIds(self) -> typing.Set[str]: ...
    
    def getMemento(self) -> 'SavedReminderReviewInfoMemento': ...
    
    def getName(self) -> str: ...
    
    def getReviewPeriod(self) -> ReminderReviewPeriod: ...
    
    def getStartDate(self) -> java.time.LocalDate: ...
    
    def getStartDateForReview(self) -> java.time.LocalDate: ...
    
    def hashCode(self) -> int: ...
    
    
class SavedReminderReviewInfoMemento:
    def __init__(self, s: str, reminderReviewPeriod: ReminderReviewPeriod, j: java.time.LocalDate, j2: java.time.LocalDate, t: typing.List[str], categoryCentric: CategoryCentric) -> None: ...
    
    def getCategoryCentric(self) -> CategoryCentric: ...
    
    def getEndDate(self) -> java.time.LocalDate: ...
    
    def getIncludedCategoryIds(self) -> typing.List[str]: ...
    
    def getName(self) -> str: ...
    
    def getReviewPeriod(self) -> ReminderReviewPeriod: ...
    
    def getStartDate(self) -> java.time.LocalDate: ...
    
    
class SuggestedReminderTableRow:
    def __init__(self, c: com.infinitekind.moneydance.model.Reminder, s: str, c2: com.infinitekind.moneydance.model.CurrencyType) -> None: ...
    
    def getAccount(self) -> com.infinitekind.moneydance.model.Account: ...
    
    def getAccountName(self) -> str: ...
    
    def getAmount(self) -> java.lang.Double: ...
    
    def getCategoryId(self) -> str: ...
    
    def getCommit(self) -> bool: ...
    
    def getFrequencyDescription(self) -> str: ...
    
    def getInitialDate(self) -> java.time.LocalDate: ...
    
    def getLastDate(self) -> java.time.LocalDate: ...
    
    def getReminder(self) -> com.infinitekind.moneydance.model.Reminder: ...
    
    def getReminderName(self) -> str: ...
    
    def setCommit(self, b: bool) -> None: ...
    
    
class SuggestedRemindersDialog:
    def __init__(self, j: javax.swing.JFrame, j2: 'java.awt.event.WindowListener', j3: javax.swing.Action, c: com.moneydance.apps.md.view.gui.moneyforesight.prefs.MoneydanceDateFormatter, c2: com.infinitekind.moneydance.model.CurrencyType, s: str, s2: str, c3: com.moneydance.apps.md.controller.FeatureModuleContext) -> None: ...
    
    def anyUnappliedSuggestions(self) -> bool: ...
    
    def close(self) -> None: ...
    
    def getFrame(self) -> java.awt.Component: ...
    
    def getUnappliedReminders(self) -> typing.Set[com.infinitekind.moneydance.model.Reminder]: ...
    
    def removeReminder(self, c: com.infinitekind.moneydance.model.Reminder) -> None: ...
    
    def show(self, t: typing.List[SuggestedReminderTableRow]) -> None: ...
    
    
    class CategorySelectionListener:
        def __init__(self) -> None: ...
        
        def onCategoriesSelected(self, t: typing.Set[str]) -> None: ...
        
        
    class DeleteReminderListener:
        def __init__(self) -> None: ...
        
        def deleteReminder(self, c: com.infinitekind.moneydance.model.Reminder) -> None: ...
        
        
    class SuggestedReminderTableModel:
        pass
        
    
