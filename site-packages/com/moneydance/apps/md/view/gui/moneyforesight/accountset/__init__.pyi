import typing
import com.google.gson
import com.infinitekind.moneydance.model
import com.moneydance.apps.md.controller
import com.moneydance.apps.md.view.gui.moneyforesight.account
import com.moneydance.apps.md.view.gui.moneyforesight.domain
import com.moneydance.apps.md.view.gui.moneyforesight.prefs
import java.lang
import java.lang.reflect
import java.time
import java.util
import javax.swing


class AccountSetController:
    def __init__(self, c: com.moneydance.apps.md.controller.FeatureModuleContext, c2: com.moneydance.apps.md.view.gui.moneyforesight.prefs.MoneydanceDateFormatter, accountSetModelRepository: 'AccountSetModelRepository', c3: com.moneydance.apps.md.view.gui.moneyforesight.account.AccountHelper) -> None: ...
    
    def show(self) -> None: ...
    
    
class AccountSetModel(java.lang.Comparable):
    def __init__(self, j: java.util.UUID, s: str, t: typing.Any, t2: typing.List[com.infinitekind.moneydance.model.Account], t3: typing.List['SavingsGoal']) -> None: ...
    
    def addSavingsGoal(self, savingsGoal: 'SavingsGoal') -> None: ...
    
    def compareTo(self, accountSetModel: 'AccountSetModel') -> int: ...
    
    def getAccountUUIDs(self) -> typing.List[str]: ...
    
    def getAccounts(self) -> typing.List[com.infinitekind.moneydance.model.Account]: ...
    
    def getDescription(self) -> typing.Any: ...
    
    def getId(self) -> java.util.UUID: ...
    
    def getName(self) -> str: ...
    
    def getSavingsGoals(self) -> typing.List['SavingsGoal']: ...
    
    def removeSavingsGoal(self, savingsGoal: 'SavingsGoal') -> None: ...
    
    def setAccounts(self, t: typing.List[com.infinitekind.moneydance.model.Account]) -> None: ...
    
    def setDescription(self, t: typing.Any) -> None: ...
    
    def setName(self, s: str) -> None: ...
    
    def setSavingsGoals(self, t: typing.List['SavingsGoal']) -> None: ...
    
    
class AccountSetModelRepository:
    def __init__(self, c: com.moneydance.apps.md.controller.FeatureModuleContext, c2: com.google.gson.Gson) -> None: ...
    
    def accountSetModelStream(self) -> typing.Any: ...
    
    def getAccountSetViewModel(self) -> 'AccountSetViewModel': ...
    
    def onAccountBookOpened(self) -> None: ...
    
    
class AccountSetModelSerializer(com.google.gson.JsonSerializer, com.google.gson.JsonDeserializer):
    def __init__(self, c: com.moneydance.apps.md.view.gui.moneyforesight.account.AccountHelper) -> None: ...
    
    def deserialize(self, c: com.google.gson.JsonElement, j: java.lang.reflect.Type, c2: com.google.gson.JsonDeserializationContext) -> object: ...
    
    def serialize(self, accountSetModel: AccountSetModel, j: java.lang.reflect.Type, c: com.google.gson.JsonSerializationContext) -> com.google.gson.JsonElement: ...
    
    
class AccountSetNameAndDescriptionModel('com.jgoodies.binding.beans.Model'):
    pass
    
class AccountSetNameValidator('com.jgoodies.validation.Validator'):
    def __init__(self, accountSetModelRepository: AccountSetModelRepository) -> None: ...
    
    def validate(self, accountSetNameAndDescriptionModel: AccountSetNameAndDescriptionModel) -> 'com.jgoodies.validation.ValidationResult': ...
    
    
class AccountSetView:
    def __init__(self, accountSetViewModel: 'AccountSetViewModel', j: javax.swing.Action, j2: javax.swing.Action, j3: javax.swing.Action, j4: javax.swing.Action, j5: javax.swing.Action, j6: javax.swing.Action, j7: javax.swing.Action, c: com.moneydance.apps.md.view.gui.moneyforesight.prefs.MoneydanceDateFormatter) -> None: ...
    
    def show(self) -> None: ...
    
    
class AccountSetViewModel('com.jgoodies.binding.beans.Model'):
    pass
    
class EditAccountListDialog:
    def __init__(self, j: javax.swing.JFrame, editAccountListViewModel: 'EditAccountListViewModel', j2: javax.swing.Action, j3: javax.swing.Action) -> None: ...
    
    def dispose(self) -> None: ...
    
    def show(self) -> None: ...
    
    
class EditAccountListViewModel:
    def __init__(self) -> None: ...
    
    def getAvailableAccounts(self) -> typing.Any: ...
    
    def getSelectedAccounts(self) -> typing.Any: ...
    
    def reset(self, t: typing.List[com.infinitekind.moneydance.model.Account], t2: typing.List[com.infinitekind.moneydance.model.Account]) -> None: ...
    
    def setSelectedAccounts(self, t: typing.Sequence[com.infinitekind.moneydance.model.Account]) -> None: ...
    
    
class EditAccountSetDialog:
    def __init__(self, j: javax.swing.JFrame, accountSetNameAndDescriptionModel: AccountSetNameAndDescriptionModel, j2: javax.swing.Action, j3: javax.swing.Action) -> None: ...
    
    def dispose(self) -> None: ...
    
    def show(self) -> None: ...
    
    
class EditSavingsGoalDialog:
    def __init__(self, j: javax.swing.JFrame, editSavingsGoalViewModel: 'EditSavingsGoalViewModel', c: com.moneydance.apps.md.view.gui.moneyforesight.prefs.MoneydanceDateFormatter, j2: javax.swing.Action, j3: javax.swing.Action) -> None: ...
    
    def dispose(self) -> None: ...
    
    def show(self) -> None: ...
    
    
class EditSavingsGoalViewModel('com.jgoodies.binding.beans.Model'):
    pass
    
class SavingsGoal(java.lang.Comparable):
    def __init__(self, j: java.util.UUID, j2: java.time.LocalDate, c: com.moneydance.apps.md.view.gui.moneyforesight.domain.CurrencyAmount) -> None: ...
    
    def compareTo(self, savingsGoal: 'SavingsGoal') -> int: ...
    
    def equals(self, o: object) -> bool: ...
    
    def getCurrencyAmount(self) -> com.moneydance.apps.md.view.gui.moneyforesight.domain.CurrencyAmount: ...
    
    def getDate(self) -> java.time.LocalDate: ...
    
    def getFormattedAmount(self) -> str: ...
    
    def getId(self) -> java.util.UUID: ...
    
    def hashCode(self) -> int: ...
    
    def setCurrencyAmount(self, c: com.moneydance.apps.md.view.gui.moneyforesight.domain.CurrencyAmount) -> None: ...
    
    def setDate(self, j: java.time.LocalDate) -> None: ...
    
    
class SavingsGoalMemento:
    def __init__(self, s: str, j: java.time.LocalDate, c: com.moneydance.apps.md.view.gui.moneyforesight.domain.CurrencyAmount) -> None: ...
    
    def getCurrencyAmount(self) -> com.moneydance.apps.md.view.gui.moneyforesight.domain.CurrencyAmount: ...
    
    def getId(self) -> str: ...
    
    
class SavingsGoalValidator('com.jgoodies.validation.Validator'):
    def __init__(self) -> None: ...
    
    def validate(self, editSavingsGoalViewModel: EditSavingsGoalViewModel) -> 'com.jgoodies.validation.ValidationResult': ...
    
    
