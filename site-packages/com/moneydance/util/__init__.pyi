import typing


class Platform:
    INSTANCE = 'com.moneydance.util.Platform'
    
    def __init__(self) -> None: ...
    
    @staticmethod
    def architecture() -> str: ...
    
    @staticmethod
    def architecture$annotations() -> None: ...
    
    @staticmethod
    def getJavaVersion() -> int: ...
    
    @staticmethod
    def getJavaVersion$annotations() -> None: ...
    
    @staticmethod
    def getOsVersion() -> int: ...
    
    @staticmethod
    def getOsVersion$annotations() -> None: ...
    
    @staticmethod
    def getUseNativeFileDialog() -> bool: ...
    
    @staticmethod
    def getUseNativeFileDialog$annotations() -> None: ...
    
    @staticmethod
    def isArm() -> bool: ...
    
    @staticmethod
    def isArm$annotations() -> None: ...
    
    @staticmethod
    def isBigSurOrLater() -> bool: ...
    
    @staticmethod
    def isBigSurOrLater$annotations() -> None: ...
    
    @staticmethod
    def isIntel() -> bool: ...
    
    @staticmethod
    def isIntel$annotations() -> None: ...
    
    @staticmethod
    def isMac() -> bool: ...
    
    @staticmethod
    def isMac$annotations() -> None: ...
    
    @staticmethod
    def isOSX() -> bool: ...
    
    @staticmethod
    def isOSX$annotations() -> None: ...
    
    @staticmethod
    def isOSXVersionAtLeast(i: int) -> bool: ...
    
    @staticmethod
    def isUnix() -> bool: ...
    
    @staticmethod
    def isUnix$annotations() -> None: ...
    
    @staticmethod
    def isWindows() -> bool: ...
    
    @staticmethod
    def isWindows$annotations() -> None: ...
    
    
    class Architecture:
        arm32 = 'arm32'
        arm64 = 'arm64'
        intel32 = 'intel32'
        intel64 = 'intel64'
        unknown = 'unknown'
        
        def __init__(self) -> None: ...
        
        @staticmethod
        def getEntries() -> typing.Any: ...
        
        @staticmethod
        def valueOf(s: str) -> str: ...
        
        @staticmethod
        def values() -> typing.List[str]: ...
        
        
    class WhenMappings:
        $EnumSwitchMapping$0 = "array('i', [1, 2, 3, 4, 0])"
        
        def __init__(self) -> None: ...
        
        
    
