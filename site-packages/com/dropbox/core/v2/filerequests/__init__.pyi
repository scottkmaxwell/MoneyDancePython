import typing
import com.dropbox.core.v2
import java.lang
import java.util


class CountFileRequestsError(java.lang.Enum):
    DISABLED_FOR_TEAM = 'DISABLED_FOR_TEAM'
    OTHER = 'OTHER'
    
    def __init__(self) -> None: ...
    
    @staticmethod
    def valueOf(s: str) -> 'CountFileRequestsError': ...
    
    @staticmethod
    def values() -> typing.List['CountFileRequestsError']: ...
    
    
class CountFileRequestsErrorException('com.dropbox.core.DbxApiException'):
    errorValue: CountFileRequestsError
    
    def __init__(self, s: str, s2: str, c: 'com.dropbox.core.LocalizedText', countFileRequestsError: CountFileRequestsError) -> None: ...
    
    
class CountFileRequestsResult:
    def __init__(self, i: int) -> None: ...
    
    def equals(self, o: object) -> bool: ...
    
    def getFileRequestCount(self) -> int: ...
    
    def hashCode(self) -> int: ...
    
    def toString(self) -> str: ...
    
    def toStringMultiline(self) -> str: ...
    
    
class CreateBuilder:
    def __init__(self) -> None: ...
    
    def start(self) -> 'FileRequest': ...
    
    def withDeadline(self, fileRequestDeadline: 'FileRequestDeadline') -> 'CreateBuilder': ...
    
    def withDescription(self, s: str) -> 'CreateBuilder': ...
    
    def withOpen(self, b: bool) -> 'CreateBuilder': ...
    
    
class CreateFileRequestError(java.lang.Enum):
    APP_LACKS_ACCESS = 'APP_LACKS_ACCESS'
    DISABLED_FOR_TEAM = 'DISABLED_FOR_TEAM'
    EMAIL_UNVERIFIED = 'EMAIL_UNVERIFIED'
    INVALID_LOCATION = 'INVALID_LOCATION'
    NOT_A_FOLDER = 'NOT_A_FOLDER'
    NOT_FOUND = 'NOT_FOUND'
    NO_PERMISSION = 'NO_PERMISSION'
    OTHER = 'OTHER'
    RATE_LIMIT = 'RATE_LIMIT'
    VALIDATION_ERROR = 'VALIDATION_ERROR'
    
    def __init__(self) -> None: ...
    
    @staticmethod
    def valueOf(s: str) -> 'CreateFileRequestError': ...
    
    @staticmethod
    def values() -> typing.List['CreateFileRequestError']: ...
    
    
class CreateFileRequestErrorException('com.dropbox.core.DbxApiException'):
    errorValue: CreateFileRequestError
    
    def __init__(self, s: str, s2: str, c: 'com.dropbox.core.LocalizedText', createFileRequestError: CreateFileRequestError) -> None: ...
    
    
class DbxUserFileRequestsRequests:
    def __init__(self, c: com.dropbox.core.v2.DbxRawClientV2) -> None: ...
    
    def count(self) -> CountFileRequestsResult: ...
    
    def create(self, s: str, s2: str) -> 'FileRequest': ...
    
    def createBuilder(self, s: str, s2: str) -> CreateBuilder: ...
    
    def delete(self, t: typing.List[str]) -> 'DeleteFileRequestsResult': ...
    
    def deleteAllClosed(self) -> 'DeleteAllClosedFileRequestsResult': ...
    
    def get(self, s: str) -> 'FileRequest': ...
    
    def list(self) -> 'ListFileRequestsResult': ...
    
    def listContinue(self, s: str) -> 'ListFileRequestsV2Result': ...
    
    def listV2(self) -> 'ListFileRequestsV2Result': ...
    
    def update(self, s: str) -> 'FileRequest': ...
    
    def updateBuilder(self, s: str) -> 'UpdateBuilder': ...
    
    
class DeleteAllClosedFileRequestsError(java.lang.Enum):
    APP_LACKS_ACCESS = 'APP_LACKS_ACCESS'
    DISABLED_FOR_TEAM = 'DISABLED_FOR_TEAM'
    EMAIL_UNVERIFIED = 'EMAIL_UNVERIFIED'
    NOT_A_FOLDER = 'NOT_A_FOLDER'
    NOT_FOUND = 'NOT_FOUND'
    NO_PERMISSION = 'NO_PERMISSION'
    OTHER = 'OTHER'
    VALIDATION_ERROR = 'VALIDATION_ERROR'
    
    def __init__(self) -> None: ...
    
    @staticmethod
    def valueOf(s: str) -> 'DeleteAllClosedFileRequestsError': ...
    
    @staticmethod
    def values() -> typing.List['DeleteAllClosedFileRequestsError']: ...
    
    
class DeleteAllClosedFileRequestsErrorException('com.dropbox.core.DbxApiException'):
    errorValue: DeleteAllClosedFileRequestsError
    
    def __init__(self, s: str, s2: str, c: 'com.dropbox.core.LocalizedText', deleteAllClosedFileRequestsError: DeleteAllClosedFileRequestsError) -> None: ...
    
    
class DeleteAllClosedFileRequestsResult:
    def __init__(self, t: typing.List['FileRequest']) -> None: ...
    
    def equals(self, o: object) -> bool: ...
    
    def getFileRequests(self) -> typing.List['FileRequest']: ...
    
    def hashCode(self) -> int: ...
    
    def toString(self) -> str: ...
    
    def toStringMultiline(self) -> str: ...
    
    
class DeleteFileRequestError(java.lang.Enum):
    APP_LACKS_ACCESS = 'APP_LACKS_ACCESS'
    DISABLED_FOR_TEAM = 'DISABLED_FOR_TEAM'
    EMAIL_UNVERIFIED = 'EMAIL_UNVERIFIED'
    FILE_REQUEST_OPEN = 'FILE_REQUEST_OPEN'
    NOT_A_FOLDER = 'NOT_A_FOLDER'
    NOT_FOUND = 'NOT_FOUND'
    NO_PERMISSION = 'NO_PERMISSION'
    OTHER = 'OTHER'
    VALIDATION_ERROR = 'VALIDATION_ERROR'
    
    def __init__(self) -> None: ...
    
    @staticmethod
    def valueOf(s: str) -> 'DeleteFileRequestError': ...
    
    @staticmethod
    def values() -> typing.List['DeleteFileRequestError']: ...
    
    
class DeleteFileRequestErrorException('com.dropbox.core.DbxApiException'):
    errorValue: DeleteFileRequestError
    
    def __init__(self, s: str, s2: str, c: 'com.dropbox.core.LocalizedText', deleteFileRequestError: DeleteFileRequestError) -> None: ...
    
    
class DeleteFileRequestsResult:
    def __init__(self, t: typing.List['FileRequest']) -> None: ...
    
    def equals(self, o: object) -> bool: ...
    
    def getFileRequests(self) -> typing.List['FileRequest']: ...
    
    def hashCode(self) -> int: ...
    
    def toString(self) -> str: ...
    
    def toStringMultiline(self) -> str: ...
    
    
class FileRequest:
    def __init__(self, s: str, s2: str, s3: str, j: java.util.Date, b: bool, i: int) -> None: ...
    
    def equals(self, o: object) -> bool: ...
    
    def getCreated(self) -> java.util.Date: ...
    
    def getDeadline(self) -> 'FileRequestDeadline': ...
    
    def getDescription(self) -> str: ...
    
    def getDestination(self) -> str: ...
    
    def getFileCount(self) -> int: ...
    
    def getId(self) -> str: ...
    
    def getIsOpen(self) -> bool: ...
    
    def getTitle(self) -> str: ...
    
    def getUrl(self) -> str: ...
    
    def hashCode(self) -> int: ...
    
    @staticmethod
    def newBuilder(s: str, s2: str, s3: str, j: java.util.Date, b: bool, i: int) -> str: ...
    
    def toString(self) -> str: ...
    
    def toStringMultiline(self) -> str: ...
    
    
    class Builder:
        def __init__(self) -> None: ...
        
        def build(self) -> 'FileRequest': ...
        
        def withDeadline(self, fileRequestDeadline: 'FileRequestDeadline') -> str: ...
        
        def withDescription(self, s: str) -> str: ...
        
        def withDestination(self, s: str) -> str: ...
        
        
    
class FileRequestDeadline:
    def __init__(self, j: java.util.Date) -> None: ...
    
    def equals(self, o: object) -> bool: ...
    
    def getAllowLateUploads(self) -> 'GracePeriod': ...
    
    def getDeadline(self) -> java.util.Date: ...
    
    def hashCode(self) -> int: ...
    
    def toString(self) -> str: ...
    
    def toStringMultiline(self) -> str: ...
    
    
class GetFileRequestError(java.lang.Enum):
    APP_LACKS_ACCESS = 'APP_LACKS_ACCESS'
    DISABLED_FOR_TEAM = 'DISABLED_FOR_TEAM'
    EMAIL_UNVERIFIED = 'EMAIL_UNVERIFIED'
    NOT_A_FOLDER = 'NOT_A_FOLDER'
    NOT_FOUND = 'NOT_FOUND'
    NO_PERMISSION = 'NO_PERMISSION'
    OTHER = 'OTHER'
    VALIDATION_ERROR = 'VALIDATION_ERROR'
    
    def __init__(self) -> None: ...
    
    @staticmethod
    def valueOf(s: str) -> 'GetFileRequestError': ...
    
    @staticmethod
    def values() -> typing.List['GetFileRequestError']: ...
    
    
class GetFileRequestErrorException('com.dropbox.core.DbxApiException'):
    errorValue: GetFileRequestError
    
    def __init__(self, s: str, s2: str, c: 'com.dropbox.core.LocalizedText', getFileRequestError: GetFileRequestError) -> None: ...
    
    
class GracePeriod(java.lang.Enum):
    ALWAYS = 'ALWAYS'
    ONE_DAY = 'ONE_DAY'
    OTHER = 'OTHER'
    SEVEN_DAYS = 'SEVEN_DAYS'
    THIRTY_DAYS = 'THIRTY_DAYS'
    TWO_DAYS = 'TWO_DAYS'
    
    def __init__(self) -> None: ...
    
    @staticmethod
    def valueOf(s: str) -> 'GracePeriod': ...
    
    @staticmethod
    def values() -> typing.List['GracePeriod']: ...
    
    
class ListFileRequestsContinueError(java.lang.Enum):
    DISABLED_FOR_TEAM = 'DISABLED_FOR_TEAM'
    INVALID_CURSOR = 'INVALID_CURSOR'
    OTHER = 'OTHER'
    
    def __init__(self) -> None: ...
    
    @staticmethod
    def valueOf(s: str) -> 'ListFileRequestsContinueError': ...
    
    @staticmethod
    def values() -> typing.List['ListFileRequestsContinueError']: ...
    
    
class ListFileRequestsContinueErrorException('com.dropbox.core.DbxApiException'):
    errorValue: ListFileRequestsContinueError
    
    def __init__(self, s: str, s2: str, c: 'com.dropbox.core.LocalizedText', listFileRequestsContinueError: ListFileRequestsContinueError) -> None: ...
    
    
class ListFileRequestsError(java.lang.Enum):
    DISABLED_FOR_TEAM = 'DISABLED_FOR_TEAM'
    OTHER = 'OTHER'
    
    def __init__(self) -> None: ...
    
    @staticmethod
    def valueOf(s: str) -> 'ListFileRequestsError': ...
    
    @staticmethod
    def values() -> typing.List['ListFileRequestsError']: ...
    
    
class ListFileRequestsErrorException('com.dropbox.core.DbxApiException'):
    errorValue: ListFileRequestsError
    
    def __init__(self, s: str, s2: str, c: 'com.dropbox.core.LocalizedText', listFileRequestsError: ListFileRequestsError) -> None: ...
    
    
class ListFileRequestsResult:
    def __init__(self, t: typing.List[FileRequest]) -> None: ...
    
    def equals(self, o: object) -> bool: ...
    
    def getFileRequests(self) -> typing.List[FileRequest]: ...
    
    def hashCode(self) -> int: ...
    
    def toString(self) -> str: ...
    
    def toStringMultiline(self) -> str: ...
    
    
class ListFileRequestsV2Result:
    def __init__(self, t: typing.List[FileRequest], s: str, b: bool) -> None: ...
    
    def equals(self, o: object) -> bool: ...
    
    def getCursor(self) -> str: ...
    
    def getFileRequests(self) -> typing.List[FileRequest]: ...
    
    def getHasMore(self) -> bool: ...
    
    def hashCode(self) -> int: ...
    
    def toString(self) -> str: ...
    
    def toStringMultiline(self) -> str: ...
    
    
class UpdateBuilder:
    def __init__(self) -> None: ...
    
    def start(self) -> FileRequest: ...
    
    def withDeadline(self, updateFileRequestDeadline: 'UpdateFileRequestDeadline') -> 'UpdateBuilder': ...
    
    def withDescription(self, s: str) -> 'UpdateBuilder': ...
    
    def withDestination(self, s: str) -> 'UpdateBuilder': ...
    
    def withOpen(self, b: bool) -> 'UpdateBuilder': ...
    
    def withTitle(self, s: str) -> 'UpdateBuilder': ...
    
    
class UpdateFileRequestDeadline:
    NO_UPDATE = '"no_update"'
    OTHER = '"other"'
    
    def __init__(self) -> None: ...
    
    def equals(self, o: object) -> bool: ...
    
    def getUpdateValue(self) -> FileRequestDeadline: ...
    
    def hashCode(self) -> int: ...
    
    def isNoUpdate(self) -> bool: ...
    
    def isOther(self) -> bool: ...
    
    def isUpdate(self) -> bool: ...
    
    def tag(self) -> str: ...
    
    def toString(self) -> str: ...
    
    def toStringMultiline(self) -> str: ...
    
    @staticmethod
    def update() -> 'UpdateFileRequestDeadline': ...
    
    
    class Tag:
        NO_UPDATE = 'NO_UPDATE'
        OTHER = 'OTHER'
        UPDATE = 'UPDATE'
        
        def __init__(self) -> None: ...
        
        @staticmethod
        def valueOf(s: str) -> str: ...
        
        @staticmethod
        def values() -> typing.List[str]: ...
        
        
    
class UpdateFileRequestError(java.lang.Enum):
    APP_LACKS_ACCESS = 'APP_LACKS_ACCESS'
    DISABLED_FOR_TEAM = 'DISABLED_FOR_TEAM'
    EMAIL_UNVERIFIED = 'EMAIL_UNVERIFIED'
    NOT_A_FOLDER = 'NOT_A_FOLDER'
    NOT_FOUND = 'NOT_FOUND'
    NO_PERMISSION = 'NO_PERMISSION'
    OTHER = 'OTHER'
    VALIDATION_ERROR = 'VALIDATION_ERROR'
    
    def __init__(self) -> None: ...
    
    @staticmethod
    def valueOf(s: str) -> 'UpdateFileRequestError': ...
    
    @staticmethod
    def values() -> typing.List['UpdateFileRequestError']: ...
    
    
class UpdateFileRequestErrorException('com.dropbox.core.DbxApiException'):
    errorValue: UpdateFileRequestError
    
    def __init__(self, s: str, s2: str, c: 'com.dropbox.core.LocalizedText', updateFileRequestError: UpdateFileRequestError) -> None: ...
    
    
