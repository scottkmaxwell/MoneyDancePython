import typing
import com.dropbox.core.v2


class DbxUserContactsRequests:
    def __init__(self, c: com.dropbox.core.v2.DbxRawClientV2) -> None: ...
    
    def deleteManualContacts(self) -> None: ...
    
    def deleteManualContactsBatch(self, t: typing.List[str]) -> None: ...
    
    
class DeleteManualContactsError:
    OTHER = '"other"'
    
    def __init__(self) -> None: ...
    
    @staticmethod
    def contactsNotFound(t: typing.List[str]) -> 'DeleteManualContactsError': ...
    
    def equals(self, o: object) -> bool: ...
    
    def getContactsNotFoundValue(self) -> typing.List[str]: ...
    
    def hashCode(self) -> int: ...
    
    def isContactsNotFound(self) -> bool: ...
    
    def isOther(self) -> bool: ...
    
    def tag(self) -> str: ...
    
    def toString(self) -> str: ...
    
    def toStringMultiline(self) -> str: ...
    
    
    class Tag:
        CONTACTS_NOT_FOUND = 'CONTACTS_NOT_FOUND'
        OTHER = 'OTHER'
        
        def __init__(self) -> None: ...
        
        @staticmethod
        def valueOf(s: str) -> str: ...
        
        @staticmethod
        def values() -> typing.List[str]: ...
        
        
    
class DeleteManualContactsErrorException('com.dropbox.core.DbxApiException'):
    errorValue: DeleteManualContactsError
    
    def __init__(self, s: str, s2: str, c: 'com.dropbox.core.LocalizedText', deleteManualContactsError: DeleteManualContactsError) -> None: ...
    
    
