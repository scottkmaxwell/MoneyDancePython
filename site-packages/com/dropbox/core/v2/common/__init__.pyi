import typing


class PathRoot:
    HOME = '"home"'
    OTHER = '"other"'
    
    def __init__(self) -> None: ...
    
    def equals(self, o: object) -> bool: ...
    
    def getNamespaceIdValue(self) -> str: ...
    
    def getRootValue(self) -> str: ...
    
    def hashCode(self) -> int: ...
    
    def isHome(self) -> bool: ...
    
    def isNamespaceId(self) -> bool: ...
    
    def isOther(self) -> bool: ...
    
    def isRoot(self) -> bool: ...
    
    @staticmethod
    def namespaceId(s: str) -> 'PathRoot': ...
    
    @staticmethod
    def root(s: str) -> 'PathRoot': ...
    
    def tag(self) -> str: ...
    
    def toString(self) -> str: ...
    
    def toStringMultiline(self) -> str: ...
    
    
    class Serializer:
        INSTANCE = 'com.dropbox.core.v2.common.PathRoot.Serializer'
        
        def __init__(self) -> None: ...
        
        
    class Tag:
        HOME = 'HOME'
        NAMESPACE_ID = 'NAMESPACE_ID'
        OTHER = 'OTHER'
        ROOT = 'ROOT'
        
        def __init__(self) -> None: ...
        
        @staticmethod
        def valueOf(s: str) -> str: ...
        
        @staticmethod
        def values() -> typing.List[str]: ...
        
        
    
class PathRootError:
    NO_PERMISSION = '"no_permission"'
    OTHER = '"other"'
    
    def __init__(self) -> None: ...
    
    def equals(self, o: object) -> bool: ...
    
    def getInvalidRootValue(self) -> 'RootInfo': ...
    
    def hashCode(self) -> int: ...
    
    @staticmethod
    def invalidRoot(rootInfo: 'RootInfo') -> 'PathRootError': ...
    
    def isInvalidRoot(self) -> bool: ...
    
    def isNoPermission(self) -> bool: ...
    
    def isOther(self) -> bool: ...
    
    def tag(self) -> str: ...
    
    def toString(self) -> str: ...
    
    def toStringMultiline(self) -> str: ...
    
    
    class Serializer:
        INSTANCE = 'com.dropbox.core.v2.common.PathRootError.Serializer'
        
        def __init__(self) -> None: ...
        
        
    class Tag:
        INVALID_ROOT = 'INVALID_ROOT'
        NO_PERMISSION = 'NO_PERMISSION'
        OTHER = 'OTHER'
        
        def __init__(self) -> None: ...
        
        @staticmethod
        def valueOf(s: str) -> str: ...
        
        @staticmethod
        def values() -> typing.List[str]: ...
        
        
    
class RootInfo:
    def __init__(self, s: str, s2: str) -> None: ...
    
    def equals(self, o: object) -> bool: ...
    
    def getHomeNamespaceId(self) -> str: ...
    
    def getRootNamespaceId(self) -> str: ...
    
    def hashCode(self) -> int: ...
    
    def toString(self) -> str: ...
    
    def toStringMultiline(self) -> str: ...
    
    
    class Serializer:
        INSTANCE = 'com.dropbox.core.v2.common.RootInfo.Serializer'
        
        def __init__(self) -> None: ...
        
        
    
class TeamRootInfo(RootInfo):
    def __init__(self, s: str, s2: str, s3: str) -> None: ...
    
    def equals(self, o: object) -> bool: ...
    
    def getHomeNamespaceId(self) -> str: ...
    
    def getHomePath(self) -> str: ...
    
    def getRootNamespaceId(self) -> str: ...
    
    def hashCode(self) -> int: ...
    
    def toString(self) -> str: ...
    
    def toStringMultiline(self) -> str: ...
    
    
class UserRootInfo(RootInfo):
    def __init__(self, s: str, s2: str) -> None: ...
    
    def equals(self, o: object) -> bool: ...
    
    def getHomeNamespaceId(self) -> str: ...
    
    def getRootNamespaceId(self) -> str: ...
    
    def hashCode(self) -> int: ...
    
    def toString(self) -> str: ...
    
    def toStringMultiline(self) -> str: ...
    
    
