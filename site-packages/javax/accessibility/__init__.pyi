import typing


class Accessible:
    def __init__(self) -> None: ...
    
    def getAccessibleContext(self) -> 'AccessibleContext': ...
    
    
class AccessibleStateSet:
    def __init__(self) -> None: ...
    
    def add(self, accessibleState: 'AccessibleState') -> bool: ...
    
    def addAll(self, t: typing.List['AccessibleState']) -> None: ...
    
    def clear(self) -> None: ...
    
    def contains(self, accessibleState: 'AccessibleState') -> bool: ...
    
    def remove(self, accessibleState: 'AccessibleState') -> bool: ...
    
    def toArray(self) -> typing.List['AccessibleState']: ...
    
    def toString(self) -> str: ...
    
    
