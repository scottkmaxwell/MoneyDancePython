import javax.swing.event


class AbstractUndoableEdit:
    def __init__(self) -> None: ...
    
    def addEdit(self, undoableEdit: 'UndoableEdit') -> bool: ...
    
    def canRedo(self) -> bool: ...
    
    def canUndo(self) -> bool: ...
    
    def die(self) -> None: ...
    
    def getPresentationName(self) -> str: ...
    
    def getRedoPresentationName(self) -> str: ...
    
    def getUndoPresentationName(self) -> str: ...
    
    def isSignificant(self) -> bool: ...
    
    def redo(self) -> None: ...
    
    def replaceEdit(self, undoableEdit: 'UndoableEdit') -> bool: ...
    
    def toString(self) -> str: ...
    
    def undo(self) -> None: ...
    
    
class CompoundEdit(AbstractUndoableEdit):
    def __init__(self) -> None: ...
    
    def addEdit(self, undoableEdit: 'UndoableEdit') -> bool: ...
    
    def canRedo(self) -> bool: ...
    
    def canUndo(self) -> bool: ...
    
    def die(self) -> None: ...
    
    def end(self) -> None: ...
    
    def getPresentationName(self) -> str: ...
    
    def getRedoPresentationName(self) -> str: ...
    
    def getUndoPresentationName(self) -> str: ...
    
    def isInProgress(self) -> bool: ...
    
    def isSignificant(self) -> bool: ...
    
    def redo(self) -> None: ...
    
    def toString(self) -> str: ...
    
    def undo(self) -> None: ...
    
    
class UndoManager(CompoundEdit, javax.swing.event.UndoableEditListener):
    def __init__(self) -> None: ...
    
    def addEdit(self, undoableEdit: 'UndoableEdit') -> bool: ...
    
    def canRedo(self) -> bool: ...
    
    def canUndo(self) -> bool: ...
    
    def canUndoOrRedo(self) -> bool: ...
    
    def discardAllEdits(self) -> None: ...
    
    def end(self) -> None: ...
    
    def getLimit(self) -> int: ...
    
    def getRedoPresentationName(self) -> str: ...
    
    def getUndoOrRedoPresentationName(self) -> str: ...
    
    def getUndoPresentationName(self) -> str: ...
    
    def redo(self) -> None: ...
    
    def setLimit(self, i: int) -> None: ...
    
    def toString(self) -> str: ...
    
    def undo(self) -> None: ...
    
    def undoOrRedo(self) -> None: ...
    
    def undoableEditHappened(self, j: javax.swing.event.UndoableEditEvent) -> None: ...
    
    
class UndoableEdit:
    def __init__(self) -> None: ...
    
    def addEdit(self, undoableEdit: 'UndoableEdit') -> bool: ...
    
    def canRedo(self) -> bool: ...
    
    def canUndo(self) -> bool: ...
    
    def die(self) -> None: ...
    
    def getPresentationName(self) -> str: ...
    
    def getRedoPresentationName(self) -> str: ...
    
    def getUndoPresentationName(self) -> str: ...
    
    def isSignificant(self) -> bool: ...
    
    def redo(self) -> None: ...
    
    def replaceEdit(self, undoableEdit: 'UndoableEdit') -> bool: ...
    
    def undo(self) -> None: ...
    
    
