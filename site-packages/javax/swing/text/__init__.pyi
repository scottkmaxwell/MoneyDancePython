import typing
import java.awt
import javax.accessibility
import javax.swing


class Highlighter:
    def __init__(self) -> None: ...
    
    def addHighlight(self, i: int, i2: int, s: str) -> object: ...
    
    def changeHighlight(self, o: object, i: int, i2: int) -> None: ...
    
    def deinstall(self, jTextComponent: 'JTextComponent') -> None: ...
    
    def getHighlights(self) -> typing.List[str]: ...
    
    def install(self, jTextComponent: 'JTextComponent') -> None: ...
    
    def paint(self, j: java.awt.Graphics) -> None: ...
    
    def removeAllHighlights(self) -> None: ...
    
    def removeHighlight(self, o: object) -> None: ...
    
    
    class Highlight:
        def __init__(self) -> None: ...
        
        def getEndOffset(self) -> int: ...
        
        def getPainter(self) -> str: ...
        
        def getStartOffset(self) -> int: ...
        
        
    class HighlightPainter:
        def __init__(self) -> None: ...
        
        def paint(self, j: java.awt.Graphics, i: int, i2: int, j2: java.awt.Shape, jTextComponent: 'JTextComponent') -> None: ...
        
        
    
class LayeredHighlighter(Highlighter):
    def __init__(self) -> None: ...
    
    def paintLayeredHighlights(self, j: java.awt.Graphics, i: int, i2: int, j2: java.awt.Shape, jTextComponent: 'JTextComponent', view: 'View') -> None: ...
    
    
    class LayerPainter:
        def __init__(self) -> None: ...
        
        def paintLayer(self, j: java.awt.Graphics, i: int, i2: int, j2: java.awt.Shape, jTextComponent: 'JTextComponent', view: 'View') -> java.awt.Shape: ...
        
        
    
class DefaultHighlighter(LayeredHighlighter):
    DefaultPainter = 'javax.swing.text.DefaultHighlighter$DefaultHighlightPainter'
    
    def __init__(self) -> None: ...
    
    def addHighlight(self, i: int, i2: int, s: str) -> object: ...
    
    def changeHighlight(self, o: object, i: int, i2: int) -> None: ...
    
    def deinstall(self, jTextComponent: 'JTextComponent') -> None: ...
    
    def getDrawsLayeredHighlights(self) -> bool: ...
    
    def getHighlights(self) -> typing.List[str]: ...
    
    def install(self, jTextComponent: 'JTextComponent') -> None: ...
    
    def paint(self, j: java.awt.Graphics) -> None: ...
    
    def paintLayeredHighlights(self, j: java.awt.Graphics, i: int, i2: int, j2: java.awt.Shape, jTextComponent: 'JTextComponent', view: 'View') -> None: ...
    
    def removeAllHighlights(self) -> None: ...
    
    def removeHighlight(self, o: object) -> None: ...
    
    def setDrawsLayeredHighlights(self, b: bool) -> None: ...
    
    
    class DefaultHighlightPainter:
        def __init__(self, j: java.awt.Color) -> None: ...
        
        def getColor(self) -> java.awt.Color: ...
        
        def paint(self, j: java.awt.Graphics, i: int, i2: int, j2: java.awt.Shape, jTextComponent: 'JTextComponent') -> None: ...
        
        def paintLayer(self, j: java.awt.Graphics, i: int, i2: int, j2: java.awt.Shape, jTextComponent: 'JTextComponent', view: 'View') -> java.awt.Shape: ...
        
        
    
class JTextComponent(javax.swing.JComponent, javax.swing.Scrollable, javax.accessibility.Accessible):
    def getText(self) -> str: ...
    
    
