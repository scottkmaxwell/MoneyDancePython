import java.awt
import java.beans
import javax.swing
import javax.swing.event
import javax.swing.plaf
import javax.swing.tree


class BasicButtonUI(javax.swing.plaf.ButtonUI):
    def __init__(self) -> None: ...
    
    @staticmethod
    def createUI(j: javax.swing.JComponent) -> javax.swing.plaf.ComponentUI: ...
    
    def getBaseline(self, j: javax.swing.JComponent, i: int, i2: int) -> int: ...
    
    def getBaselineResizeBehavior(self, j: javax.swing.JComponent) -> str: ...
    
    def getDefaultTextIconGap(self, j: javax.swing.AbstractButton) -> int: ...
    
    def getMaximumSize(self, j: javax.swing.JComponent) -> java.awt.Dimension: ...
    
    def getMinimumSize(self, j: javax.swing.JComponent) -> java.awt.Dimension: ...
    
    def getPreferredSize(self, j: javax.swing.JComponent) -> java.awt.Dimension: ...
    
    def installUI(self, j: javax.swing.JComponent) -> None: ...
    
    def paint(self, j: java.awt.Graphics, j2: javax.swing.JComponent) -> None: ...
    
    def uninstallUI(self, j: javax.swing.JComponent) -> None: ...
    
    
class BasicProgressBarUI(javax.swing.plaf.ProgressBarUI):
    def __init__(self) -> None: ...
    
    @staticmethod
    def createUI(j: javax.swing.JComponent) -> javax.swing.plaf.ComponentUI: ...
    
    def getBaseline(self, j: javax.swing.JComponent, i: int, i2: int) -> int: ...
    
    def getBaselineResizeBehavior(self, j: javax.swing.JComponent) -> str: ...
    
    def getMaximumSize(self, j: javax.swing.JComponent) -> java.awt.Dimension: ...
    
    def getMinimumSize(self, j: javax.swing.JComponent) -> java.awt.Dimension: ...
    
    def getPreferredSize(self, j: javax.swing.JComponent) -> java.awt.Dimension: ...
    
    def installUI(self, j: javax.swing.JComponent) -> None: ...
    
    def paint(self, j: java.awt.Graphics, j2: javax.swing.JComponent) -> None: ...
    
    def uninstallUI(self, j: javax.swing.JComponent) -> None: ...
    
    
    class ChangeHandler:
        def __init__(self, basicProgressBarUI: 'BasicProgressBarUI') -> None: ...
        
        def stateChanged(self, j: javax.swing.event.ChangeEvent) -> None: ...
        
        
    
class BasicScrollBarUI(javax.swing.plaf.ScrollBarUI, java.awt.LayoutManager, javax.swing.SwingConstants):
    BOTTOM = 3
    CENTER = 0
    EAST = 3
    HORIZONTAL = 0
    LEADING = 10
    LEFT = 2
    NEXT = 12
    NORTH = 1
    NORTH_EAST = 2
    NORTH_WEST = 8
    PREVIOUS = 13
    RIGHT = 4
    SOUTH = 5
    SOUTH_EAST = 4
    SOUTH_WEST = 6
    TOP = 1
    TRAILING = 11
    VERTICAL = 1
    WEST = 7
    
    def __init__(self) -> None: ...
    
    def addLayoutComponent(self, s: str, j: java.awt.Component) -> None: ...
    
    @staticmethod
    def createUI(j: javax.swing.JComponent) -> javax.swing.plaf.ComponentUI: ...
    
    def getMaximumSize(self, j: javax.swing.JComponent) -> java.awt.Dimension: ...
    
    def getPreferredSize(self, j: javax.swing.JComponent) -> java.awt.Dimension: ...
    
    def getSupportsAbsolutePositioning(self) -> bool: ...
    
    def installUI(self, j: javax.swing.JComponent) -> None: ...
    
    def isThumbRollover(self) -> bool: ...
    
    def layoutContainer(self, j: java.awt.Container) -> None: ...
    
    def minimumLayoutSize(self, j: java.awt.Container) -> java.awt.Dimension: ...
    
    def paint(self, j: java.awt.Graphics, j2: javax.swing.JComponent) -> None: ...
    
    def preferredLayoutSize(self, j: java.awt.Container) -> java.awt.Dimension: ...
    
    def removeLayoutComponent(self, j: java.awt.Component) -> None: ...
    
    def uninstallUI(self, j: javax.swing.JComponent) -> None: ...
    
    
    class PropertyChangeHandler:
        def __init__(self, basicScrollBarUI: 'BasicScrollBarUI') -> None: ...
        
        def propertyChange(self, j: java.beans.PropertyChangeEvent) -> None: ...
        
        
    
class BasicTreeUI(javax.swing.plaf.TreeUI):
    def __init__(self) -> None: ...
    
    def cancelEditing(self, j: javax.swing.JTree) -> None: ...
    
    @staticmethod
    def createUI(j: javax.swing.JComponent) -> javax.swing.plaf.ComponentUI: ...
    
    def getBaseline(self, j: javax.swing.JComponent, i: int, i2: int) -> int: ...
    
    def getBaselineResizeBehavior(self, j: javax.swing.JComponent) -> str: ...
    
    def getClosestPathForLocation(self, j: javax.swing.JTree, i: int, i2: int) -> javax.swing.tree.TreePath: ...
    
    def getCollapsedIcon(self) -> javax.swing.Icon: ...
    
    def getEditingPath(self, j: javax.swing.JTree) -> javax.swing.tree.TreePath: ...
    
    def getExpandedIcon(self) -> javax.swing.Icon: ...
    
    def getLeftChildIndent(self) -> int: ...
    
    def getMaximumSize(self, j: javax.swing.JComponent) -> java.awt.Dimension: ...
    
    def getMinimumSize(self, j: javax.swing.JComponent) -> java.awt.Dimension: ...
    
    def getPathBounds(self, j: javax.swing.JTree, j2: javax.swing.tree.TreePath) -> java.awt.Rectangle: ...
    
    def getPathForRow(self, j: javax.swing.JTree, i: int) -> javax.swing.tree.TreePath: ...
    
    def getPreferredMinSize(self) -> java.awt.Dimension: ...
    
    def getPreferredSize(self, j: javax.swing.JComponent) -> java.awt.Dimension: ...
    
    def getRightChildIndent(self) -> int: ...
    
    def getRowCount(self, j: javax.swing.JTree) -> int: ...
    
    def getRowForPath(self, j: javax.swing.JTree, j2: javax.swing.tree.TreePath) -> int: ...
    
    def installUI(self, j: javax.swing.JComponent) -> None: ...
    
    def isEditing(self, j: javax.swing.JTree) -> bool: ...
    
    def paint(self, j: java.awt.Graphics, j2: javax.swing.JComponent) -> None: ...
    
    def setCollapsedIcon(self, j: javax.swing.Icon) -> None: ...
    
    def setExpandedIcon(self, j: javax.swing.Icon) -> None: ...
    
    def setLeftChildIndent(self, i: int) -> None: ...
    
    def setPreferredMinSize(self, j: java.awt.Dimension) -> None: ...
    
    def setRightChildIndent(self, i: int) -> None: ...
    
    def startEditingAtPath(self, j: javax.swing.JTree, j2: javax.swing.tree.TreePath) -> None: ...
    
    def stopEditing(self, j: javax.swing.JTree) -> bool: ...
    
    def uninstallUI(self, j: javax.swing.JComponent) -> None: ...
    
    
    class CellEditorHandler:
        def __init__(self, basicTreeUI: 'BasicTreeUI') -> None: ...
        
        def editingCanceled(self, j: javax.swing.event.ChangeEvent) -> None: ...
        
        def editingStopped(self, j: javax.swing.event.ChangeEvent) -> None: ...
        
        
    class ComponentHandler:
        def __init__(self, basicTreeUI: 'BasicTreeUI') -> None: ...
        
        def actionPerformed(self, j: 'java.awt.event.ActionEvent') -> None: ...
        
        def componentMoved(self, j: 'java.awt.event.ComponentEvent') -> None: ...
        
        
    class FocusHandler:
        def __init__(self, basicTreeUI: 'BasicTreeUI') -> None: ...
        
        def focusGained(self, j: 'java.awt.event.FocusEvent') -> None: ...
        
        def focusLost(self, j: 'java.awt.event.FocusEvent') -> None: ...
        
        
    class KeyHandler:
        def __init__(self, basicTreeUI: 'BasicTreeUI') -> None: ...
        
        def keyPressed(self, j: 'java.awt.event.KeyEvent') -> None: ...
        
        def keyReleased(self, j: 'java.awt.event.KeyEvent') -> None: ...
        
        def keyTyped(self, j: 'java.awt.event.KeyEvent') -> None: ...
        
        
    class MouseHandler:
        def __init__(self, basicTreeUI: 'BasicTreeUI') -> None: ...
        
        def mouseDragged(self, j: 'java.awt.event.MouseEvent') -> None: ...
        
        def mouseMoved(self, j: 'java.awt.event.MouseEvent') -> None: ...
        
        def mousePressed(self, j: 'java.awt.event.MouseEvent') -> None: ...
        
        def mouseReleased(self, j: 'java.awt.event.MouseEvent') -> None: ...
        
        
    class MouseInputHandler:
        def __init__(self, basicTreeUI: 'BasicTreeUI', j: java.awt.Component, j2: java.awt.Component, j3: 'java.awt.event.MouseEvent') -> None: ...
        
        def mouseClicked(self, j: 'java.awt.event.MouseEvent') -> None: ...
        
        def mouseDragged(self, j: 'java.awt.event.MouseEvent') -> None: ...
        
        def mouseEntered(self, j: 'java.awt.event.MouseEvent') -> None: ...
        
        def mouseExited(self, j: 'java.awt.event.MouseEvent') -> None: ...
        
        def mouseMoved(self, j: 'java.awt.event.MouseEvent') -> None: ...
        
        def mousePressed(self, j: 'java.awt.event.MouseEvent') -> None: ...
        
        def mouseReleased(self, j: 'java.awt.event.MouseEvent') -> None: ...
        
        
    class NodeDimensionsHandler:
        def __init__(self, basicTreeUI: 'BasicTreeUI') -> None: ...
        
        def getNodeDimensions(self, o: object, i: int, i2: int, b: bool, j: java.awt.Rectangle) -> java.awt.Rectangle: ...
        
        
    class PropertyChangeHandler:
        def __init__(self, basicTreeUI: 'BasicTreeUI') -> None: ...
        
        def propertyChange(self, j: java.beans.PropertyChangeEvent) -> None: ...
        
        
    class SelectionModelPropertyChangeHandler:
        def __init__(self, basicTreeUI: 'BasicTreeUI') -> None: ...
        
        def propertyChange(self, j: java.beans.PropertyChangeEvent) -> None: ...
        
        
    class TreeCancelEditingAction:
        pass
        
    class TreeExpansionHandler:
        def __init__(self, basicTreeUI: 'BasicTreeUI') -> None: ...
        
        def treeCollapsed(self, j: javax.swing.event.TreeExpansionEvent) -> None: ...
        
        def treeExpanded(self, j: javax.swing.event.TreeExpansionEvent) -> None: ...
        
        
    class TreeHomeAction:
        pass
        
    class TreeIncrementAction:
        pass
        
    class TreeModelHandler:
        def __init__(self, basicTreeUI: 'BasicTreeUI') -> None: ...
        
        def treeNodesChanged(self, j: javax.swing.event.TreeModelEvent) -> None: ...
        
        def treeNodesInserted(self, j: javax.swing.event.TreeModelEvent) -> None: ...
        
        def treeNodesRemoved(self, j: javax.swing.event.TreeModelEvent) -> None: ...
        
        def treeStructureChanged(self, j: javax.swing.event.TreeModelEvent) -> None: ...
        
        
    class TreePageAction:
        pass
        
    class TreeSelectionHandler:
        def __init__(self, basicTreeUI: 'BasicTreeUI') -> None: ...
        
        def valueChanged(self, j: javax.swing.event.TreeSelectionEvent) -> None: ...
        
        
    class TreeToggleAction:
        pass
        
    class TreeTraverseAction:
        pass
        
    
