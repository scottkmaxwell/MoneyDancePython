import typing
import java.net
import java.security
import java.security.cert
import javax.net


class HttpsURLConnection(java.net.HttpURLConnection):
    HTTP_ACCEPTED = 202
    HTTP_BAD_GATEWAY = 502
    HTTP_BAD_METHOD = 405
    HTTP_BAD_REQUEST = 400
    HTTP_CLIENT_TIMEOUT = 408
    HTTP_CONFLICT = 409
    HTTP_CREATED = 201
    HTTP_ENTITY_TOO_LARGE = 413
    HTTP_FORBIDDEN = 403
    HTTP_GATEWAY_TIMEOUT = 504
    HTTP_GONE = 410
    HTTP_INTERNAL_ERROR = 500
    HTTP_LENGTH_REQUIRED = 411
    HTTP_MOVED_PERM = 301
    HTTP_MOVED_TEMP = 302
    HTTP_MULT_CHOICE = 300
    HTTP_NOT_ACCEPTABLE = 406
    HTTP_NOT_AUTHORITATIVE = 203
    HTTP_NOT_FOUND = 404
    HTTP_NOT_IMPLEMENTED = 501
    HTTP_NOT_MODIFIED = 304
    HTTP_NO_CONTENT = 204
    HTTP_OK = 200
    HTTP_PARTIAL = 206
    HTTP_PAYMENT_REQUIRED = 402
    HTTP_PRECON_FAILED = 412
    HTTP_PROXY_AUTH = 407
    HTTP_REQ_TOO_LONG = 414
    HTTP_RESET = 205
    HTTP_SEE_OTHER = 303
    HTTP_SERVER_ERROR = 500
    HTTP_UNAUTHORIZED = 401
    HTTP_UNAVAILABLE = 503
    HTTP_UNSUPPORTED_TYPE = 415
    HTTP_USE_PROXY = 305
    HTTP_VERSION = 505
    
    def __init__(self) -> None: ...
    
    def getCipherSuite(self) -> str: ...
    
    @staticmethod
    def getDefaultHostnameVerifier() -> 'HostnameVerifier': ...
    
    @staticmethod
    def getDefaultSSLSocketFactory() -> 'SSLSocketFactory': ...
    
    def getHostnameVerifier(self) -> 'HostnameVerifier': ...
    
    def getLocalCertificates(self) -> typing.List[java.security.cert.Certificate]: ...
    
    def getLocalPrincipal(self) -> java.security.Principal: ...
    
    def getPeerPrincipal(self) -> java.security.Principal: ...
    
    def getSSLSession(self) -> typing.Any: ...
    
    def getSSLSocketFactory(self) -> 'SSLSocketFactory': ...
    
    def getServerCertificates(self) -> typing.List[java.security.cert.Certificate]: ...
    
    @staticmethod
    def setDefaultHostnameVerifier(hostnameVerifier: 'HostnameVerifier') -> None: ...
    
    @staticmethod
    def setDefaultSSLSocketFactory(sSLSocketFactory: 'SSLSocketFactory') -> None: ...
    
    def setHostnameVerifier(self, hostnameVerifier: 'HostnameVerifier') -> None: ...
    
    def setSSLSocketFactory(self, sSLSocketFactory: 'SSLSocketFactory') -> None: ...
    
    
class SSLSocketFactory(javax.net.SocketFactory):
    def __init__(self) -> None: ...
    
    @staticmethod
    def getDefault() -> javax.net.SocketFactory: ...
    
    def getDefaultCipherSuites(self) -> typing.List[str]: ...
    
    def getSupportedCipherSuites(self) -> typing.List[str]: ...
    
    
