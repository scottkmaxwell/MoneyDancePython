import java.io


class DeflaterOutputStream(java.io.FilterOutputStream):
    def __init__(self, j: java.io.OutputStream) -> None: ...
    
    def close(self) -> None: ...
    
    def finish(self) -> None: ...
    
    def flush(self) -> None: ...
    
    def write(self, i: int) -> None: ...
    
    
class ZipConstants:
    pass
    
class ZipOutputStream(DeflaterOutputStream, ZipConstants):
    DEFLATED = 8
    STORED = 0
    
    def __init__(self, j: java.io.OutputStream) -> None: ...
    
    def close(self) -> None: ...
    
    def closeEntry(self) -> None: ...
    
    def finish(self) -> None: ...
    
    def putNextEntry(self, zipEntry: 'ZipEntry') -> None: ...
    
    def setComment(self, s: str) -> None: ...
    
    def setLevel(self, i: int) -> None: ...
    
    def setMethod(self, i: int) -> None: ...
    
    
