import typing
import java.lang
import javax.print
import javax.print.attribute


class PageFormat(java.lang.Cloneable):
    LANDSCAPE = 0
    PORTRAIT = 1
    REVERSE_LANDSCAPE = 2
    
    def __init__(self) -> None: ...
    
    def clone(self) -> object: ...
    
    def getHeight(self) -> float: ...
    
    def getImageableHeight(self) -> float: ...
    
    def getImageableWidth(self) -> float: ...
    
    def getImageableX(self) -> float: ...
    
    def getImageableY(self) -> float: ...
    
    def getMatrix(self) -> typing.List[float]: ...
    
    def getOrientation(self) -> int: ...
    
    def getPaper(self) -> 'Paper': ...
    
    def getWidth(self) -> float: ...
    
    def setOrientation(self, i: int) -> None: ...
    
    def setPaper(self, paper: 'Paper') -> None: ...
    
    
class PrinterJob:
    @typing.overload
    def printDialog(self, attributes: javax.print.attribute.PrintRequestAttributeSet) -> bool: ...
    @typing.overload
    def setPrintable(self, printable: 'Printable', format: PageFormat) -> None: ...
    
    def __init__(self) -> None: ...
    
    def cancel(self) -> None: ...
    
    def defaultPage(self) -> PageFormat: ...
    
    def getCopies(self) -> int: ...
    
    def getJobName(self) -> str: ...
    
    def getPageFormat(self, j: javax.print.attribute.PrintRequestAttributeSet) -> PageFormat: ...
    
    def getPrintService(self) -> javax.print.PrintService: ...
    
    @staticmethod
    def getPrinterJob() -> 'PrinterJob': ...
    
    def getUserName(self) -> str: ...
    
    def isCancelled(self) -> bool: ...
    
    @staticmethod
    def lookupPrintServices() -> typing.List[javax.print.PrintService]: ...
    
    @staticmethod
    def lookupStreamPrintServices(s: str) -> typing.List[javax.print.StreamPrintServiceFactory]: ...
    
    def pageDialog(self, pageFormat: PageFormat) -> PageFormat: ...
    
    def print(self) -> None: ...
    
    def printDialog(self) -> bool: ...
    
    def setCopies(self, i: int) -> None: ...
    
    def setJobName(self, s: str) -> None: ...
    
    def setPageable(self, pageable: 'Pageable') -> None: ...
    
    def setPrintService(self, j: javax.print.PrintService) -> None: ...
    
    def setPrintable(self, printable: 'Printable') -> None: ...
    
    def validatePage(self, pageFormat: PageFormat) -> PageFormat: ...
    
    
