import typing


class Transferable:
    def __init__(self) -> None: ...
    
    def getTransferData(self, dataFlavor: 'DataFlavor') -> object: ...
    
    def getTransferDataFlavors(self) -> typing.List['DataFlavor']: ...
    
    def isDataFlavorSupported(self, dataFlavor: 'DataFlavor') -> bool: ...
    
    
class ClipboardOwner:
    def __init__(self) -> None: ...
    
    def lostOwnership(self, clipboard: 'Clipboard', transferable: Transferable) -> None: ...
    
    
class StringSelection(Transferable, ClipboardOwner):
    def __init__(self, s: str) -> None: ...
    
    def getTransferData(self, dataFlavor: 'DataFlavor') -> object: ...
    
    def getTransferDataFlavors(self) -> typing.List['DataFlavor']: ...
    
    def isDataFlavorSupported(self, dataFlavor: 'DataFlavor') -> bool: ...
    
    def lostOwnership(self, clipboard: 'Clipboard', transferable: Transferable) -> None: ...
    
    
